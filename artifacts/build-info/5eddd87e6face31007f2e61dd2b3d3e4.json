{
  "id": "5eddd87e6face31007f2e61dd2b3d3e4",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.11",
  "solcLongVersion": "0.8.11+commit.d7f03943",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/DepositQueue.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\ncontract DepositQueue {\n    struct Deposit {\n        uint256 amount;\n        address sender;\n    }\n\n    Deposit[] depositQueue;\n    uint256 topIndex;\n\n    function isDepositQueueEmpty() internal view returns(bool) {\n        return depositQueue.length <= topIndex;\n    }\n\n    modifier nonEmpty() {\n        require(!isDepositQueueEmpty());\n        _;\n    }\n\n    function pushDeposit(uint256 _amount, address _sender) internal {\n        depositQueue.push(Deposit(_amount, _sender));\n    }\n\n    function popDeposit() internal nonEmpty returns(Deposit memory) {\n        delete depositQueue[topIndex];\n        topIndex++;\n    }\n\n    function getTopDeposit() internal nonEmpty view returns(Deposit memory) {\n        return depositQueue[topIndex];\n    }\n\n    function setTopDepositAmount(uint256 _amount) internal nonEmpty {\n        depositQueue[topIndex].amount = _amount;\n    }\n\n    function numDeposits() external view returns(uint256) {\n        return depositQueue.length - topIndex;\n    }\n\n    function getDeposit(uint256 _index) external view nonEmpty returns(Deposit memory) {\n        require(topIndex + _index < depositQueue.length, 'Index out of bounds');\n        return depositQueue[topIndex + _index];\n    }\n}"
      },
      "contracts/HyksosCyberkongz.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\nimport '../openzeppelin/token/ERC721/IERC721.sol';\nimport '../openzeppelin/token/ERC721/IERC721Receiver.sol';\nimport '../openzeppelin/token/ERC20/IERC20.sol';\n\nimport './DepositQueue.sol';\nimport './IHyksos.sol';\n\ninterface IKongz is IERC721 {\n    function balanceOG(address _user) external view returns(uint256);\n    function getReward() external;\n}\n\ncontract HyksosCyberkongz is IHyksos, DepositQueue {\n    \n    IKongz kongz;\n    IERC20 bananas;\n\n    struct DepositedNft {\n        uint256 timeDeposited;\n        address owner;\n        Deposit[] shareholders;\n    }\n\n    mapping(address => uint256) bananaBalance;\n    mapping(uint256 => DepositedNft) depositedKongs;\n    mapping(address => bool) isAutoCompoundOff; // interpret 0 as ON, to use default values more efficiently. Use normal mapping true=>ON everywhere outside this map.\n    uint256 totalBananasBalance;\n\n    uint256 constant DEPOSIT_LENGTH_DAYS = 10; // TBD\n    uint256 constant DEPOSIT_LENGTH_SECONDS = DEPOSIT_LENGTH_DAYS * 86400;\n    uint256 constant BASE_RATE = 10 ether;\n    uint256 constant MIN_DEPOSIT = 1 * BASE_RATE; // TBD\n    uint256 constant ROI_PCTG = 80; // TBD\n    uint256 constant KONG_WORK_VALUE = BASE_RATE * DEPOSIT_LENGTH_DAYS;\n    uint256 constant LOAN_AMOUNT = KONG_WORK_VALUE * ROI_PCTG / 100;\n\n\n    constructor(address _bananas, address _kongz) {\n        kongz = IKongz(_kongz);\n        bananas = IERC20(_bananas);\n    }\n\n    function depositErc20(uint256 _amount, bool _isAutoCompoundOn) external override {\n        bananaBalance[msg.sender] += _amount;\n        pushDeposit(_amount, msg.sender);\n        totalBananasBalance += _amount;\n        _setAutoCompoundStrategy(_isAutoCompoundOn);\n        bananas.transferFrom(msg.sender, address(this), _amount);\n        emit Erc20Deposit(msg.sender, _amount);\n    }\n\n    function withdrawErc20(uint256 _amount) external override {\n        require(_amount <= bananaBalance[msg.sender], \"Withdrawal amount too big.\");\n        totalBananasBalance -= _amount;\n        bananaBalance[msg.sender] -= _amount;\n        bananas.transfer(msg.sender, _amount);\n        emit Erc20Withdrawal(msg.sender, _amount);\n    }\n\n    function depositNft(uint256 _id) external override {\n        require(isValidKong(_id), \"Can't deposit this Kong.\");\n        depositedKongs[_id].timeDeposited = block.timestamp;\n        depositedKongs[_id].owner = msg.sender;\n        selectShareholders(_id);\n        kongz.transferFrom(msg.sender, address(this), _id);\n        bananas.transfer(msg.sender, LOAN_AMOUNT);\n        emit NftDeposit(msg.sender, _id);\n    }\n\n    function withdrawNft(uint256 _id) external override {\n        require(depositedKongs[_id].timeDeposited + DEPOSIT_LENGTH_SECONDS < block.timestamp, \"Too early to withdraw.\");\n        uint256 reward = calcReward(block.timestamp - depositedKongs[_id].timeDeposited);\n        kongz.getReward();\n        distributeRewards(reward, _id);\n        kongz.transferFrom(address(this), depositedKongs[_id].owner, _id);\n        emit NftWithdrawal(depositedKongs[_id].owner, _id);\n        delete depositedKongs[_id];\n    }\n\n    function setAutoCompoundStrategy(bool _isAutoCompoundOn) external override {\n        _setAutoCompoundStrategy(_isAutoCompoundOn);\n    }\n\n    function _setAutoCompoundStrategy(bool _isAutoCompoundOn) internal {\n        if (isAutoCompoundOff[msg.sender] == _isAutoCompoundOn) {\n            isAutoCompoundOff[msg.sender] = !_isAutoCompoundOn;\n        }\n    }\n\n    function distributeRewards(uint256 _reward, uint256 _id) internal {\n        // Most probable scenario, so we check it first\n        if (msg.sender == depositedKongs[_id].owner) {\n            withdrawNftAndShareRewardEqually(_id, _reward);\n        } else {\n            // Check if the caller is one of the shareholders\n            for (uint i = 0; i < depositedKongs[_id].shareholders.length; i++) {\n                if (msg.sender == depositedKongs[_id].shareholders[i].sender) {\n                    withdrawNftAndRewardClaimant(_id, _reward, i);\n                    return;\n                }\n            }\n            // Method called from account not involved in this lend. Share rewards equally.\n            withdrawNftAndShareRewardEqually(_id, _reward);\n        }\n    }\n\n    function withdrawNftAndShareRewardEqually(uint256 _id, uint256 _reward) internal {\n        for (uint i = 0; i < depositedKongs[_id].shareholders.length; i++) {\n            Deposit memory d = depositedKongs[_id].shareholders[i];\n            uint256 payback = d.amount * _reward / LOAN_AMOUNT;\n            payRewardAccordingToStrategy(d.sender, payback);\n        }\n    }\n\n    function withdrawNftAndRewardClaimant(uint256 _id, uint256 _reward, uint256 _claimantId) internal {\n        for (uint i = 0; i < depositedKongs[_id].shareholders.length; i++) {\n            Deposit memory d = depositedKongs[_id].shareholders[i];\n            uint256 payback = d.amount * 100 / ROI_PCTG;\n            if (i == _claimantId) {\n                payback += _reward - KONG_WORK_VALUE;\n            }\n            payRewardAccordingToStrategy(d.sender, payback);\n        }\n    }\n\n    function selectShareholders(uint256 _id) internal {\n        require(totalBananasBalance >= LOAN_AMOUNT, \"Not enough bananas to fund a loan.\");\n        uint256 selectedAmount = 0;\n        while (!isDepositQueueEmpty()) {\n            Deposit memory d = getTopDeposit();\n            if (bananaBalance[d.sender] == 0) {\n                popDeposit();\n                continue;\n            }\n            uint256 depositAmount;\n            if (bananaBalance[d.sender] < d.amount) {\n                depositAmount = bananaBalance[d.sender];\n            } else {\n                depositAmount = d.amount;\n            }\n            uint256 resultingAmount = selectedAmount + depositAmount;\n            if (resultingAmount > LOAN_AMOUNT) {\n                uint256 usedAmount = LOAN_AMOUNT - selectedAmount;\n                uint256 leftAmount = depositAmount - usedAmount;\n                setTopDepositAmount(leftAmount);\n                depositedKongs[_id].shareholders.push(Deposit(usedAmount, d.sender));\n                bananaBalance[d.sender] -= usedAmount;\n                totalBananasBalance -= usedAmount;\n                return;\n            } else {\n                depositedKongs[_id].shareholders.push(Deposit(depositAmount, d.sender));\n                selectedAmount = resultingAmount;\n                bananaBalance[d.sender] -= depositAmount;\n                totalBananasBalance -= depositAmount;\n                popDeposit();\n                if (resultingAmount == LOAN_AMOUNT) {\n                    return;\n                }\n            }\n        }\n        // if while loop does not return early, we don't have enough bananas.\n        revert(\"Not enough deposits.\");\n    }\n\n    function payRewardAccordingToStrategy(address _receiver, uint256 _amount) internal {\n        if (isAutoCompoundOff[_receiver]) {\n            bananas.transfer(_receiver, _amount);\n        } else {\n            bananaBalance[_receiver] += _amount;\n            pushDeposit(_amount, _receiver);\n            totalBananasBalance += _amount;\n        }\n    }\n\n    function isValidKong(uint256 _id) internal pure returns(bool) {\n        return _id < 1001;\n    }\n\n    function calcReward(uint256 _time) internal pure returns(uint256) {\n        return BASE_RATE * _time / 86400;\n    }\n\n    function erc20Balance(address _addr) external view override returns(uint256) {\n        return bananaBalance[_addr];\n    }\n\n    function totalErc20() external view override returns(uint256) {\n        return totalBananasBalance;\n    }\n\n    function depositedNft(uint256 _id) external view returns(DepositedNft memory) {\n        return depositedKongs[_id];\n    }\n\n    function autoCompoundStrategy(address _addr) external view override returns(bool) {\n        return !isAutoCompoundOff[_addr];\n    }\n\n}"
      },
      "openzeppelin/token/ERC721/IERC721.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n}\n"
      },
      "openzeppelin/token/ERC721/IERC721Receiver.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
      },
      "openzeppelin/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
      },
      "contracts/IHyksos.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\ninterface IHyksos {\n    \n    function depositErc20(uint256 _amount, bool _isAutoCompoundOn) external;\n    function withdrawErc20(uint256 _amount) external;\n    function depositNft(uint256 _id) external;\n    function withdrawNft(uint256 _id) external;\n    function setAutoCompoundStrategy(bool _isAutoCompoundOn) external;\n    function erc20Balance(address _addr) external view returns(uint256);\n    function totalErc20() external view returns(uint256);\n    function autoCompoundStrategy(address _addr) external view returns(bool);\n\n    event Erc20Deposit(address indexed addr, uint256 value);\n    event Erc20Withdrawal(address indexed addr, uint256 value);\n    event NftDeposit(address indexed addr, uint256 id);\n    event NftWithdrawal(address indexed addr, uint256 id);\n}"
      },
      "openzeppelin/utils/introspection/IERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/DepositQueue.sol": {
        "DepositQueue": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_index",
                  "type": "uint256"
                }
              ],
              "name": "getDeposit",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "sender",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct DepositQueue.Deposit",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "numDeposits",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50610224806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80639f9fb9681461003b578063bbd4e8c914610077575b600080fd5b61004e61004936600461017a565b61008d565b60408051825181526020928301516001600160a01b031692810192909252015b60405180910390f35b61007f610163565b60405190815260200161006e565b6040805180820190915260008082526020820152600154600054116100b157600080fd5b6000546001546100c29084906101a9565b106101095760405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b604482015260640160405180910390fd5b60008260015461011991906101a9565b81548110610129576101296101c1565b60009182526020918290206040805180820190915260029092020180548252600101546001600160a01b0316918101919091529050919050565b600154600080549091610175916101d7565b905090565b60006020828403121561018c57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156101bc576101bc610193565b500190565b634e487b7160e01b600052603260045260246000fd5b6000828210156101e9576101e9610193565b50039056fea2646970667358221220366f00e2250a91d4249cd9ff51715debda22e27427b6fddc7d5117e908c0ae4064736f6c634300080b0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9F9FB968 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xBBD4E8C9 EQ PUSH2 0x77 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x17A JUMP JUMPDEST PUSH2 0x8D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7F PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD GT PUSH2 0xB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH2 0xC2 SWAP1 DUP5 SWAP1 PUSH2 0x1A9 JUMP JUMPDEST LT PUSH2 0x109 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E646578206F7574206F6620626F756E6473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 SLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x1A9 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x129 JUMPI PUSH2 0x129 PUSH2 0x1C1 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 SWAP1 SWAP3 MUL ADD DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD SWAP1 SWAP2 PUSH2 0x175 SWAP2 PUSH2 0x1D7 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1BC JUMPI PUSH2 0x1BC PUSH2 0x193 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1E9 JUMPI PUSH2 0x1E9 PUSH2 0x193 JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE PUSH16 0xE2250A91D4249CD9FF51715DEBDA22 0xE2 PUSH21 0x27B6FDDC7D5117E908C0AE4064736F6C634300080B STOP CALLER ",
              "sourceMap": "58:1212:0:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@getDeposit_133": {
                  "entryPoint": 141,
                  "id": 133,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@isDepositQueueEmpty_23": {
                  "entryPoint": null,
                  "id": 23,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@numDeposits_106": {
                  "entryPoint": 355,
                  "id": 106,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint256": {
                  "entryPoint": 378,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_struct$_Deposit_$6_memory_ptr__to_t_struct$_Deposit_$6_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_t_uint256": {
                  "entryPoint": 425,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_t_uint256": {
                  "entryPoint": 471,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 403,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x32": {
                  "entryPoint": 449,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:1575:7",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:7",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "84:110:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "130:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "139:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "142:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "132:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "132:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "132:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "105:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "114:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "101:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "101:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "126:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "97:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "97:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "94:52:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "155:33:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "178:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "165:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "165:23:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "155:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "50:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "61:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "73:6:7",
                            "type": ""
                          }
                        ],
                        "src": "14:180:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "344:172:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "354:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "366:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "377:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "362:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "362:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "354:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "396:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "413:6:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "407:5:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "407:13:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "389:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "389:32:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "389:32:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "441:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "452:4:7",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "437:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "437:20:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "value0",
                                                "nodeType": "YulIdentifier",
                                                "src": "473:6:7"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "481:4:7",
                                                "type": "",
                                                "value": "0x20"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "469:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "469:17:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nodeType": "YulIdentifier",
                                          "src": "463:5:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "463:24:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "497:3:7",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "502:1:7",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "493:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "493:11:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "506:1:7",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "489:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "489:19:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "459:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "459:50:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "430:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "430:80:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "430:80:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_struct$_Deposit_$6_memory_ptr__to_t_struct$_Deposit_$6_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "313:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "324:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "335:4:7",
                            "type": ""
                          }
                        ],
                        "src": "199:317:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "622:76:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "632:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "644:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "655:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "640:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "640:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "632:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "674:9:7"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "685:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "667:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "667:25:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "667:25:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "591:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "602:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "613:4:7",
                            "type": ""
                          }
                        ],
                        "src": "521:177:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "735:95:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "752:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "759:3:7",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "764:10:7",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "755:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "755:20:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "745:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "745:31:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "745:31:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "792:1:7",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "795:4:7",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "785:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "785:15:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "785:15:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "816:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "819:4:7",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "809:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "809:15:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "809:15:7"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "703:127:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "883:80:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "910:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "912:16:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "912:18:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "912:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "899:1:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "906:1:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "902:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "902:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "896:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "896:13:7"
                              },
                              "nodeType": "YulIf",
                              "src": "893:39:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "941:16:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "952:1:7"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "955:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "948:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "948:9:7"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "941:3:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "866:1:7",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "869:1:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "875:3:7",
                            "type": ""
                          }
                        ],
                        "src": "835:128:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1142:169:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1159:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1170:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1152:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1152:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1152:21:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1193:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1204:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1189:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1189:18:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1209:2:7",
                                    "type": "",
                                    "value": "19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1182:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1182:30:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1182:30:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1232:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1243:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1228:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1228:18:7"
                                  },
                                  {
                                    "hexValue": "496e646578206f7574206f6620626f756e6473",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "1248:21:7",
                                    "type": "",
                                    "value": "Index out of bounds"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1221:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1221:49:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1221:49:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1279:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1291:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1302:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1287:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1287:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1279:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1119:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1133:4:7",
                            "type": ""
                          }
                        ],
                        "src": "968:343:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1348:95:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1365:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1372:3:7",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1377:10:7",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1368:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1368:20:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1358:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1358:31:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1358:31:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1405:1:7",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1408:4:7",
                                    "type": "",
                                    "value": "0x32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1398:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1398:15:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1398:15:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1429:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1432:4:7",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1422:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1422:15:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1422:15:7"
                            }
                          ]
                        },
                        "name": "panic_error_0x32",
                        "nodeType": "YulFunctionDefinition",
                        "src": "1316:127:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1497:76:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1519:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1521:16:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1521:18:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1521:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "1513:1:7"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "1516:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1510:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1510:8:7"
                              },
                              "nodeType": "YulIf",
                              "src": "1507:34:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1550:17:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "1562:1:7"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "1565:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1558:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1558:9:7"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "1550:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "1479:1:7",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "1482:1:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "1488:4:7",
                            "type": ""
                          }
                        ],
                        "src": "1448:125:7"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_struct$_Deposit_$6_memory_ptr__to_t_struct$_Deposit_$6_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Index out of bounds\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n}",
                  "id": 7,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80639f9fb9681461003b578063bbd4e8c914610077575b600080fd5b61004e61004936600461017a565b61008d565b60408051825181526020928301516001600160a01b031692810192909252015b60405180910390f35b61007f610163565b60405190815260200161006e565b6040805180820190915260008082526020820152600154600054116100b157600080fd5b6000546001546100c29084906101a9565b106101095760405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b604482015260640160405180910390fd5b60008260015461011991906101a9565b81548110610129576101296101c1565b60009182526020918290206040805180820190915260029092020180548252600101546001600160a01b0316918101919091529050919050565b600154600080549091610175916101d7565b905090565b60006020828403121561018c57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156101bc576101bc610193565b500190565b634e487b7160e01b600052603260045260246000fd5b6000828210156101e9576101e9610193565b50039056fea2646970667358221220366f00e2250a91d4249cd9ff51715debda22e27427b6fddc7d5117e908c0ae4064736f6c634300080b0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9F9FB968 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xBBD4E8C9 EQ PUSH2 0x77 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x17A JUMP JUMPDEST PUSH2 0x8D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7F PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD GT PUSH2 0xB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH2 0xC2 SWAP1 DUP5 SWAP1 PUSH2 0x1A9 JUMP JUMPDEST LT PUSH2 0x109 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E646578206F7574206F6620626F756E6473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 SLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x1A9 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x129 JUMPI PUSH2 0x129 PUSH2 0x1C1 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 SWAP1 SWAP3 MUL ADD DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD SWAP1 SWAP2 PUSH2 0x175 SWAP2 PUSH2 0x1D7 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1BC JUMPI PUSH2 0x1BC PUSH2 0x193 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1E9 JUMPI PUSH2 0x1E9 PUSH2 0x193 JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE PUSH16 0xE2250A91D4249CD9FF51715DEBDA22 0xE2 PUSH21 0x27B6FDDC7D5117E908C0AE4064736F6C634300080B STOP CALLER ",
              "sourceMap": "58:1212:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1049:219;;;;;;:::i;:::-;;:::i;:::-;;;;407:13:7;;389:32;;481:4;469:17;;;463:24;-1:-1:-1;;;;;459:50:7;437:20;;;430:80;;;;362:18;1049:219:0;;;;;;;;935:108;;;:::i;:::-;;;667:25:7;;;655:2;640:18;935:108:0;521:177:7;1049:219:0;-1:-1:-1;;;;;;;;;;;;;;;;;312:8:0;;266:4;289:19;:31;363;;;;;;1170:12:::1;:19:::0;1150:8:::1;::::0;:17:::1;::::0;1161:6;;1150:17:::1;:::i;:::-;:39;1142:71;;;::::0;-1:-1:-1;;;1142:71:0;;1170:2:7;1142:71:0::1;::::0;::::1;1152:21:7::0;1209:2;1189:18;;;1182:30;-1:-1:-1;;;1228:18:7;;;1221:49;1287:18;;1142:71:0::1;;;;;;;;1230:12;1254:6;1243:8;;:17;;;;:::i;:::-;1230:31;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;1223:38:::1;::::0;;;;::::1;::::0;;;1230:31:::1;::::0;;::::1;;1223:38:::0;;;;::::1;;::::0;-1:-1:-1;;;;;1223:38:0::1;::::0;;::::1;::::0;;;;;-1:-1:-1;1049:219:0;;;:::o;935:108::-;1028:8;;980:7;1006:19;;980:7;;1006:30;;;:::i;:::-;999:37;;935:108;:::o;14:180:7:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:7;;14:180;-1:-1:-1;14:180:7:o;703:127::-;764:10;759:3;755:20;752:1;745:31;795:4;792:1;785:15;819:4;816:1;809:15;835:128;875:3;906:1;902:6;899:1;896:13;893:39;;;912:18;;:::i;:::-;-1:-1:-1;948:9:7;;835:128::o;1316:127::-;1377:10;1372:3;1368:20;1365:1;1358:31;1408:4;1405:1;1398:15;1432:4;1429:1;1422:15;1448:125;1488:4;1516:1;1513;1510:8;1507:34;;;1521:18;;:::i;:::-;-1:-1:-1;1558:9:7;;1448:125::o"
            },
            "methodIdentifiers": {
              "getDeposit(uint256)": "9f9fb968",
              "numDeposits()": "bbd4e8c9"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getDeposit\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"internalType\":\"struct DepositQueue.Deposit\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DepositQueue.sol\":\"DepositQueue\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DepositQueue.sol\":{\"keccak256\":\"0x62df624f52709ef3ce0b0d5e499c111d3243104f84cc16a9a82a425caddff038\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7870bd388dcd56469d6c3c84009a18d6edc246194106a6282e022bf1f98adab8\",\"dweb:/ipfs/QmQGrjRLWeJDFjRWgjmcbAuvxWjbnWYnjJ7rFzUSfvYeBJ\"]}},\"version\":1}"
        }
      },
      "contracts/HyksosCyberkongz.sol": {
        "HyksosCyberkongz": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_bananas",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_kongz",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Erc20Deposit",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Erc20Withdrawal",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "NftDeposit",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "NftWithdrawal",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_addr",
                  "type": "address"
                }
              ],
              "name": "autoCompoundStrategy",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "_isAutoCompoundOn",
                  "type": "bool"
                }
              ],
              "name": "depositErc20",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_id",
                  "type": "uint256"
                }
              ],
              "name": "depositNft",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_id",
                  "type": "uint256"
                }
              ],
              "name": "depositedNft",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "timeDeposited",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "owner",
                      "type": "address"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "address",
                          "name": "sender",
                          "type": "address"
                        }
                      ],
                      "internalType": "struct DepositQueue.Deposit[]",
                      "name": "shareholders",
                      "type": "tuple[]"
                    }
                  ],
                  "internalType": "struct HyksosCyberkongz.DepositedNft",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_addr",
                  "type": "address"
                }
              ],
              "name": "erc20Balance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_index",
                  "type": "uint256"
                }
              ],
              "name": "getDeposit",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "sender",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct DepositQueue.Deposit",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "numDeposits",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bool",
                  "name": "_isAutoCompoundOn",
                  "type": "bool"
                }
              ],
              "name": "setAutoCompoundStrategy",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalErc20",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "withdrawErc20",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_id",
                  "type": "uint256"
                }
              ],
              "name": "withdrawNft",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_239": {
                  "entryPoint": null,
                  "id": 239,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_decode_address_fromMemory": {
                  "entryPoint": 99,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_addresst_address_fromMemory": {
                  "entryPoint": 127,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:491:7",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:7",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "74:117:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "84:22:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "99:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "93:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "93:13:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "84:5:7"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "169:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "178:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "181:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "171:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "171:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "171:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "128:5:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "139:5:7"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "154:3:7",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "159:1:7",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "150:3:7"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "150:11:7"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "163:1:7",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "146:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "146:19:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "135:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "135:31:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "125:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "125:42:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "118:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "118:50:7"
                              },
                              "nodeType": "YulIf",
                              "src": "115:70:7"
                            }
                          ]
                        },
                        "name": "abi_decode_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "53:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "64:5:7",
                            "type": ""
                          }
                        ],
                        "src": "14:177:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "294:195:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "340:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "349:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "352:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "342:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "342:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "342:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "315:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "324:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "311:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "311:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "336:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "307:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "307:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "304:52:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "365:50:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "405:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "375:29:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "375:40:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "365:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "424:59:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "468:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "479:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "464:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "464:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "434:29:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "434:49:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "424:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "252:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "263:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "275:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "283:6:7",
                            "type": ""
                          }
                        ],
                        "src": "196:293:7"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n}",
                  "id": 7,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b5060405161163138038061163183398101604081905261002f9161007f565b600280546001600160a01b039283166001600160a01b031991821617909155600380549390921692169190911790556100b2565b80516001600160a01b038116811461007a57600080fd5b919050565b6000806040838503121561009257600080fd5b61009b83610063565b91506100a960208401610063565b90509250929050565b611570806100c16000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80639c437e54116100715780639c437e541461014f5780639f9fb96814610162578063b478fc0714610182578063b7c3505f146101b9578063bbd4e8c9146101cc578063c0316aa3146101d457600080fd5b8063199402e5146100ae57806323ad6db2146100d7578063258ab15c1461011457806390babe8b14610129578063910efae81461013c575b600080fd5b6100c16100bc366004611318565b6101dc565b6040516100ce9190611331565b60405180910390f35b6101046100e53660046113bb565b6001600160a01b031660009081526006602052604090205460ff161590565b60405190151581526020016100ce565b610127610122366004611318565b61029d565b005b6101276101373660046113f9565b6103eb565b61012761014a366004611318565b6103f7565b61012761015d366004611416565b610602565b610175610170366004611318565b610707565b6040516100ce9190611446565b6101ab6101903660046113bb565b6001600160a01b031660009081526004602052604090205490565b6040519081526020016100ce565b6101276101c7366004611318565b6107d9565b6101ab6109a8565b6007546101ab565b60408051606080820183526000808352602080840182905283850183905285825260058152848220855193840186528054845260018101546001600160a01b031684830152600281018054875181850281018501895281815296979596929587019492939192909184015b8282101561028f5760008481526020908190206040805180820190915260028502909101805482526001908101546001600160a01b0316828401529083529092019101610247565b505050915250909392505050565b336000908152600460205260409020548111156103015760405162461bcd60e51b815260206004820152601a60248201527f5769746864726177616c20616d6f756e7420746f6f206269672e00000000000060448201526064015b60405180910390fd5b8060076000828254610313919061147c565b9091555050336000908152600460205260408120805483929061033790849061147c565b909155505060035460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561038d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b19190611493565b5060405181815233907f1b2ddd05b84795a2399545c07b572670916505841f3dca544522702c95c6dac3906020015b60405180910390a250565b6103f4816109bf565b50565b42610406600a620151806114b0565b60008381526005602052604090205461041f91906114cf565b106104655760405162461bcd60e51b81526020600482015260166024820152752a37b79032b0b9363c903a37903bb4ba34323930bb9760511b60448201526064016102f8565b60008181526005602052604081205461048790610482904261147c565b6109fa565b9050600260009054906101000a90046001600160a01b03166001600160a01b0316633d18b9126040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156104d957600080fd5b505af11580156104ed573d6000803e3d6000fd5b505050506104fb8183610a22565b600254600083815260056020526040908190206001015490516323b872dd60e01b81523060048201526001600160a01b039182166024820152604481018590529116906323b872dd90606401600060405180830381600087803b15801561056157600080fd5b505af1158015610575573d6000803e3d6000fd5b5050506000838152600560209081526040918290206001015491518581526001600160a01b0390921692507f59994f7bed7ab9b9c914efb2b3467ee88e9a9b45afc792c3493d0b3583448154910160405180910390a260008281526005602052604081208181556001810180546001600160a01b0319169055906105fc60028301826112d1565b50505050565b33600090815260046020526040812080548492906106219084906114cf565b9091555061063190508233610ae2565b816007600082825461064391906114cf565b909155506106529050816109bf565b6003546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156106a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cd9190611493565b5060405182815233907f41c2204e0b8b95e51b469b325b7c4f84dd02258c431b7728bb84f665475cd6ec9060200160405180910390a25050565b60408051808201909152600080825260208201526001546000541161072b57600080fd5b60005460015461073c9084906114cf565b1061077f5760405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b60448201526064016102f8565b60008260015461078f91906114cf565b8154811061079f5761079f6114e7565b60009182526020918290206040805180820190915260029092020180548252600101546001600160a01b0316918101919091529050919050565b6107e4816103e91190565b6108305760405162461bcd60e51b815260206004820152601860248201527f43616e2774206465706f7369742074686973204b6f6e672e000000000000000060448201526064016102f8565b600081815260056020526040902042815560010180546001600160a01b0319163317905561085d81610b77565b6002546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd90606401600060405180830381600087803b1580156108af57600080fd5b505af11580156108c3573d6000803e3d6000fd5b50506003546001600160a01b0316915063a9059cbb905033606460506108f2600a678ac7230489e800006114b0565b6108fc91906114b0565b61090691906114fd565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610951573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109759190611493565b5060405181815233907fc51aa48e8a485bd6477140a30bc33abe671d92f680dd8a75c516b926aa009d93906020016103e0565b6001546000805490916109ba9161147c565b905090565b3360009081526006602052604090205460ff16151581151514156103f457336000908152600660205260409020805460ff1916821517905550565b600062015180610a1283678ac7230489e800006114b0565b610a1c91906114fd565b92915050565b6000818152600560205260409020600101546001600160a01b0316331415610a5257610a4e8183610f0c565b5050565b60005b600082815260056020526040902060020154811015610ad7576000828152600560205260409020600201805482908110610a9157610a916114e7565b60009182526020909120600290910201600101546001600160a01b0316331415610ac557610ac0828483610fe3565b505050565b80610acf8161151f565b915050610a55565b50610a4e8183610f0c565b604080518082019091529182526001600160a01b03908116602083019081526000805460018101825590805292517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563600290940293840155517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56490920180546001600160a01b03191692909116919091179055565b60646050610b8e600a678ac7230489e800006114b0565b610b9891906114b0565b610ba291906114fd565b6007541015610bfe5760405162461bcd60e51b815260206004820152602260248201527f4e6f7420656e6f7567682062616e616e617320746f2066756e642061206c6f61604482015261371760f11b60648201526084016102f8565b60005b6001546000541115610ecd576000610c176110c9565b6020808201516001600160a01b0316600090815260049091526040902054909150610c4b57610c4461113a565b5050610c01565b80516020808301516001600160a01b031660009081526004909152604081205490911115610c9757506020808201516001600160a01b0316600090815260049091526040902054610c9b565b5080515b6000610ca782856114cf565b905060646050610cc0600a678ac7230489e800006114b0565b610cca91906114b0565b610cd491906114fd565b811115610dd95760008460646050610cf5600a678ac7230489e800006114b0565b610cff91906114b0565b610d0991906114fd565b610d13919061147c565b90506000610d21828561147c565b9050610d2c816111ac565b60008781526005602090815260408083208151808301835286815289840180516001600160a01b039081168387019081526002948501805460018082018355918a52888a2095519602909401948555519390920180546001600160a01b031916938316939093179092559051168352600490915281208054849290610db290849061147c565b925050819055508160076000828254610dcb919061147c565b909155505050505050505050565b60008581526005602090815260408083208151808301835286815287840180516001600160a01b039081168387019081526002948501805460018082018355918a52888a2095519602909401948555519390920180546001600160a01b0319169383169390931790925590511683526004909152812080549295508592849290610e6490849061147c565b925050819055508160076000828254610e7d919061147c565b90915550610e8b905061113a565b5060646050610ea3600a678ac7230489e800006114b0565b610ead91906114b0565b610eb791906114fd565b811415610ec5575050505050565b505050610c01565b60405162461bcd60e51b81526020600482015260146024820152732737ba1032b737bab3b4103232b837b9b4ba399760611b60448201526064016102f8565b60005b600083815260056020526040902060020154811015610ac0576000838152600560205260408120600201805483908110610f4b57610f4b6114e7565b600091825260208083206040805180820190915260029093020180548352600101546001600160a01b031690820152915060646050610f93600a678ac7230489e800006114b0565b610f9d91906114b0565b610fa791906114fd565b8251610fb49086906114b0565b610fbe91906114fd565b9050610fce8260200151826111e6565b50508080610fdb9061151f565b915050610f0f565b60005b6000848152600560205260409020600201548110156105fc576000848152600560205260408120600201805483908110611022576110226114e7565b600091825260208083206040805180820190915260029093020180548084526001909101546001600160a01b0316918301919091529092506050906110689060646114b0565b61107291906114fd565b9050838314156110a65761108f600a678ac7230489e800006114b0565b611099908661147c565b6110a390826114cf565b90505b6110b48260200151826111e6565b505080806110c19061151f565b915050610fe6565b6040805180820190915260008082526020820152600154600054116110ed57600080fd5b600060015481548110611102576111026114e7565b60009182526020918290206040805180820190915260029092020180548252600101546001600160a01b031691810191909152905090565b60408051808201909152600080825260208201526001546000541161115e57600080fd5b600060015481548110611173576111736114e7565b600091825260208220600290910201818155600190810180546001600160a01b03191690558054916111a48361151f565b919050555090565b600154600054116111bc57600080fd5b806000600154815481106111d2576111d26114e7565b600091825260209091206002909102015550565b6001600160a01b03821660009081526006602052604090205460ff161561127e5760035460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af115801561125a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac09190611493565b6001600160a01b038216600090815260046020526040812080548392906112a69084906114cf565b909155506112b690508183610ae2565b80600760008282546112c891906114cf565b90915550505050565b50805460008255600202906000526020600020908101906103f491905b8082111561131457600081556001810180546001600160a01b03191690556002016112ee565b5090565b60006020828403121561132a57600080fd5b5035919050565b6020808252825182820152828101516001600160a01b0316604080840191909152808401516060808501528051608085018190526000939291830191849160a08701905b808410156113af5761139b828651805182526020908101516001600160a01b0316910152565b938501936001939093019290820190611375565b50979650505050505050565b6000602082840312156113cd57600080fd5b81356001600160a01b03811681146113e457600080fd5b9392505050565b80151581146103f457600080fd5b60006020828403121561140b57600080fd5b81356113e4816113eb565b6000806040838503121561142957600080fd5b82359150602083013561143b816113eb565b809150509250929050565b815181526020808301516001600160a01b03169082015260408101610a1c565b634e487b7160e01b600052601160045260246000fd5b60008282101561148e5761148e611466565b500390565b6000602082840312156114a557600080fd5b81516113e4816113eb565b60008160001904831182151516156114ca576114ca611466565b500290565b600082198211156114e2576114e2611466565b500190565b634e487b7160e01b600052603260045260246000fd5b60008261151a57634e487b7160e01b600052601260045260246000fd5b500490565b600060001982141561153357611533611466565b506001019056fea26469706673582212208d23c2e8a555d27b34bc43dc72aafcc462cf25f342ac2aedace1001ca6e1692364736f6c634300080b0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1631 CODESIZE SUB DUP1 PUSH2 0x1631 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x7F JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP4 SWAP1 SWAP3 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xB2 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9B DUP4 PUSH2 0x63 JUMP JUMPDEST SWAP2 POP PUSH2 0xA9 PUSH1 0x20 DUP5 ADD PUSH2 0x63 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1570 DUP1 PUSH2 0xC1 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9C437E54 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x9C437E54 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x9F9FB968 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xB478FC07 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xB7C3505F EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0xBBD4E8C9 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0xC0316AA3 EQ PUSH2 0x1D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x199402E5 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x23AD6DB2 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x258AB15C EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x90BABE8B EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x910EFAE8 EQ PUSH2 0x13C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0x1318 JUMP JUMPDEST PUSH2 0x1DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x1331 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0xE5 CALLDATASIZE PUSH1 0x4 PUSH2 0x13BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0x127 PUSH2 0x122 CALLDATASIZE PUSH1 0x4 PUSH2 0x1318 JUMP JUMPDEST PUSH2 0x29D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x127 PUSH2 0x137 CALLDATASIZE PUSH1 0x4 PUSH2 0x13F9 JUMP JUMPDEST PUSH2 0x3EB JUMP JUMPDEST PUSH2 0x127 PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x1318 JUMP JUMPDEST PUSH2 0x3F7 JUMP JUMPDEST PUSH2 0x127 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x1416 JUMP JUMPDEST PUSH2 0x602 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x1318 JUMP JUMPDEST PUSH2 0x707 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x1446 JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x190 CALLDATASIZE PUSH1 0x4 PUSH2 0x13BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0x127 PUSH2 0x1C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1318 JUMP JUMPDEST PUSH2 0x7D9 JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1AB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x0 DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP4 DUP6 ADD DUP4 SWAP1 MSTORE DUP6 DUP3 MSTORE PUSH1 0x5 DUP2 MSTORE DUP5 DUP3 KECCAK256 DUP6 MLOAD SWAP4 DUP5 ADD DUP7 MSTORE DUP1 SLOAD DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP4 ADD MSTORE PUSH1 0x2 DUP2 ADD DUP1 SLOAD DUP8 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD DUP10 MSTORE DUP2 DUP2 MSTORE SWAP7 SWAP8 SWAP6 SWAP7 SWAP3 SWAP6 DUP8 ADD SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x28F JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 SWAP1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP5 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x247 JUMP JUMPDEST POP POP POP SWAP2 MSTORE POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x301 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5769746864726177616C20616D6F756E7420746F6F206269672E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x147C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x337 SWAP1 DUP5 SWAP1 PUSH2 0x147C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x38D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B1 SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x1B2DDD05B84795A2399545C07B572670916505841F3DCA544522702C95C6DAC3 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x3F4 DUP2 PUSH2 0x9BF JUMP JUMPDEST POP JUMP JUMPDEST TIMESTAMP PUSH2 0x406 PUSH1 0xA PUSH3 0x15180 PUSH2 0x14B0 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x14CF JUMP JUMPDEST LT PUSH2 0x465 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2A37B79032B0B9363C903A37903BB4BA34323930BB97 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x487 SWAP1 PUSH2 0x482 SWAP1 TIMESTAMP PUSH2 0x147C JUMP JUMPDEST PUSH2 0x9FA JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3D18B912 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x4FB DUP2 DUP4 PUSH2 0xA22 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x561 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x575 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 MLOAD DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 POP PUSH32 0x59994F7BED7AB9B9C914EFB2B3467EE88E9A9B45AFC792C3493D0B3583448154 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE SWAP1 PUSH2 0x5FC PUSH1 0x2 DUP4 ADD DUP3 PUSH2 0x12D1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x621 SWAP1 DUP5 SWAP1 PUSH2 0x14CF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x631 SWAP1 POP DUP3 CALLER PUSH2 0xAE2 JUMP JUMPDEST DUP2 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x643 SWAP2 SWAP1 PUSH2 0x14CF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x652 SWAP1 POP DUP2 PUSH2 0x9BF JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6CD SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x41C2204E0B8B95E51B469B325B7C4F84DD02258C431B7728BB84F665475CD6EC SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD GT PUSH2 0x72B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH2 0x73C SWAP1 DUP5 SWAP1 PUSH2 0x14CF JUMP JUMPDEST LT PUSH2 0x77F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E646578206F7574206F6620626F756E6473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 SLOAD PUSH2 0x78F SWAP2 SWAP1 PUSH2 0x14CF JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x79F JUMPI PUSH2 0x79F PUSH2 0x14E7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 SWAP1 SWAP3 MUL ADD DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7E4 DUP2 PUSH2 0x3E9 GT SWAP1 JUMP JUMPDEST PUSH2 0x830 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E2774206465706F7369742074686973204B6F6E672E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP DUP2 SSTORE PUSH1 0x1 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x85D DUP2 PUSH2 0xB77 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH4 0xA9059CBB SWAP1 POP CALLER PUSH1 0x64 PUSH1 0x50 PUSH2 0x8F2 PUSH1 0xA PUSH8 0x8AC7230489E80000 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0x8FC SWAP2 SWAP1 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0x906 SWAP2 SWAP1 PUSH2 0x14FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x951 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x975 SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xC51AA48E8A485BD6477140A30BC33ABE671D92F680DD8A75C516B926AA009D93 SWAP1 PUSH1 0x20 ADD PUSH2 0x3E0 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD SWAP1 SWAP2 PUSH2 0x9BA SWAP2 PUSH2 0x147C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO DUP2 ISZERO ISZERO EQ ISZERO PUSH2 0x3F4 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x15180 PUSH2 0xA12 DUP4 PUSH8 0x8AC7230489E80000 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0xA1C SWAP2 SWAP1 PUSH2 0x14FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0xA52 JUMPI PUSH2 0xA4E DUP2 DUP4 PUSH2 0xF0C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP2 LT ISZERO PUSH2 0xAD7 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0xA91 JUMPI PUSH2 0xA91 PUSH2 0x14E7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0xAC5 JUMPI PUSH2 0xAC0 DUP3 DUP5 DUP4 PUSH2 0xFE3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH2 0xACF DUP2 PUSH2 0x151F JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA55 JUMP JUMPDEST POP PUSH2 0xA4E DUP2 DUP4 PUSH2 0xF0C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP1 MSTORE SWAP3 MLOAD PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 PUSH1 0x2 SWAP1 SWAP5 MUL SWAP4 DUP5 ADD SSTORE MLOAD PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E564 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x64 PUSH1 0x50 PUSH2 0xB8E PUSH1 0xA PUSH8 0x8AC7230489E80000 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0xB98 SWAP2 SWAP1 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0xBA2 SWAP2 SWAP1 PUSH2 0x14FD JUMP JUMPDEST PUSH1 0x7 SLOAD LT ISZERO PUSH2 0xBFE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682062616E616E617320746F2066756E642061206C6F61 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3717 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD GT ISZERO PUSH2 0xECD JUMPI PUSH1 0x0 PUSH2 0xC17 PUSH2 0x10C9 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0xC4B JUMPI PUSH2 0xC44 PUSH2 0x113A JUMP JUMPDEST POP POP PUSH2 0xC01 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 GT ISZERO PUSH2 0xC97 JUMPI POP PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xC9B JUMP JUMPDEST POP DUP1 MLOAD JUMPDEST PUSH1 0x0 PUSH2 0xCA7 DUP3 DUP6 PUSH2 0x14CF JUMP JUMPDEST SWAP1 POP PUSH1 0x64 PUSH1 0x50 PUSH2 0xCC0 PUSH1 0xA PUSH8 0x8AC7230489E80000 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0xCCA SWAP2 SWAP1 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0xCD4 SWAP2 SWAP1 PUSH2 0x14FD JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0xDD9 JUMPI PUSH1 0x0 DUP5 PUSH1 0x64 PUSH1 0x50 PUSH2 0xCF5 PUSH1 0xA PUSH8 0x8AC7230489E80000 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0xCFF SWAP2 SWAP1 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0xD09 SWAP2 SWAP1 PUSH2 0x14FD JUMP JUMPDEST PUSH2 0xD13 SWAP2 SWAP1 PUSH2 0x147C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD21 DUP3 DUP6 PUSH2 0x147C JUMP JUMPDEST SWAP1 POP PUSH2 0xD2C DUP2 PUSH2 0x11AC JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE DUP7 DUP2 MSTORE DUP10 DUP5 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 SWAP5 DUP6 ADD DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE SWAP2 DUP11 MSTORE DUP9 DUP11 KECCAK256 SWAP6 MLOAD SWAP7 MUL SWAP1 SWAP5 ADD SWAP5 DUP6 SSTORE MLOAD SWAP4 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP4 DUP4 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE SWAP1 MLOAD AND DUP4 MSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xDB2 SWAP1 DUP5 SWAP1 PUSH2 0x147C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDCB SWAP2 SWAP1 PUSH2 0x147C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE DUP7 DUP2 MSTORE DUP8 DUP5 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 SWAP5 DUP6 ADD DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE SWAP2 DUP11 MSTORE DUP9 DUP11 KECCAK256 SWAP6 MLOAD SWAP7 MUL SWAP1 SWAP5 ADD SWAP5 DUP6 SSTORE MLOAD SWAP4 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP4 DUP4 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE SWAP1 MLOAD AND DUP4 MSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP6 POP DUP6 SWAP3 DUP5 SWAP3 SWAP1 PUSH2 0xE64 SWAP1 DUP5 SWAP1 PUSH2 0x147C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE7D SWAP2 SWAP1 PUSH2 0x147C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xE8B SWAP1 POP PUSH2 0x113A JUMP JUMPDEST POP PUSH1 0x64 PUSH1 0x50 PUSH2 0xEA3 PUSH1 0xA PUSH8 0x8AC7230489E80000 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0xEAD SWAP2 SWAP1 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0xEB7 SWAP2 SWAP1 PUSH2 0x14FD JUMP JUMPDEST DUP2 EQ ISZERO PUSH2 0xEC5 JUMPI POP POP POP POP POP JUMP JUMPDEST POP POP POP PUSH2 0xC01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2737BA1032B737BAB3B4103232B837B9B4BA3997 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP2 LT ISZERO PUSH2 0xAC0 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0xF4B JUMPI PUSH2 0xF4B PUSH2 0x14E7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 SWAP1 SWAP4 MUL ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE SWAP2 POP PUSH1 0x64 PUSH1 0x50 PUSH2 0xF93 PUSH1 0xA PUSH8 0x8AC7230489E80000 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0xF9D SWAP2 SWAP1 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0xFA7 SWAP2 SWAP1 PUSH2 0x14FD JUMP JUMPDEST DUP3 MLOAD PUSH2 0xFB4 SWAP1 DUP7 SWAP1 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0xFBE SWAP2 SWAP1 PUSH2 0x14FD JUMP JUMPDEST SWAP1 POP PUSH2 0xFCE DUP3 PUSH1 0x20 ADD MLOAD DUP3 PUSH2 0x11E6 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0xFDB SWAP1 PUSH2 0x151F JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP2 LT ISZERO PUSH2 0x5FC JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x1022 JUMPI PUSH2 0x1022 PUSH2 0x14E7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 SWAP1 SWAP4 MUL ADD DUP1 SLOAD DUP1 DUP5 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP3 POP PUSH1 0x50 SWAP1 PUSH2 0x1068 SWAP1 PUSH1 0x64 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0x1072 SWAP2 SWAP1 PUSH2 0x14FD JUMP JUMPDEST SWAP1 POP DUP4 DUP4 EQ ISZERO PUSH2 0x10A6 JUMPI PUSH2 0x108F PUSH1 0xA PUSH8 0x8AC7230489E80000 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0x1099 SWAP1 DUP7 PUSH2 0x147C JUMP JUMPDEST PUSH2 0x10A3 SWAP1 DUP3 PUSH2 0x14CF JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x10B4 DUP3 PUSH1 0x20 ADD MLOAD DUP3 PUSH2 0x11E6 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x10C1 SWAP1 PUSH2 0x151F JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFE6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD GT PUSH2 0x10ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x1102 JUMPI PUSH2 0x1102 PUSH2 0x14E7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 SWAP1 SWAP3 MUL ADD DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD GT PUSH2 0x115E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x1173 JUMPI PUSH2 0x1173 PUSH2 0x14E7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP2 DUP2 SSTORE PUSH1 0x1 SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE DUP1 SLOAD SWAP2 PUSH2 0x11A4 DUP4 PUSH2 0x151F JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD GT PUSH2 0x11BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x11D2 JUMPI PUSH2 0x11D2 PUSH2 0x14E7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x127E JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x125A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAC0 SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x12A6 SWAP1 DUP5 SWAP1 PUSH2 0x14CF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x12B6 SWAP1 POP DUP2 DUP4 PUSH2 0xAE2 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x12C8 SWAP2 SWAP1 PUSH2 0x14CF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE PUSH1 0x2 MUL SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3F4 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1314 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x2 ADD PUSH2 0x12EE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x132A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD MSTORE DUP3 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 DUP5 ADD MLOAD PUSH1 0x60 DUP1 DUP6 ADD MSTORE DUP1 MLOAD PUSH1 0x80 DUP6 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP4 SWAP3 SWAP2 DUP4 ADD SWAP2 DUP5 SWAP2 PUSH1 0xA0 DUP8 ADD SWAP1 JUMPDEST DUP1 DUP5 LT ISZERO PUSH2 0x13AF JUMPI PUSH2 0x139B DUP3 DUP7 MLOAD DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 ADD MSTORE JUMP JUMPDEST SWAP4 DUP6 ADD SWAP4 PUSH1 0x1 SWAP4 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP3 ADD SWAP1 PUSH2 0x1375 JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x140B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x13E4 DUP2 PUSH2 0x13EB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x143B DUP2 PUSH2 0x13EB JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH2 0xA1C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x148E JUMPI PUSH2 0x148E PUSH2 0x1466 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x13E4 DUP2 PUSH2 0x13EB JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x14CA JUMPI PUSH2 0x14CA PUSH2 0x1466 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x14E2 JUMPI PUSH2 0x14E2 PUSH2 0x1466 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x151A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1533 JUMPI PUSH2 0x1533 PUSH2 0x1466 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 0x23 0xC2 0xE8 0xA5 SSTORE 0xD2 PUSH28 0x34BC43DC72AAFCC462CF25F342AC2AEDACE1001CA6E1692364736F6C PUSH4 0x4300080B STOP CALLER ",
              "sourceMap": "409:7487:1:-:0;;;1345:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1401:5;:22;;-1:-1:-1;;;;;1401:22:1;;;-1:-1:-1;;;;;;1401:22:1;;;;;;;1433:7;:26;;;;;;;;;;;;;;409:7487;;14:177:7;93:13;;-1:-1:-1;;;;;135:31:7;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;409:7487:1;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@_setAutoCompoundStrategy_491": {
                  "entryPoint": 2495,
                  "id": 491,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@autoCompoundStrategy_933": {
                  "entryPoint": null,
                  "id": 933,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@calcReward_884": {
                  "entryPoint": 2554,
                  "id": 884,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@depositErc20_287": {
                  "entryPoint": 1538,
                  "id": 287,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@depositNft_389": {
                  "entryPoint": 2009,
                  "id": 389,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@depositedNft_919": {
                  "entryPoint": 476,
                  "id": 919,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@distributeRewards_554": {
                  "entryPoint": 2594,
                  "id": 554,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@erc20Balance_897": {
                  "entryPoint": null,
                  "id": 897,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@getDeposit_133": {
                  "entryPoint": 1799,
                  "id": 133,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@getTopDeposit_80": {
                  "entryPoint": 4297,
                  "id": 80,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@isDepositQueueEmpty_23": {
                  "entryPoint": null,
                  "id": 23,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@isValidKong_870": {
                  "entryPoint": null,
                  "id": 870,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@numDeposits_106": {
                  "entryPoint": 2472,
                  "id": 106,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@payRewardAccordingToStrategy_858": {
                  "entryPoint": 4582,
                  "id": 858,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@popDeposit_67": {
                  "entryPoint": 4410,
                  "id": 67,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@pushDeposit_50": {
                  "entryPoint": 2786,
                  "id": 50,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@selectShareholders_822": {
                  "entryPoint": 2935,
                  "id": 822,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@setAutoCompoundStrategy_469": {
                  "entryPoint": 1003,
                  "id": 469,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@setTopDepositAmount_95": {
                  "entryPoint": 4524,
                  "id": 95,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@totalErc20_906": {
                  "entryPoint": null,
                  "id": 906,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@withdrawErc20_329": {
                  "entryPoint": 669,
                  "id": 329,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@withdrawNftAndRewardClaimant_665": {
                  "entryPoint": 4067,
                  "id": 665,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@withdrawNftAndShareRewardEqually_603": {
                  "entryPoint": 3852,
                  "id": 603,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@withdrawNft_458": {
                  "entryPoint": 1015,
                  "id": 458,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 5051,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_bool": {
                  "entryPoint": 5113,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_bool_fromMemory": {
                  "entryPoint": 5267,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint256": {
                  "entryPoint": 4888,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint256t_bool": {
                  "entryPoint": 5142,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_encode_struct_Deposit": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_146d1c9f512b67e79f4693183aff46c96fcc7170b7d03dda10872af69bff1cfb__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_30387342b56d92eda96cb5c10202def43dc7520ce3ea737fcf37de34a736b32a__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_84ba28e46fa3d00d5192937a7ff6403b1faed2dc797082cfb43e6f0a3510446b__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_b75bbae855d8d6eb1bedd5ad8bdd62ccee862e79d5ddfe3f9b00a48840abaef0__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_e86609f90be7ce8b182441c3917482d5c99b68354bce0a0117eed9c3614fba05__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_struct$_Deposit_$6_memory_ptr__to_t_struct$_Deposit_$6_memory_ptr__fromStack_reversed": {
                  "entryPoint": 5190,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_struct$_DepositedNft_$173_memory_ptr__to_t_struct$_DepositedNft_$173_memory_ptr__fromStack_reversed": {
                  "entryPoint": 4913,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_t_uint256": {
                  "entryPoint": 5327,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_div_t_uint256": {
                  "entryPoint": 5373,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_t_uint256": {
                  "entryPoint": 5296,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_t_uint256": {
                  "entryPoint": 5244,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "increment_t_uint256": {
                  "entryPoint": 5407,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 5222,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x32": {
                  "entryPoint": 5351,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "validator_revert_bool": {
                  "entryPoint": 5099,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:7073:7",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:7",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "84:110:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "130:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "139:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "142:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "132:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "132:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "132:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "105:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "114:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "101:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "101:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "126:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "97:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "97:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "94:52:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "155:33:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "178:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "165:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "165:23:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "155:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "50:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "61:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "73:6:7",
                            "type": ""
                          }
                        ],
                        "src": "14:180:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "250:123:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "267:3:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "278:5:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "272:5:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "272:12:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "260:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "260:25:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "260:25:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "305:3:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "310:4:7",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "301:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "301:14:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "value",
                                                "nodeType": "YulIdentifier",
                                                "src": "331:5:7"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "338:4:7",
                                                "type": "",
                                                "value": "0x20"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "327:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "327:16:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nodeType": "YulIdentifier",
                                          "src": "321:5:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "321:23:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "354:3:7",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "359:1:7",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "350:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "350:11:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "363:1:7",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "346:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "346:19:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "317:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "317:49:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "294:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "294:73:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "294:73:7"
                            }
                          ]
                        },
                        "name": "abi_encode_struct_Deposit",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "234:5:7",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "241:3:7",
                            "type": ""
                          }
                        ],
                        "src": "199:174:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "537:811:7",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "547:12:7",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "557:2:7",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "551:2:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "575:9:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "586:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "568:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "568:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "568:21:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "598:33:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "616:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "627:3:7",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "612:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "612:19:7"
                              },
                              "variables": [
                                {
                                  "name": "tail_1",
                                  "nodeType": "YulTypedName",
                                  "src": "602:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "651:9:7"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "662:2:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "647:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "647:18:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "673:6:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "667:5:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "667:13:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "640:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "640:41:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "640:41:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "690:42:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "720:6:7"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "728:2:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "716:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "716:15:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "710:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "710:22:7"
                              },
                              "variables": [
                                {
                                  "name": "memberValue0",
                                  "nodeType": "YulTypedName",
                                  "src": "694:12:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "741:12:7",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "751:2:7",
                                "type": "",
                                "value": "64"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "745:2:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "773:9:7"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "784:2:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "769:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "769:18:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "793:12:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "815:3:7",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "820:1:7",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "811:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "811:11:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "824:1:7",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "807:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "807:19:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "789:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "789:38:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "762:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "762:66:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "762:66:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "837:44:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "869:6:7"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "877:2:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "865:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "865:15:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "859:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "859:22:7"
                              },
                              "variables": [
                                {
                                  "name": "memberValue0_1",
                                  "nodeType": "YulTypedName",
                                  "src": "841:14:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "901:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "912:4:7",
                                        "type": "",
                                        "value": "0x60"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "897:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "897:20:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "919:4:7",
                                    "type": "",
                                    "value": "0x60"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "890:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "890:34:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "890:34:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "933:17:7",
                              "value": {
                                "name": "tail_1",
                                "nodeType": "YulIdentifier",
                                "src": "944:6:7"
                              },
                              "variables": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulTypedName",
                                  "src": "937:3:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "959:35:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memberValue0_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "979:14:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "973:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "973:21:7"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "963:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "tail_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1010:6:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1018:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1003:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1003:22:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1003:22:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1034:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1045:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1056:3:7",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1041:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1041:19:7"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "1034:3:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1069:37:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memberValue0_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1087:14:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1103:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1083:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1083:23:7"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "1073:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1115:10:7",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1124:1:7",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "1119:1:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1183:139:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "srcPtr",
                                              "nodeType": "YulIdentifier",
                                              "src": "1229:6:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "1223:5:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1223:13:7"
                                        },
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "1238:3:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "abi_encode_struct_Deposit",
                                        "nodeType": "YulIdentifier",
                                        "src": "1197:25:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1197:45:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1197:45:7"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1255:19:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "1266:3:7"
                                        },
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "1271:2:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1262:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1262:12:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "1255:3:7"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1287:25:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "1301:6:7"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "1309:2:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1297:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1297:15:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1287:6:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "1145:1:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1148:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1142:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1142:13:7"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "1156:18:7",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1158:14:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "1167:1:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1170:1:7",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1163:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1163:9:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "1158:1:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "1138:3:7",
                                "statements": []
                              },
                              "src": "1134:188:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1331:11:7",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "1339:3:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1331:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_struct$_DepositedNft_$173_memory_ptr__to_t_struct$_DepositedNft_$173_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "506:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "517:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "528:4:7",
                            "type": ""
                          }
                        ],
                        "src": "378:970:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1423:216:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1469:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1478:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1481:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1471:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1471:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1471:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1444:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1453:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1440:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1440:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1465:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1436:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1436:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "1433:52:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1494:36:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1520:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1507:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1507:23:7"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "1498:5:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1593:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1602:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1605:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1595:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1595:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1595:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1552:5:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "1563:5:7"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1578:3:7",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1583:1:7",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1574:3:7"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "1574:11:7"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "1587:1:7",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "1570:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1570:19:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "1559:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1559:31:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "1549:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1549:42:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1542:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1542:50:7"
                              },
                              "nodeType": "YulIf",
                              "src": "1539:70:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1618:15:7",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1628:5:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1618:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1389:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1400:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1412:6:7",
                            "type": ""
                          }
                        ],
                        "src": "1353:286:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1739:92:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1749:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1761:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1772:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1757:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1757:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1749:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1791:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "1816:6:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "1809:6:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1809:14:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "1802:6:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1802:22:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1784:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1784:41:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1784:41:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1708:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1719:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1730:4:7",
                            "type": ""
                          }
                        ],
                        "src": "1644:187:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1878:76:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1932:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1941:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1944:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1934:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1934:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1934:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1901:5:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "value",
                                                "nodeType": "YulIdentifier",
                                                "src": "1922:5:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nodeType": "YulIdentifier",
                                              "src": "1915:6:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1915:13:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "1908:6:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1908:21:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "1898:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1898:32:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1891:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1891:40:7"
                              },
                              "nodeType": "YulIf",
                              "src": "1888:60:7"
                            }
                          ]
                        },
                        "name": "validator_revert_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1867:5:7",
                            "type": ""
                          }
                        ],
                        "src": "1836:118:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2026:174:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2072:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2081:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2084:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2074:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2074:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2074:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2047:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2056:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2043:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2043:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2068:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2039:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2039:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "2036:52:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2097:36:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2123:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2110:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2110:23:7"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "2101:5:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2164:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "2142:21:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2142:28:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2142:28:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2179:15:7",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2189:5:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2179:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1992:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2003:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2015:6:7",
                            "type": ""
                          }
                        ],
                        "src": "1959:241:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2289:225:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2335:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2344:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2347:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2337:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2337:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2337:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2310:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2319:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2306:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2306:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2331:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2302:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2302:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "2299:52:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2360:33:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2383:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2370:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2370:23:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2360:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2402:45:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2432:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2443:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2428:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2428:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2415:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2415:32:7"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "2406:5:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2478:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "2456:21:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2456:28:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2456:28:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2493:15:7",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2503:5:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2493:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2247:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2258:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2270:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2278:6:7",
                            "type": ""
                          }
                        ],
                        "src": "2205:309:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2664:95:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2674:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2686:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2697:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2682:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2682:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2674:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "2735:6:7"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2743:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_struct_Deposit",
                                  "nodeType": "YulIdentifier",
                                  "src": "2709:25:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2709:44:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2709:44:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_struct$_Deposit_$6_memory_ptr__to_t_struct$_Deposit_$6_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2633:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2644:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2655:4:7",
                            "type": ""
                          }
                        ],
                        "src": "2519:240:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2865:76:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2875:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2887:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2898:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2883:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2883:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2875:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2917:9:7"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "2928:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2910:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2910:25:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2910:25:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2834:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2845:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2856:4:7",
                            "type": ""
                          }
                        ],
                        "src": "2764:177:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3120:176:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3137:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3148:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3130:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3130:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3130:21:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3171:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3182:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3167:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3167:18:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3187:2:7",
                                    "type": "",
                                    "value": "26"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3160:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3160:30:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3160:30:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3210:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3221:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3206:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3206:18:7"
                                  },
                                  {
                                    "hexValue": "5769746864726177616c20616d6f756e7420746f6f206269672e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3226:28:7",
                                    "type": "",
                                    "value": "Withdrawal amount too big."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3199:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3199:56:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3199:56:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3264:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3276:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3287:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3272:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3272:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3264:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_30387342b56d92eda96cb5c10202def43dc7520ce3ea737fcf37de34a736b32a__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3097:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3111:4:7",
                            "type": ""
                          }
                        ],
                        "src": "2946:350:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3333:95:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3350:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3357:3:7",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3362:10:7",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "3353:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3353:20:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3343:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3343:31:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3343:31:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3390:1:7",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3393:4:7",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3383:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3383:15:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3383:15:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3414:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3417:4:7",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "3407:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3407:15:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3407:15:7"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "3301:127:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3482:76:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3504:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "3506:16:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3506:18:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3506:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "3498:1:7"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "3501:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3495:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3495:8:7"
                              },
                              "nodeType": "YulIf",
                              "src": "3492:34:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3535:17:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "3547:1:7"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "3550:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "3543:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3543:9:7"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "3535:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "3464:1:7",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "3467:1:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "3473:4:7",
                            "type": ""
                          }
                        ],
                        "src": "3433:125:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3692:145:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3702:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3714:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3725:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3710:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3710:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3702:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3744:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "3759:6:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "3775:3:7",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "3780:1:7",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "3771:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3771:11:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3784:1:7",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "3767:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3767:19:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "3755:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3755:32:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3737:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3737:51:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3737:51:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3808:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3819:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3804:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3804:18:7"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3824:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3797:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3797:34:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3797:34:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3653:9:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3664:6:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3672:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3683:4:7",
                            "type": ""
                          }
                        ],
                        "src": "3563:274:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3920:167:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3966:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3975:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3978:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3968:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3968:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3968:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3941:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3950:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3937:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3937:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3962:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3933:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3933:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "3930:52:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3991:29:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4010:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4004:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4004:16:7"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "3995:5:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4051:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "4029:21:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4029:28:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4029:28:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4066:15:7",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4076:5:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "4066:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3886:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3897:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3909:6:7",
                            "type": ""
                          }
                        ],
                        "src": "3842:245:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4144:116:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4203:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "4205:16:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4205:18:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4205:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "4175:1:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "4168:6:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4168:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "4161:6:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4161:17:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "4183:1:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "4194:1:7",
                                                "type": "",
                                                "value": "0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "4190:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4190:6:7"
                                          },
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "4198:1:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "div",
                                          "nodeType": "YulIdentifier",
                                          "src": "4186:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4186:14:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "4180:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4180:21:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "4157:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4157:45:7"
                              },
                              "nodeType": "YulIf",
                              "src": "4154:71:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4234:20:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "4249:1:7"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "4252:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "4245:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4245:9:7"
                              },
                              "variableNames": [
                                {
                                  "name": "product",
                                  "nodeType": "YulIdentifier",
                                  "src": "4234:7:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_mul_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "4123:1:7",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "4126:1:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "product",
                            "nodeType": "YulTypedName",
                            "src": "4132:7:7",
                            "type": ""
                          }
                        ],
                        "src": "4092:168:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4313:80:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4340:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "4342:16:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4342:18:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4342:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "4329:1:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "4336:1:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "4332:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4332:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4326:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4326:13:7"
                              },
                              "nodeType": "YulIf",
                              "src": "4323:39:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4371:16:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "4382:1:7"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "4385:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4378:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4378:9:7"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "4371:3:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "4296:1:7",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "4299:1:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "4305:3:7",
                            "type": ""
                          }
                        ],
                        "src": "4265:128:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4572:172:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4589:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4600:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4582:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4582:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4582:21:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4623:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4634:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4619:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4619:18:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4639:2:7",
                                    "type": "",
                                    "value": "22"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4612:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4612:30:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4612:30:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4662:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4673:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4658:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4658:18:7"
                                  },
                                  {
                                    "hexValue": "546f6f206561726c7920746f2077697468647261772e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "4678:24:7",
                                    "type": "",
                                    "value": "Too early to withdraw."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4651:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4651:52:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4651:52:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4712:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4724:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4735:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4720:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4720:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4712:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_e86609f90be7ce8b182441c3917482d5c99b68354bce0a0117eed9c3614fba05__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4549:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4563:4:7",
                            "type": ""
                          }
                        ],
                        "src": "4398:346:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4906:218:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4916:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4928:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4939:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4924:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4924:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4916:4:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4951:29:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4969:3:7",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4974:1:7",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "4965:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4965:11:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4978:1:7",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "4961:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4961:19:7"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "4955:2:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4996:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "5011:6:7"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "5019:2:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "5007:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5007:15:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4989:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4989:34:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4989:34:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5043:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5054:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5039:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5039:18:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nodeType": "YulIdentifier",
                                        "src": "5063:6:7"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "5071:2:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "5059:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5059:15:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5032:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5032:43:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5032:43:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5095:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5106:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5091:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5091:18:7"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "5111:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5084:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5084:34:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5084:34:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4859:9:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "4870:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "4878:6:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4886:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4897:4:7",
                            "type": ""
                          }
                        ],
                        "src": "4749:375:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5303:169:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5320:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5331:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5313:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5313:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5313:21:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5354:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5365:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5350:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5350:18:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5370:2:7",
                                    "type": "",
                                    "value": "19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5343:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5343:30:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5343:30:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5393:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5404:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5389:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5389:18:7"
                                  },
                                  {
                                    "hexValue": "496e646578206f7574206f6620626f756e6473",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "5409:21:7",
                                    "type": "",
                                    "value": "Index out of bounds"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5382:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5382:49:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5382:49:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5440:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5452:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5463:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5448:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5448:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5440:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5280:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5294:4:7",
                            "type": ""
                          }
                        ],
                        "src": "5129:343:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5509:95:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5526:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5533:3:7",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5538:10:7",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "5529:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5529:20:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5519:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5519:31:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5519:31:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5566:1:7",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5569:4:7",
                                    "type": "",
                                    "value": "0x32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5559:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5559:15:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5559:15:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5590:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5593:4:7",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "5583:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5583:15:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5583:15:7"
                            }
                          ]
                        },
                        "name": "panic_error_0x32",
                        "nodeType": "YulFunctionDefinition",
                        "src": "5477:127:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5783:174:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5800:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5811:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5793:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5793:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5793:21:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5834:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5845:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5830:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5830:18:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5850:2:7",
                                    "type": "",
                                    "value": "24"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5823:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5823:30:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5823:30:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5873:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5884:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5869:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5869:18:7"
                                  },
                                  {
                                    "hexValue": "43616e2774206465706f7369742074686973204b6f6e672e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "5889:26:7",
                                    "type": "",
                                    "value": "Can't deposit this Kong."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5862:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5862:54:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5862:54:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5925:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5937:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5948:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5933:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5933:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5925:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_84ba28e46fa3d00d5192937a7ff6403b1faed2dc797082cfb43e6f0a3510446b__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5760:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5774:4:7",
                            "type": ""
                          }
                        ],
                        "src": "5609:348:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6008:171:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6039:111:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6060:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "6067:3:7",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "6072:10:7",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "6063:3:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "6063:20:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "6053:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6053:31:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6053:31:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6104:1:7",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6107:4:7",
                                          "type": "",
                                          "value": "0x12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "6097:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6097:15:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6097:15:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6132:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6135:4:7",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "6125:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6125:15:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6125:15:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "6028:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "6021:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6021:9:7"
                              },
                              "nodeType": "YulIf",
                              "src": "6018:132:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6159:14:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "6168:1:7"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "6171:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "6164:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6164:9:7"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "6159:1:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_div_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "5993:1:7",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "5996:1:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nodeType": "YulTypedName",
                            "src": "6002:1:7",
                            "type": ""
                          }
                        ],
                        "src": "5962:217:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6231:88:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6262:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "6264:16:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6264:18:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6264:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6247:5:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6258:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "6254:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6254:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "6244:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6244:17:7"
                              },
                              "nodeType": "YulIf",
                              "src": "6241:43:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6293:20:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6304:5:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6311:1:7",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6300:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6300:13:7"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "6293:3:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "increment_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6213:5:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "6223:3:7",
                            "type": ""
                          }
                        ],
                        "src": "6184:135:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6498:224:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6515:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6526:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6508:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6508:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6508:21:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6549:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6560:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6545:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6545:18:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6565:2:7",
                                    "type": "",
                                    "value": "34"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6538:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6538:30:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6538:30:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6588:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6599:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6584:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6584:18:7"
                                  },
                                  {
                                    "hexValue": "4e6f7420656e6f7567682062616e616e617320746f2066756e642061206c6f61",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "6604:34:7",
                                    "type": "",
                                    "value": "Not enough bananas to fund a loa"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6577:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6577:62:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6577:62:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6659:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6670:2:7",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6655:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6655:18:7"
                                  },
                                  {
                                    "hexValue": "6e2e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "6675:4:7",
                                    "type": "",
                                    "value": "n."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6648:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6648:32:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6648:32:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6689:27:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6701:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6712:3:7",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6697:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6697:19:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6689:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_146d1c9f512b67e79f4693183aff46c96fcc7170b7d03dda10872af69bff1cfb__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6475:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6489:4:7",
                            "type": ""
                          }
                        ],
                        "src": "6324:398:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6901:170:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6918:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6929:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6911:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6911:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6911:21:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6952:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6963:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6948:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6948:18:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6968:2:7",
                                    "type": "",
                                    "value": "20"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6941:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6941:30:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6941:30:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6991:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7002:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6987:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6987:18:7"
                                  },
                                  {
                                    "hexValue": "4e6f7420656e6f756768206465706f736974732e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "7007:22:7",
                                    "type": "",
                                    "value": "Not enough deposits."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6980:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6980:50:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6980:50:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7039:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7051:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7062:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7047:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7047:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7039:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_b75bbae855d8d6eb1bedd5ad8bdd62ccee862e79d5ddfe3f9b00a48840abaef0__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6878:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6892:4:7",
                            "type": ""
                          }
                        ],
                        "src": "6727:344:7"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_struct_Deposit(value, pos)\n    {\n        mstore(pos, mload(value))\n        mstore(add(pos, 0x20), and(mload(add(value, 0x20)), sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_struct$_DepositedNft_$173_memory_ptr__to_t_struct$_DepositedNft_$173_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let tail_1 := add(headStart, 128)\n        mstore(add(headStart, _1), mload(value0))\n        let memberValue0 := mload(add(value0, _1))\n        let _2 := 64\n        mstore(add(headStart, _2), and(memberValue0, sub(shl(160, 1), 1)))\n        let memberValue0_1 := mload(add(value0, _2))\n        mstore(add(headStart, 0x60), 0x60)\n        let pos := tail_1\n        let length := mload(memberValue0_1)\n        mstore(tail_1, length)\n        pos := add(headStart, 160)\n        let srcPtr := add(memberValue0_1, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            abi_encode_struct_Deposit(mload(srcPtr), pos)\n            pos := add(pos, _2)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256t_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_bool(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_struct$_Deposit_$6_memory_ptr__to_t_struct$_Deposit_$6_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        abi_encode_struct_Deposit(value0, headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_30387342b56d92eda96cb5c10202def43dc7520ce3ea737fcf37de34a736b32a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Withdrawal amount too big.\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_e86609f90be7ce8b182441c3917482d5c99b68354bce0a0117eed9c3614fba05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Too early to withdraw.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Index out of bounds\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_84ba28e46fa3d00d5192937a7ff6403b1faed2dc797082cfb43e6f0a3510446b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Can't deposit this Kong.\")\n        tail := add(headStart, 96)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_146d1c9f512b67e79f4693183aff46c96fcc7170b7d03dda10872af69bff1cfb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Not enough bananas to fund a loa\")\n        mstore(add(headStart, 96), \"n.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b75bbae855d8d6eb1bedd5ad8bdd62ccee862e79d5ddfe3f9b00a48840abaef0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Not enough deposits.\")\n        tail := add(headStart, 96)\n    }\n}",
                  "id": 7,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80639c437e54116100715780639c437e541461014f5780639f9fb96814610162578063b478fc0714610182578063b7c3505f146101b9578063bbd4e8c9146101cc578063c0316aa3146101d457600080fd5b8063199402e5146100ae57806323ad6db2146100d7578063258ab15c1461011457806390babe8b14610129578063910efae81461013c575b600080fd5b6100c16100bc366004611318565b6101dc565b6040516100ce9190611331565b60405180910390f35b6101046100e53660046113bb565b6001600160a01b031660009081526006602052604090205460ff161590565b60405190151581526020016100ce565b610127610122366004611318565b61029d565b005b6101276101373660046113f9565b6103eb565b61012761014a366004611318565b6103f7565b61012761015d366004611416565b610602565b610175610170366004611318565b610707565b6040516100ce9190611446565b6101ab6101903660046113bb565b6001600160a01b031660009081526004602052604090205490565b6040519081526020016100ce565b6101276101c7366004611318565b6107d9565b6101ab6109a8565b6007546101ab565b60408051606080820183526000808352602080840182905283850183905285825260058152848220855193840186528054845260018101546001600160a01b031684830152600281018054875181850281018501895281815296979596929587019492939192909184015b8282101561028f5760008481526020908190206040805180820190915260028502909101805482526001908101546001600160a01b0316828401529083529092019101610247565b505050915250909392505050565b336000908152600460205260409020548111156103015760405162461bcd60e51b815260206004820152601a60248201527f5769746864726177616c20616d6f756e7420746f6f206269672e00000000000060448201526064015b60405180910390fd5b8060076000828254610313919061147c565b9091555050336000908152600460205260408120805483929061033790849061147c565b909155505060035460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561038d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b19190611493565b5060405181815233907f1b2ddd05b84795a2399545c07b572670916505841f3dca544522702c95c6dac3906020015b60405180910390a250565b6103f4816109bf565b50565b42610406600a620151806114b0565b60008381526005602052604090205461041f91906114cf565b106104655760405162461bcd60e51b81526020600482015260166024820152752a37b79032b0b9363c903a37903bb4ba34323930bb9760511b60448201526064016102f8565b60008181526005602052604081205461048790610482904261147c565b6109fa565b9050600260009054906101000a90046001600160a01b03166001600160a01b0316633d18b9126040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156104d957600080fd5b505af11580156104ed573d6000803e3d6000fd5b505050506104fb8183610a22565b600254600083815260056020526040908190206001015490516323b872dd60e01b81523060048201526001600160a01b039182166024820152604481018590529116906323b872dd90606401600060405180830381600087803b15801561056157600080fd5b505af1158015610575573d6000803e3d6000fd5b5050506000838152600560209081526040918290206001015491518581526001600160a01b0390921692507f59994f7bed7ab9b9c914efb2b3467ee88e9a9b45afc792c3493d0b3583448154910160405180910390a260008281526005602052604081208181556001810180546001600160a01b0319169055906105fc60028301826112d1565b50505050565b33600090815260046020526040812080548492906106219084906114cf565b9091555061063190508233610ae2565b816007600082825461064391906114cf565b909155506106529050816109bf565b6003546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156106a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cd9190611493565b5060405182815233907f41c2204e0b8b95e51b469b325b7c4f84dd02258c431b7728bb84f665475cd6ec9060200160405180910390a25050565b60408051808201909152600080825260208201526001546000541161072b57600080fd5b60005460015461073c9084906114cf565b1061077f5760405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b60448201526064016102f8565b60008260015461078f91906114cf565b8154811061079f5761079f6114e7565b60009182526020918290206040805180820190915260029092020180548252600101546001600160a01b0316918101919091529050919050565b6107e4816103e91190565b6108305760405162461bcd60e51b815260206004820152601860248201527f43616e2774206465706f7369742074686973204b6f6e672e000000000000000060448201526064016102f8565b600081815260056020526040902042815560010180546001600160a01b0319163317905561085d81610b77565b6002546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd90606401600060405180830381600087803b1580156108af57600080fd5b505af11580156108c3573d6000803e3d6000fd5b50506003546001600160a01b0316915063a9059cbb905033606460506108f2600a678ac7230489e800006114b0565b6108fc91906114b0565b61090691906114fd565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610951573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109759190611493565b5060405181815233907fc51aa48e8a485bd6477140a30bc33abe671d92f680dd8a75c516b926aa009d93906020016103e0565b6001546000805490916109ba9161147c565b905090565b3360009081526006602052604090205460ff16151581151514156103f457336000908152600660205260409020805460ff1916821517905550565b600062015180610a1283678ac7230489e800006114b0565b610a1c91906114fd565b92915050565b6000818152600560205260409020600101546001600160a01b0316331415610a5257610a4e8183610f0c565b5050565b60005b600082815260056020526040902060020154811015610ad7576000828152600560205260409020600201805482908110610a9157610a916114e7565b60009182526020909120600290910201600101546001600160a01b0316331415610ac557610ac0828483610fe3565b505050565b80610acf8161151f565b915050610a55565b50610a4e8183610f0c565b604080518082019091529182526001600160a01b03908116602083019081526000805460018101825590805292517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563600290940293840155517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56490920180546001600160a01b03191692909116919091179055565b60646050610b8e600a678ac7230489e800006114b0565b610b9891906114b0565b610ba291906114fd565b6007541015610bfe5760405162461bcd60e51b815260206004820152602260248201527f4e6f7420656e6f7567682062616e616e617320746f2066756e642061206c6f61604482015261371760f11b60648201526084016102f8565b60005b6001546000541115610ecd576000610c176110c9565b6020808201516001600160a01b0316600090815260049091526040902054909150610c4b57610c4461113a565b5050610c01565b80516020808301516001600160a01b031660009081526004909152604081205490911115610c9757506020808201516001600160a01b0316600090815260049091526040902054610c9b565b5080515b6000610ca782856114cf565b905060646050610cc0600a678ac7230489e800006114b0565b610cca91906114b0565b610cd491906114fd565b811115610dd95760008460646050610cf5600a678ac7230489e800006114b0565b610cff91906114b0565b610d0991906114fd565b610d13919061147c565b90506000610d21828561147c565b9050610d2c816111ac565b60008781526005602090815260408083208151808301835286815289840180516001600160a01b039081168387019081526002948501805460018082018355918a52888a2095519602909401948555519390920180546001600160a01b031916938316939093179092559051168352600490915281208054849290610db290849061147c565b925050819055508160076000828254610dcb919061147c565b909155505050505050505050565b60008581526005602090815260408083208151808301835286815287840180516001600160a01b039081168387019081526002948501805460018082018355918a52888a2095519602909401948555519390920180546001600160a01b0319169383169390931790925590511683526004909152812080549295508592849290610e6490849061147c565b925050819055508160076000828254610e7d919061147c565b90915550610e8b905061113a565b5060646050610ea3600a678ac7230489e800006114b0565b610ead91906114b0565b610eb791906114fd565b811415610ec5575050505050565b505050610c01565b60405162461bcd60e51b81526020600482015260146024820152732737ba1032b737bab3b4103232b837b9b4ba399760611b60448201526064016102f8565b60005b600083815260056020526040902060020154811015610ac0576000838152600560205260408120600201805483908110610f4b57610f4b6114e7565b600091825260208083206040805180820190915260029093020180548352600101546001600160a01b031690820152915060646050610f93600a678ac7230489e800006114b0565b610f9d91906114b0565b610fa791906114fd565b8251610fb49086906114b0565b610fbe91906114fd565b9050610fce8260200151826111e6565b50508080610fdb9061151f565b915050610f0f565b60005b6000848152600560205260409020600201548110156105fc576000848152600560205260408120600201805483908110611022576110226114e7565b600091825260208083206040805180820190915260029093020180548084526001909101546001600160a01b0316918301919091529092506050906110689060646114b0565b61107291906114fd565b9050838314156110a65761108f600a678ac7230489e800006114b0565b611099908661147c565b6110a390826114cf565b90505b6110b48260200151826111e6565b505080806110c19061151f565b915050610fe6565b6040805180820190915260008082526020820152600154600054116110ed57600080fd5b600060015481548110611102576111026114e7565b60009182526020918290206040805180820190915260029092020180548252600101546001600160a01b031691810191909152905090565b60408051808201909152600080825260208201526001546000541161115e57600080fd5b600060015481548110611173576111736114e7565b600091825260208220600290910201818155600190810180546001600160a01b03191690558054916111a48361151f565b919050555090565b600154600054116111bc57600080fd5b806000600154815481106111d2576111d26114e7565b600091825260209091206002909102015550565b6001600160a01b03821660009081526006602052604090205460ff161561127e5760035460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af115801561125a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac09190611493565b6001600160a01b038216600090815260046020526040812080548392906112a69084906114cf565b909155506112b690508183610ae2565b80600760008282546112c891906114cf565b90915550505050565b50805460008255600202906000526020600020908101906103f491905b8082111561131457600081556001810180546001600160a01b03191690556002016112ee565b5090565b60006020828403121561132a57600080fd5b5035919050565b6020808252825182820152828101516001600160a01b0316604080840191909152808401516060808501528051608085018190526000939291830191849160a08701905b808410156113af5761139b828651805182526020908101516001600160a01b0316910152565b938501936001939093019290820190611375565b50979650505050505050565b6000602082840312156113cd57600080fd5b81356001600160a01b03811681146113e457600080fd5b9392505050565b80151581146103f457600080fd5b60006020828403121561140b57600080fd5b81356113e4816113eb565b6000806040838503121561142957600080fd5b82359150602083013561143b816113eb565b809150509250929050565b815181526020808301516001600160a01b03169082015260408101610a1c565b634e487b7160e01b600052601160045260246000fd5b60008282101561148e5761148e611466565b500390565b6000602082840312156114a557600080fd5b81516113e4816113eb565b60008160001904831182151516156114ca576114ca611466565b500290565b600082198211156114e2576114e2611466565b500190565b634e487b7160e01b600052603260045260246000fd5b60008261151a57634e487b7160e01b600052601260045260246000fd5b500490565b600060001982141561153357611533611466565b506001019056fea26469706673582212208d23c2e8a555d27b34bc43dc72aafcc462cf25f342ac2aedace1001ca6e1692364736f6c634300080b0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9C437E54 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x9C437E54 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x9F9FB968 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xB478FC07 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xB7C3505F EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0xBBD4E8C9 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0xC0316AA3 EQ PUSH2 0x1D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x199402E5 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x23AD6DB2 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x258AB15C EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x90BABE8B EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x910EFAE8 EQ PUSH2 0x13C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0x1318 JUMP JUMPDEST PUSH2 0x1DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x1331 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0xE5 CALLDATASIZE PUSH1 0x4 PUSH2 0x13BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0x127 PUSH2 0x122 CALLDATASIZE PUSH1 0x4 PUSH2 0x1318 JUMP JUMPDEST PUSH2 0x29D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x127 PUSH2 0x137 CALLDATASIZE PUSH1 0x4 PUSH2 0x13F9 JUMP JUMPDEST PUSH2 0x3EB JUMP JUMPDEST PUSH2 0x127 PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x1318 JUMP JUMPDEST PUSH2 0x3F7 JUMP JUMPDEST PUSH2 0x127 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x1416 JUMP JUMPDEST PUSH2 0x602 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x1318 JUMP JUMPDEST PUSH2 0x707 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x1446 JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x190 CALLDATASIZE PUSH1 0x4 PUSH2 0x13BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0x127 PUSH2 0x1C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1318 JUMP JUMPDEST PUSH2 0x7D9 JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1AB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x0 DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP4 DUP6 ADD DUP4 SWAP1 MSTORE DUP6 DUP3 MSTORE PUSH1 0x5 DUP2 MSTORE DUP5 DUP3 KECCAK256 DUP6 MLOAD SWAP4 DUP5 ADD DUP7 MSTORE DUP1 SLOAD DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP4 ADD MSTORE PUSH1 0x2 DUP2 ADD DUP1 SLOAD DUP8 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD DUP10 MSTORE DUP2 DUP2 MSTORE SWAP7 SWAP8 SWAP6 SWAP7 SWAP3 SWAP6 DUP8 ADD SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x28F JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 SWAP1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP5 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x247 JUMP JUMPDEST POP POP POP SWAP2 MSTORE POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x301 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5769746864726177616C20616D6F756E7420746F6F206269672E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x147C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x337 SWAP1 DUP5 SWAP1 PUSH2 0x147C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x38D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B1 SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x1B2DDD05B84795A2399545C07B572670916505841F3DCA544522702C95C6DAC3 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x3F4 DUP2 PUSH2 0x9BF JUMP JUMPDEST POP JUMP JUMPDEST TIMESTAMP PUSH2 0x406 PUSH1 0xA PUSH3 0x15180 PUSH2 0x14B0 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x14CF JUMP JUMPDEST LT PUSH2 0x465 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2A37B79032B0B9363C903A37903BB4BA34323930BB97 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x487 SWAP1 PUSH2 0x482 SWAP1 TIMESTAMP PUSH2 0x147C JUMP JUMPDEST PUSH2 0x9FA JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3D18B912 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x4FB DUP2 DUP4 PUSH2 0xA22 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x561 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x575 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 MLOAD DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 POP PUSH32 0x59994F7BED7AB9B9C914EFB2B3467EE88E9A9B45AFC792C3493D0B3583448154 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE SWAP1 PUSH2 0x5FC PUSH1 0x2 DUP4 ADD DUP3 PUSH2 0x12D1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x621 SWAP1 DUP5 SWAP1 PUSH2 0x14CF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x631 SWAP1 POP DUP3 CALLER PUSH2 0xAE2 JUMP JUMPDEST DUP2 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x643 SWAP2 SWAP1 PUSH2 0x14CF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x652 SWAP1 POP DUP2 PUSH2 0x9BF JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6CD SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x41C2204E0B8B95E51B469B325B7C4F84DD02258C431B7728BB84F665475CD6EC SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD GT PUSH2 0x72B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH2 0x73C SWAP1 DUP5 SWAP1 PUSH2 0x14CF JUMP JUMPDEST LT PUSH2 0x77F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E646578206F7574206F6620626F756E6473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 SLOAD PUSH2 0x78F SWAP2 SWAP1 PUSH2 0x14CF JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x79F JUMPI PUSH2 0x79F PUSH2 0x14E7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 SWAP1 SWAP3 MUL ADD DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7E4 DUP2 PUSH2 0x3E9 GT SWAP1 JUMP JUMPDEST PUSH2 0x830 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E2774206465706F7369742074686973204B6F6E672E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP DUP2 SSTORE PUSH1 0x1 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x85D DUP2 PUSH2 0xB77 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH4 0xA9059CBB SWAP1 POP CALLER PUSH1 0x64 PUSH1 0x50 PUSH2 0x8F2 PUSH1 0xA PUSH8 0x8AC7230489E80000 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0x8FC SWAP2 SWAP1 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0x906 SWAP2 SWAP1 PUSH2 0x14FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x951 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x975 SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xC51AA48E8A485BD6477140A30BC33ABE671D92F680DD8A75C516B926AA009D93 SWAP1 PUSH1 0x20 ADD PUSH2 0x3E0 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD SWAP1 SWAP2 PUSH2 0x9BA SWAP2 PUSH2 0x147C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO DUP2 ISZERO ISZERO EQ ISZERO PUSH2 0x3F4 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x15180 PUSH2 0xA12 DUP4 PUSH8 0x8AC7230489E80000 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0xA1C SWAP2 SWAP1 PUSH2 0x14FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0xA52 JUMPI PUSH2 0xA4E DUP2 DUP4 PUSH2 0xF0C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP2 LT ISZERO PUSH2 0xAD7 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0xA91 JUMPI PUSH2 0xA91 PUSH2 0x14E7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0xAC5 JUMPI PUSH2 0xAC0 DUP3 DUP5 DUP4 PUSH2 0xFE3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH2 0xACF DUP2 PUSH2 0x151F JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA55 JUMP JUMPDEST POP PUSH2 0xA4E DUP2 DUP4 PUSH2 0xF0C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP1 MSTORE SWAP3 MLOAD PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 PUSH1 0x2 SWAP1 SWAP5 MUL SWAP4 DUP5 ADD SSTORE MLOAD PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E564 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x64 PUSH1 0x50 PUSH2 0xB8E PUSH1 0xA PUSH8 0x8AC7230489E80000 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0xB98 SWAP2 SWAP1 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0xBA2 SWAP2 SWAP1 PUSH2 0x14FD JUMP JUMPDEST PUSH1 0x7 SLOAD LT ISZERO PUSH2 0xBFE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682062616E616E617320746F2066756E642061206C6F61 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3717 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD GT ISZERO PUSH2 0xECD JUMPI PUSH1 0x0 PUSH2 0xC17 PUSH2 0x10C9 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0xC4B JUMPI PUSH2 0xC44 PUSH2 0x113A JUMP JUMPDEST POP POP PUSH2 0xC01 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 GT ISZERO PUSH2 0xC97 JUMPI POP PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xC9B JUMP JUMPDEST POP DUP1 MLOAD JUMPDEST PUSH1 0x0 PUSH2 0xCA7 DUP3 DUP6 PUSH2 0x14CF JUMP JUMPDEST SWAP1 POP PUSH1 0x64 PUSH1 0x50 PUSH2 0xCC0 PUSH1 0xA PUSH8 0x8AC7230489E80000 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0xCCA SWAP2 SWAP1 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0xCD4 SWAP2 SWAP1 PUSH2 0x14FD JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0xDD9 JUMPI PUSH1 0x0 DUP5 PUSH1 0x64 PUSH1 0x50 PUSH2 0xCF5 PUSH1 0xA PUSH8 0x8AC7230489E80000 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0xCFF SWAP2 SWAP1 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0xD09 SWAP2 SWAP1 PUSH2 0x14FD JUMP JUMPDEST PUSH2 0xD13 SWAP2 SWAP1 PUSH2 0x147C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD21 DUP3 DUP6 PUSH2 0x147C JUMP JUMPDEST SWAP1 POP PUSH2 0xD2C DUP2 PUSH2 0x11AC JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE DUP7 DUP2 MSTORE DUP10 DUP5 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 SWAP5 DUP6 ADD DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE SWAP2 DUP11 MSTORE DUP9 DUP11 KECCAK256 SWAP6 MLOAD SWAP7 MUL SWAP1 SWAP5 ADD SWAP5 DUP6 SSTORE MLOAD SWAP4 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP4 DUP4 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE SWAP1 MLOAD AND DUP4 MSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xDB2 SWAP1 DUP5 SWAP1 PUSH2 0x147C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDCB SWAP2 SWAP1 PUSH2 0x147C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE DUP7 DUP2 MSTORE DUP8 DUP5 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 SWAP5 DUP6 ADD DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE SWAP2 DUP11 MSTORE DUP9 DUP11 KECCAK256 SWAP6 MLOAD SWAP7 MUL SWAP1 SWAP5 ADD SWAP5 DUP6 SSTORE MLOAD SWAP4 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP4 DUP4 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE SWAP1 MLOAD AND DUP4 MSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP6 POP DUP6 SWAP3 DUP5 SWAP3 SWAP1 PUSH2 0xE64 SWAP1 DUP5 SWAP1 PUSH2 0x147C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE7D SWAP2 SWAP1 PUSH2 0x147C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xE8B SWAP1 POP PUSH2 0x113A JUMP JUMPDEST POP PUSH1 0x64 PUSH1 0x50 PUSH2 0xEA3 PUSH1 0xA PUSH8 0x8AC7230489E80000 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0xEAD SWAP2 SWAP1 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0xEB7 SWAP2 SWAP1 PUSH2 0x14FD JUMP JUMPDEST DUP2 EQ ISZERO PUSH2 0xEC5 JUMPI POP POP POP POP POP JUMP JUMPDEST POP POP POP PUSH2 0xC01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2737BA1032B737BAB3B4103232B837B9B4BA3997 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP2 LT ISZERO PUSH2 0xAC0 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0xF4B JUMPI PUSH2 0xF4B PUSH2 0x14E7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 SWAP1 SWAP4 MUL ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE SWAP2 POP PUSH1 0x64 PUSH1 0x50 PUSH2 0xF93 PUSH1 0xA PUSH8 0x8AC7230489E80000 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0xF9D SWAP2 SWAP1 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0xFA7 SWAP2 SWAP1 PUSH2 0x14FD JUMP JUMPDEST DUP3 MLOAD PUSH2 0xFB4 SWAP1 DUP7 SWAP1 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0xFBE SWAP2 SWAP1 PUSH2 0x14FD JUMP JUMPDEST SWAP1 POP PUSH2 0xFCE DUP3 PUSH1 0x20 ADD MLOAD DUP3 PUSH2 0x11E6 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0xFDB SWAP1 PUSH2 0x151F JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP2 LT ISZERO PUSH2 0x5FC JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x1022 JUMPI PUSH2 0x1022 PUSH2 0x14E7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 SWAP1 SWAP4 MUL ADD DUP1 SLOAD DUP1 DUP5 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP3 POP PUSH1 0x50 SWAP1 PUSH2 0x1068 SWAP1 PUSH1 0x64 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0x1072 SWAP2 SWAP1 PUSH2 0x14FD JUMP JUMPDEST SWAP1 POP DUP4 DUP4 EQ ISZERO PUSH2 0x10A6 JUMPI PUSH2 0x108F PUSH1 0xA PUSH8 0x8AC7230489E80000 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0x1099 SWAP1 DUP7 PUSH2 0x147C JUMP JUMPDEST PUSH2 0x10A3 SWAP1 DUP3 PUSH2 0x14CF JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x10B4 DUP3 PUSH1 0x20 ADD MLOAD DUP3 PUSH2 0x11E6 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x10C1 SWAP1 PUSH2 0x151F JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFE6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD GT PUSH2 0x10ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x1102 JUMPI PUSH2 0x1102 PUSH2 0x14E7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 SWAP1 SWAP3 MUL ADD DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD GT PUSH2 0x115E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x1173 JUMPI PUSH2 0x1173 PUSH2 0x14E7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP2 DUP2 SSTORE PUSH1 0x1 SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE DUP1 SLOAD SWAP2 PUSH2 0x11A4 DUP4 PUSH2 0x151F JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD GT PUSH2 0x11BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x11D2 JUMPI PUSH2 0x11D2 PUSH2 0x14E7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x127E JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x125A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAC0 SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x12A6 SWAP1 DUP5 SWAP1 PUSH2 0x14CF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x12B6 SWAP1 POP DUP2 DUP4 PUSH2 0xAE2 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x12C8 SWAP2 SWAP1 PUSH2 0x14CF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE PUSH1 0x2 MUL SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3F4 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1314 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x2 ADD PUSH2 0x12EE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x132A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD MSTORE DUP3 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 DUP5 ADD MLOAD PUSH1 0x60 DUP1 DUP6 ADD MSTORE DUP1 MLOAD PUSH1 0x80 DUP6 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP4 SWAP3 SWAP2 DUP4 ADD SWAP2 DUP5 SWAP2 PUSH1 0xA0 DUP8 ADD SWAP1 JUMPDEST DUP1 DUP5 LT ISZERO PUSH2 0x13AF JUMPI PUSH2 0x139B DUP3 DUP7 MLOAD DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 ADD MSTORE JUMP JUMPDEST SWAP4 DUP6 ADD SWAP4 PUSH1 0x1 SWAP4 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP3 ADD SWAP1 PUSH2 0x1375 JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x140B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x13E4 DUP2 PUSH2 0x13EB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x143B DUP2 PUSH2 0x13EB JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH2 0xA1C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x148E JUMPI PUSH2 0x148E PUSH2 0x1466 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x13E4 DUP2 PUSH2 0x13EB JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x14CA JUMPI PUSH2 0x14CA PUSH2 0x1466 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x14E2 JUMPI PUSH2 0x14E2 PUSH2 0x1466 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x151A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1533 JUMPI PUSH2 0x1533 PUSH2 0x1466 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 0x23 0xC2 0xE8 0xA5 SSTORE 0xD2 PUSH28 0x34BC43DC72AAFCC462CF25F342AC2AEDACE1001CA6E1692364736F6C PUSH4 0x4300080B STOP CALLER ",
              "sourceMap": "409:7487:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7635:121;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7762:131;;;;;;:::i;:::-;-1:-1:-1;;;;;7862:24:1;7838:4;7862:24;;;:17;:24;;;;;;;;7861:25;;7762:131;;;;1809:14:7;;1802:22;1784:41;;1772:2;1757:18;7762:131:1;1644:187:7;1861:334:1;;;;;;:::i;:::-;;:::i;:::-;;3137:135;;;;;;:::i;:::-;;:::i;2623:508::-;;;;;;:::i;:::-;;:::i;1472:383::-;;;;;;:::i;:::-;;:::i;1049:219:0:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;7397:121:1:-;;;;;;:::i;:::-;-1:-1:-1;;;;;7491:20:1;7465:7;7491:20;;;:13;:20;;;;;;;7397:121;;;;2910:25:7;;;2898:2;2883:18;7397:121:1;2764:177:7;2201:416:1;;;;;;:::i;:::-;;:::i;935:108:0:-;;;:::i;7524:105:1:-;7603:19;;7524:105;;7635:121;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;7730:19:1;;;:14;:19;;;;;7723:26;;;;;;;;;;;;;;;-1:-1:-1;;;;;7723:26:1;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7723:26:1;;7730:19;;7723:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7723:26:1;;;;;;;;;;;;;;;;-1:-1:-1;;;7723:26:1;;-1:-1:-1;7723:26:1;;7635:121;-1:-1:-1;;;7635:121:1:o;1861:334::-;1962:10;1948:25;;;;:13;:25;;;;;;1937:36;;;1929:75;;;;-1:-1:-1;;;1929:75:1;;3148:2:7;1929:75:1;;;3130:21:7;3187:2;3167:18;;;3160:30;3226:28;3206:18;;;3199:56;3272:18;;1929:75:1;;;;;;;;;2037:7;2014:19;;:30;;;;;;;:::i;:::-;;;;-1:-1:-1;;2068:10:1;2054:25;;;;:13;:25;;;;;:36;;2083:7;;2054:25;:36;;2083:7;;2054:36;:::i;:::-;;;;-1:-1:-1;;2100:7:1;;:37;;-1:-1:-1;;;2100:37:1;;2117:10;2100:37;;;3737:51:7;3804:18;;;3797:34;;;-1:-1:-1;;;;;2100:7:1;;;;:16;;3710:18:7;;2100:37:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2152:36:1;;2910:25:7;;;2168:10:1;;2152:36;;2898:2:7;2883:18;2152:36:1;;;;;;;;1861:334;:::o;3137:135::-;3222:43;3247:17;3222:24;:43::i;:::-;3137:135;:::o;2623:508::-;2754:15;1026:27;969:2;1048:5;1026:27;:::i;:::-;2693:19;;;;:14;:19;;;;;:33;:58;;;;:::i;:::-;:76;2685:111;;;;-1:-1:-1;;;2685:111:1;;4600:2:7;2685:111:1;;;4582:21:7;4639:2;4619:18;;;4612:30;-1:-1:-1;;;4658:18:7;;;4651:52;4720:18;;2685:111:1;4398:346:7;2685:111:1;2806:14;2852:19;;;:14;:19;;;;;:33;2823:63;;2834:51;;:15;:51;:::i;:::-;2823:10;:63::i;:::-;2806:80;;2896:5;;;;;;;;;-1:-1:-1;;;;;2896:5:1;-1:-1:-1;;;;;2896:15:1;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2923:30;2941:6;2949:3;2923:17;:30::i;:::-;2963:5;;;2997:19;;;:14;:19;;;;;;;2963:5;2997:25;;2963:65;;-1:-1:-1;;;2963:65:1;;2990:4;2963:65;;;4989:34:7;-1:-1:-1;;;;;2997:25:1;;;5039:18:7;;;5032:43;5091:18;;;5084:34;;;2963:5:1;;;:18;;4924::7;;2963:65:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3057:19:1;;;;:14;:19;;;;;;;;;:25;;;3043:45;;2910:25:7;;;-1:-1:-1;;;;;3057:25:1;;;;-1:-1:-1;3043:45:1;;2883:18:7;3043:45:1;;;;;;;3105:19;;;;:14;:19;;;;;3098:26;;;;;;;;-1:-1:-1;;;;;;3098:26:1;;;3105:19;3098:26;;;;3105:19;3098:26;:::i;:::-;;;2675:456;2623:508;:::o;1472:383::-;1577:10;1563:25;;;;:13;:25;;;;;:36;;1592:7;;1563:25;:36;;1592:7;;1563:36;:::i;:::-;;;;-1:-1:-1;1609:32:1;;-1:-1:-1;1621:7:1;1630:10;1609:11;:32::i;:::-;1674:7;1651:19;;:30;;;;;;;:::i;:::-;;;;-1:-1:-1;1691:43:1;;-1:-1:-1;1716:17:1;1691:24;:43::i;:::-;1744:7;;:56;;-1:-1:-1;;;1744:56:1;;1765:10;1744:56;;;4989:34:7;1785:4:1;5039:18:7;;;5032:43;5091:18;;;5084:34;;;-1:-1:-1;;;;;1744:7:1;;;;:20;;4924:18:7;;1744:56:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1815:33:1;;2910:25:7;;;1828:10:1;;1815:33;;2898:2:7;2883:18;1815:33:1;;;;;;;1472:383;;:::o;1049:219:0:-;-1:-1:-1;;;;;;;;;;;;;;;;;312:8:0;;266:4;289:19;:31;363;;;;;;1170:12:::1;:19:::0;1150:8:::1;::::0;:17:::1;::::0;1161:6;;1150:17:::1;:::i;:::-;:39;1142:71;;;::::0;-1:-1:-1;;;1142:71:0;;5331:2:7;1142:71:0::1;::::0;::::1;5313:21:7::0;5370:2;5350:18;;;5343:30;-1:-1:-1;;;5389:18:7;;;5382:49;5448:18;;1142:71:0::1;5129:343:7::0;1142:71:0::1;1230:12;1254:6;1243:8;;:17;;;;:::i;:::-;1230:31;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;1223:38:::1;::::0;;;;::::1;::::0;;;1230:31:::1;::::0;;::::1;;1223:38:::0;;;;::::1;;::::0;-1:-1:-1;;;;;1223:38:0::1;::::0;;::::1;::::0;;;;;-1:-1:-1;1049:219:0;;;:::o;2201:416:1:-;2270:16;2282:3;7259:4;-1:-1:-1;7253:10:1;7174:96;2270:16;2262:53;;;;-1:-1:-1;;;2262:53:1;;5811:2:7;2262:53:1;;;5793:21:7;5850:2;5830:18;;;5823:30;5889:26;5869:18;;;5862:54;5933:18;;2262:53:1;5609:348:7;2262:53:1;2325:19;;;;:14;:19;;;;;2361:15;2325:51;;2386:25;;:38;;-1:-1:-1;;;;;;2386:38:1;2414:10;2386:38;;;2434:23;2340:3;2434:18;:23::i;:::-;2467:5;;:50;;-1:-1:-1;;;2467:50:1;;2486:10;2467:50;;;4989:34:7;2506:4:1;5039:18:7;;;5032:43;5091:18;;;5084:34;;;-1:-1:-1;;;;;2467:5:1;;;;:18;;4924::7;;2467:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2527:7:1;;-1:-1:-1;;;;;2527:7:1;;-1:-1:-1;2527:16:1;;-1:-1:-1;2544:10:1;1334:3;1187:2;1237:31;969:2;1088:8;1237:31;:::i;:::-;1305:26;;;;:::i;:::-;:32;;;;:::i;:::-;2527:41;;-1:-1:-1;;;;;;2527:41:1;;;;;;;-1:-1:-1;;;;;3755:32:7;;;2527:41:1;;;3737:51:7;3804:18;;;3797:34;3710:18;;2527:41:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2583:27:1;;2910:25:7;;;2594:10:1;;2583:27;;2898:2:7;2883:18;2583:27:1;2764:177:7;935:108:0;1028:8;;980:7;1006:19;;980:7;;1006:30;;;:::i;:::-;999:37;;935:108;:::o;3278:214:1:-;3377:10;3359:29;;;;:17;:29;;;;;;;;:50;;;;;;3355:131;;;3443:10;3425:29;;;;:17;:29;;;;;:50;;-1:-1:-1;;3425:50:1;3457:18;;3425:50;;;3278:214;:::o;7276:115::-;7333:7;7379:5;7359:17;7371:5;1088:8;7359:17;:::i;:::-;:25;;;;:::i;:::-;7352:32;7276:115;-1:-1:-1;;7276:115:1:o;3498:773::-;3648:19;;;;:14;:19;;;;;:25;;;-1:-1:-1;;;;;3648:25:1;3634:10;:39;3630:635;;;3689:46;3722:3;3727:7;3689:32;:46::i;:::-;3498:773;;:::o;3630:635::-;3833:6;3828:275;3849:19;;;;:14;:19;;;;;:32;;:39;3845:43;;3828:275;;;3931:19;;;;:14;:19;;;;;:32;;:35;;3964:1;;3931:35;;;;;;:::i;:::-;;;;;;;;;;;;;;:42;;;-1:-1:-1;;;;;3931:42:1;3917:10;:56;3913:176;;;3997:45;4026:3;4031:7;4040:1;3997:28;:45::i;:::-;4064:7;3498:773;;:::o;3913:176::-;3890:3;;;;:::i;:::-;;;;3828:275;;;;4208:46;4241:3;4246:7;4208:32;:46::i;418:125:0:-;510:25;;;;;;;;;;;;-1:-1:-1;;;;;510:25:0;;;;;;;;;-1:-1:-1;492:44:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;492:44:0;;;;;;;;;;;418:125::o;5139:1674:1:-;1334:3;1187:2;1237:31;969:2;1088:8;1237:31;:::i;:::-;1305:26;;;;:::i;:::-;:32;;;;:::i;:::-;5207:19;;:34;;5199:81;;;;-1:-1:-1;;;5199:81:1;;6526:2:7;5199:81:1;;;6508:21:7;6565:2;6545:18;;;6538:30;6604:34;6584:18;;;6577:62;-1:-1:-1;;;6655:18:7;;;6648:32;6697:19;;5199:81:1;6324:398:7;5199:81:1;5290:22;5326:1363;312:8:0;;266:4;289:19;:31;;5326:1363:1;;5371:16;5390:15;:13;:15::i;:::-;5437:8;;;;;-1:-1:-1;;;;;5423:23:1;;;;;:13;:23;;;;;;;5371:34;;-1:-1:-1;5419:105:1;;5471:12;:10;:12::i;:::-;;5501:8;;;5419:105;5602:8;;5590;;;;;-1:-1:-1;;;;;5576:23:1;5537:21;5576:23;;;:13;:23;;;;;;;5537:21;;-1:-1:-1;5572:175:1;;;-1:-1:-1;5660:8:1;;;;;-1:-1:-1;;;;;5646:23:1;;;;;:13;:23;;;;;;;5572:175;;;-1:-1:-1;5724:8:1;;5572:175;5760:23;5786:30;5803:13;5786:14;:30;:::i;:::-;5760:56;-1:-1:-1;1334:3:1;1187:2;1237:31;969:2;1088:8;1237:31;:::i;:::-;1305:26;;;;:::i;:::-;:32;;;;:::i;:::-;5834:15;:29;5830:849;;;5883:18;5918:14;1334:3;1187:2;1237:31;969:2;1088:8;1237:31;:::i;:::-;1305:26;;;;:::i;:::-;:32;;;;:::i;:::-;5904:28;;;;:::i;:::-;5883:49;-1:-1:-1;5950:18:1;5971:26;5883:49;5971:13;:26;:::i;:::-;5950:47;;6015:31;6035:10;6015:19;:31::i;:::-;6064:19;;;;:14;:19;;;;;;;;6102:29;;;;;;;;;;6122:8;;;;;-1:-1:-1;;;;;6102:29:1;;;;;;;;;6064:32;;;;:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6064:68:1;;;;;;;;;;;6164:8;;6150:23;;;:13;:23;;;;;:37;;6102:29;;6064:19;6150:37;;6102:29;;6150:37;:::i;:::-;;;;;;;;6228:10;6205:19;;:33;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;;;5139:1674:1:o;5830:849::-;6301:19;;;;:14;:19;;;;;;;;6339:32;;;;;;;;;;6362:8;;;;;-1:-1:-1;;;;;6339:32:1;;;;;;;;;6301;;;;:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6301:71:1;;;;;;;;;;;6454:8;;6440:23;;;:13;:23;;;;;:40;;6407:15;;-1:-1:-1;6407:15:1;;6339:32;;6301:19;6440:40;;6339:32;;6440:40;:::i;:::-;;;;;;;;6521:13;6498:19;;:36;;;;;;;:::i;:::-;;;;-1:-1:-1;6552:12:1;;-1:-1:-1;6552:10:1;:12::i;:::-;-1:-1:-1;1334:3:1;1187:2;1237:31;969:2;1088:8;1237:31;:::i;:::-;1305:26;;;;:::i;:::-;:32;;;;:::i;:::-;6586:15;:30;6582:83;;;6640:7;;;;5139:1674;:::o;6582:83::-;5357:1332;;;5326:1363;;;6776:30;;-1:-1:-1;;;6776:30:1;;6929:2:7;6776:30:1;;;6911:21:7;6968:2;6948:18;;;6941:30;-1:-1:-1;;;6987:18:7;;;6980:50;7047:18;;6776:30:1;6727:344:7;4277:368:1;4373:6;4368:271;4389:19;;;;:14;:19;;;;;:32;;:39;4385:43;;4368:271;;;4449:16;4468:19;;;:14;:19;;;;;:32;;:35;;4501:1;;4468:35;;;;;;:::i;:::-;;;;;;;;;4449:54;;;;;;;;;4468:35;;;;;4449:54;;;;;;;-1:-1:-1;;;;;4449:54:1;;;;;;-1:-1:-1;1334:3:1;1187:2;1237:31;969:2;1088:8;1237:31;:::i;:::-;1305:26;;;;:::i;:::-;:32;;;;:::i;:::-;4535:8;;:18;;4546:7;;4535:18;:::i;:::-;:32;;;;:::i;:::-;4517:50;;4581:47;4610:1;:8;;;4620:7;4581:28;:47::i;:::-;4435:204;;4430:3;;;;;:::i;:::-;;;;4368:271;;4651:482;4764:6;4759:368;4780:19;;;;:14;:19;;;;;:32;;:39;4776:43;;4759:368;;;4840:16;4859:19;;;:14;:19;;;;;:32;;:35;;4892:1;;4859:35;;;;;;:::i;:::-;;;;;;;;;4840:54;;;;;;;;;4859:35;;;;;4840:54;;;;;;;;;;-1:-1:-1;;;;;4840:54:1;;;;;;;;;;-1:-1:-1;1187:2:1;;4926:14;;4937:3;4926:14;:::i;:::-;:25;;;;:::i;:::-;4908:43;;4974:11;4969:1;:16;4965:91;;;1237:31;969:2;1088:8;1237:31;:::i;:::-;5016:25;;:7;:25;:::i;:::-;5005:36;;;;:::i;:::-;;;4965:91;5069:47;5098:1;:8;;;5108:7;5069:28;:47::i;:::-;4826:301;;4821:3;;;;;:::i;:::-;;;;4759:368;;685:118:0;-1:-1:-1;;;;;;;;;;;;;;;;;312:8:0;;266:4;289:19;:31;363;;;;;;774:12:::1;787:8;;774:22;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;767:29:::1;::::0;;;;::::1;::::0;;;774:22:::1;::::0;;::::1;;767:29:::0;;;;::::1;;::::0;-1:-1:-1;;;;;767:29:0::1;::::0;;::::1;::::0;;;;;-1:-1:-1;685:118:0;:::o;549:130::-;-1:-1:-1;;;;;;;;;;;;;;;;;312:8:0;;266:4;289:19;:31;363;;;;;;630:12:::1;643:8;;630:22;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;::::1;::::0;;::::1;;623:29:::0;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;;623:29:0::1;::::0;;662:10;;;::::1;::::0;::::1;:::i;:::-;;;;;;549:130:::0;:::o;809:120::-;312:8;;266:4;289:19;:31;363;;;;;;915:7:::1;883:12;896:8;;883:22;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:39:::0;-1:-1:-1;809:120:0:o;6819:349:1:-;-1:-1:-1;;;;;6916:28:1;;;;;;:17;:28;;;;;;;;6912:250;;;6960:7;;:36;;-1:-1:-1;;;6960:36:1;;-1:-1:-1;;;;;3755:32:7;;;6960:36:1;;;3737:51:7;3804:18;;;3797:34;;;6960:7:1;;;;:16;;3710:18:7;;6960:36:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;6912:250::-;-1:-1:-1;;;;;7027:24:1;;;;;;:13;:24;;;;;:35;;7055:7;;7027:24;:35;;7055:7;;7027:35;:::i;:::-;;;;-1:-1:-1;7076:31:1;;-1:-1:-1;7088:7:1;7097:9;7076:11;:31::i;:::-;7144:7;7121:19;;:30;;;;;;;:::i;:::-;;;;-1:-1:-1;;6819:349:1;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:180:7:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:7;;14:180;-1:-1:-1;14:180:7:o;378:970::-;557:2;568:21;;;667:13;;647:18;;;640:41;716:15;;;710:22;-1:-1:-1;;;;;789:38:7;751:2;769:18;;;762:66;;;;865:15;;;859:22;919:4;897:20;;;890:34;973:21;;627:3;612:19;;1003:22;;;528:4;;557:2;1083:23;;;;528:4;;815:3;1041:19;;;1134:188;1148:6;1145:1;1142:13;1134:188;;;1197:45;1238:3;1229:6;1223:13;272:12;;260:25;;338:4;327:16;;;321:23;-1:-1:-1;;;;;317:49:7;301:14;;294:73;199:174;1197:45;1297:15;;;;1170:1;1163:9;;;;;1262:12;;;;1134:188;;;-1:-1:-1;1339:3:7;378:970;-1:-1:-1;;;;;;;378:970:7:o;1353:286::-;1412:6;1465:2;1453:9;1444:7;1440:23;1436:32;1433:52;;;1481:1;1478;1471:12;1433:52;1507:23;;-1:-1:-1;;;;;1559:31:7;;1549:42;;1539:70;;1605:1;1602;1595:12;1539:70;1628:5;1353:286;-1:-1:-1;;;1353:286:7:o;1836:118::-;1922:5;1915:13;1908:21;1901:5;1898:32;1888:60;;1944:1;1941;1934:12;1959:241;2015:6;2068:2;2056:9;2047:7;2043:23;2039:32;2036:52;;;2084:1;2081;2074:12;2036:52;2123:9;2110:23;2142:28;2164:5;2142:28;:::i;2205:309::-;2270:6;2278;2331:2;2319:9;2310:7;2306:23;2302:32;2299:52;;;2347:1;2344;2337:12;2299:52;2383:9;2370:23;2360:33;;2443:2;2432:9;2428:18;2415:32;2456:28;2478:5;2456:28;:::i;:::-;2503:5;2493:15;;;2205:309;;;;;:::o;2519:240::-;272:12;;260:25;;338:4;327:16;;;321:23;-1:-1:-1;;;;;317:49:7;301:14;;;294:73;2697:2;2682:18;;2709:44;199:174;3301:127;3362:10;3357:3;3353:20;3350:1;3343:31;3393:4;3390:1;3383:15;3417:4;3414:1;3407:15;3433:125;3473:4;3501:1;3498;3495:8;3492:34;;;3506:18;;:::i;:::-;-1:-1:-1;3543:9:7;;3433:125::o;3842:245::-;3909:6;3962:2;3950:9;3941:7;3937:23;3933:32;3930:52;;;3978:1;3975;3968:12;3930:52;4010:9;4004:16;4029:28;4051:5;4029:28;:::i;4092:168::-;4132:7;4198:1;4194;4190:6;4186:14;4183:1;4180:21;4175:1;4168:9;4161:17;4157:45;4154:71;;;4205:18;;:::i;:::-;-1:-1:-1;4245:9:7;;4092:168::o;4265:128::-;4305:3;4336:1;4332:6;4329:1;4326:13;4323:39;;;4342:18;;:::i;:::-;-1:-1:-1;4378:9:7;;4265:128::o;5477:127::-;5538:10;5533:3;5529:20;5526:1;5519:31;5569:4;5566:1;5559:15;5593:4;5590:1;5583:15;5962:217;6002:1;6028;6018:132;;6072:10;6067:3;6063:20;6060:1;6053:31;6107:4;6104:1;6097:15;6135:4;6132:1;6125:15;6018:132;-1:-1:-1;6164:9:7;;5962:217::o;6184:135::-;6223:3;-1:-1:-1;;6244:17:7;;6241:43;;;6264:18;;:::i;:::-;-1:-1:-1;6311:1:7;6300:13;;6184:135::o"
            },
            "methodIdentifiers": {
              "autoCompoundStrategy(address)": "23ad6db2",
              "depositErc20(uint256,bool)": "9c437e54",
              "depositNft(uint256)": "b7c3505f",
              "depositedNft(uint256)": "199402e5",
              "erc20Balance(address)": "b478fc07",
              "getDeposit(uint256)": "9f9fb968",
              "numDeposits()": "bbd4e8c9",
              "setAutoCompoundStrategy(bool)": "90babe8b",
              "totalErc20()": "c0316aa3",
              "withdrawErc20(uint256)": "258ab15c",
              "withdrawNft(uint256)": "910efae8"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bananas\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_kongz\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Erc20Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Erc20Withdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"NftDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"NftWithdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"autoCompoundStrategy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isAutoCompoundOn\",\"type\":\"bool\"}],\"name\":\"depositErc20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"depositNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"depositedNft\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"timeDeposited\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"internalType\":\"struct DepositQueue.Deposit[]\",\"name\":\"shareholders\",\"type\":\"tuple[]\"}],\"internalType\":\"struct HyksosCyberkongz.DepositedNft\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"erc20Balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getDeposit\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"internalType\":\"struct DepositQueue.Deposit\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isAutoCompoundOn\",\"type\":\"bool\"}],\"name\":\"setAutoCompoundStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalErc20\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawErc20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"withdrawNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HyksosCyberkongz.sol\":\"HyksosCyberkongz\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DepositQueue.sol\":{\"keccak256\":\"0x62df624f52709ef3ce0b0d5e499c111d3243104f84cc16a9a82a425caddff038\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7870bd388dcd56469d6c3c84009a18d6edc246194106a6282e022bf1f98adab8\",\"dweb:/ipfs/QmQGrjRLWeJDFjRWgjmcbAuvxWjbnWYnjJ7rFzUSfvYeBJ\"]},\"contracts/HyksosCyberkongz.sol\":{\"keccak256\":\"0x67771ca77bd6f826beee0ea8a6068cbecbb82259782adc370fe44a831c695a9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2267ff21e3fa87413585690e0fc3212fa3a9afb26d6e441292ef7eab08b81edb\",\"dweb:/ipfs/QmQXwCm9gKs3shLHfpBCvi9z83NVWNGq7fHt2tL5m3rMsq\"]},\"contracts/IHyksos.sol\":{\"keccak256\":\"0x10d932c15a2d87125c991889ec0c1223e5f35325bb5262e7ad076a99ab406f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eecd2f8308dbc9570f9c0378d3688b3052b74bf1435e8f44b98f2bc7bec2f801\",\"dweb:/ipfs/QmTCAjsHoGUjqmuojH13XnfDkxZPNqMjpi4L2Dgdppi6rz\"]},\"openzeppelin/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"openzeppelin/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"openzeppelin/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"openzeppelin/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"
        },
        "IKongz": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "approved",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "ApprovalForAll",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_user",
                  "type": "address"
                }
              ],
              "name": "balanceOG",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "getApproved",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getReward",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "isApprovedForAll",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ownerOf",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "_approved",
                  "type": "bool"
                }
              ],
              "name": "setApprovalForAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "approve(address,uint256)": "095ea7b3",
              "balanceOG(address)": "38712d8d",
              "balanceOf(address)": "70a08231",
              "getApproved(uint256)": "081812fc",
              "getReward()": "3d18b912",
              "isApprovedForAll(address,address)": "e985e9c5",
              "ownerOf(uint256)": "6352211e",
              "safeTransferFrom(address,address,uint256)": "42842e0e",
              "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
              "setApprovalForAll(address,bool)": "a22cb465",
              "supportsInterface(bytes4)": "01ffc9a7",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"balanceOG\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HyksosCyberkongz.sol\":\"IKongz\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DepositQueue.sol\":{\"keccak256\":\"0x62df624f52709ef3ce0b0d5e499c111d3243104f84cc16a9a82a425caddff038\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7870bd388dcd56469d6c3c84009a18d6edc246194106a6282e022bf1f98adab8\",\"dweb:/ipfs/QmQGrjRLWeJDFjRWgjmcbAuvxWjbnWYnjJ7rFzUSfvYeBJ\"]},\"contracts/HyksosCyberkongz.sol\":{\"keccak256\":\"0x67771ca77bd6f826beee0ea8a6068cbecbb82259782adc370fe44a831c695a9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2267ff21e3fa87413585690e0fc3212fa3a9afb26d6e441292ef7eab08b81edb\",\"dweb:/ipfs/QmQXwCm9gKs3shLHfpBCvi9z83NVWNGq7fHt2tL5m3rMsq\"]},\"contracts/IHyksos.sol\":{\"keccak256\":\"0x10d932c15a2d87125c991889ec0c1223e5f35325bb5262e7ad076a99ab406f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eecd2f8308dbc9570f9c0378d3688b3052b74bf1435e8f44b98f2bc7bec2f801\",\"dweb:/ipfs/QmTCAjsHoGUjqmuojH13XnfDkxZPNqMjpi4L2Dgdppi6rz\"]},\"openzeppelin/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"openzeppelin/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"openzeppelin/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"openzeppelin/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"
        }
      },
      "contracts/IHyksos.sol": {
        "IHyksos": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Erc20Deposit",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Erc20Withdrawal",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "NftDeposit",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "NftWithdrawal",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_addr",
                  "type": "address"
                }
              ],
              "name": "autoCompoundStrategy",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "_isAutoCompoundOn",
                  "type": "bool"
                }
              ],
              "name": "depositErc20",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_id",
                  "type": "uint256"
                }
              ],
              "name": "depositNft",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_addr",
                  "type": "address"
                }
              ],
              "name": "erc20Balance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bool",
                  "name": "_isAutoCompoundOn",
                  "type": "bool"
                }
              ],
              "name": "setAutoCompoundStrategy",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalErc20",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "withdrawErc20",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_id",
                  "type": "uint256"
                }
              ],
              "name": "withdrawNft",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "autoCompoundStrategy(address)": "23ad6db2",
              "depositErc20(uint256,bool)": "9c437e54",
              "depositNft(uint256)": "b7c3505f",
              "erc20Balance(address)": "b478fc07",
              "setAutoCompoundStrategy(bool)": "90babe8b",
              "totalErc20()": "c0316aa3",
              "withdrawErc20(uint256)": "258ab15c",
              "withdrawNft(uint256)": "910efae8"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Erc20Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Erc20Withdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"NftDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"NftWithdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"autoCompoundStrategy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isAutoCompoundOn\",\"type\":\"bool\"}],\"name\":\"depositErc20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"depositNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"erc20Balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isAutoCompoundOn\",\"type\":\"bool\"}],\"name\":\"setAutoCompoundStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalErc20\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawErc20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"withdrawNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IHyksos.sol\":\"IHyksos\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IHyksos.sol\":{\"keccak256\":\"0x10d932c15a2d87125c991889ec0c1223e5f35325bb5262e7ad076a99ab406f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eecd2f8308dbc9570f9c0378d3688b3052b74bf1435e8f44b98f2bc7bec2f801\",\"dweb:/ipfs/QmTCAjsHoGUjqmuojH13XnfDkxZPNqMjpi4L2Dgdppi6rz\"]}},\"version\":1}"
        }
      },
      "openzeppelin/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]}},\"version\":1}"
        }
      },
      "openzeppelin/token/ERC721/IERC721.sol": {
        "IERC721": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "approved",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "ApprovalForAll",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "getApproved",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "isApprovedForAll",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ownerOf",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "_approved",
                  "type": "bool"
                }
              ],
              "name": "setApprovalForAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "getApproved(uint256)": "081812fc",
              "isApprovedForAll(address,address)": "e985e9c5",
              "ownerOf(uint256)": "6352211e",
              "safeTransferFrom(address,address,uint256)": "42842e0e",
              "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
              "setApprovalForAll(address,bool)": "a22cb465",
              "supportsInterface(bytes4)": "01ffc9a7",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"openzeppelin/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"
        }
      },
      "openzeppelin/token/ERC721/IERC721Receiver.sol": {
        "IERC721Receiver": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "onERC721Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "onERC721Received(address,address,uint256,bytes)": "150b7a02"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]}},\"version\":1}"
        }
      },
      "openzeppelin/utils/introspection/IERC165.sol": {
        "IERC165": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"
        }
      }
    },
    "errors": [
      {
        "component": "general",
        "errorCode": "6321",
        "formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n  --> contracts/DepositQueue.sol:26:53:\n   |\n26 |     function popDeposit() internal nonEmpty returns(Deposit memory) {\n   |                                                     ^^^^^^^^^^^^^^\n\n",
        "message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
        "severity": "warning",
        "sourceLocation": {
          "end": 611,
          "file": "contracts/DepositQueue.sol",
          "start": 597
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "contracts/DepositQueue.sol": {
        "ast": {
          "absolutePath": "contracts/DepositQueue.sol",
          "exportedSymbols": {
            "DepositQueue": [
              134
            ]
          },
          "id": 135,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".10"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "DepositQueue",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 134,
              "linearizedBaseContracts": [
                134
              ],
              "name": "DepositQueue",
              "nameLocation": "67:12:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "DepositQueue.Deposit",
                  "id": 6,
                  "members": [
                    {
                      "constant": false,
                      "id": 3,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "119:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 6,
                      "src": "111:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "111:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 5,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "143:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 6,
                      "src": "135:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "135:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Deposit",
                  "nameLocation": "93:7:0",
                  "nodeType": "StructDefinition",
                  "scope": 134,
                  "src": "86:70:0",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 10,
                  "mutability": "mutable",
                  "name": "depositQueue",
                  "nameLocation": "172:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "162:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Deposit_$6_storage_$dyn_storage",
                    "typeString": "struct DepositQueue.Deposit[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 7,
                        "name": "Deposit",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 6,
                        "src": "162:7:0"
                      },
                      "referencedDeclaration": 6,
                      "src": "162:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Deposit_$6_storage_ptr",
                        "typeString": "struct DepositQueue.Deposit"
                      }
                    },
                    "id": 9,
                    "nodeType": "ArrayTypeName",
                    "src": "162:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Deposit_$6_storage_$dyn_storage_ptr",
                      "typeString": "struct DepositQueue.Deposit[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12,
                  "mutability": "mutable",
                  "name": "topIndex",
                  "nameLocation": "198:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "190:16:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "190:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 22,
                    "nodeType": "Block",
                    "src": "272:55:0",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 20,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 17,
                              "name": "depositQueue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "289:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Deposit_$6_storage_$dyn_storage",
                                "typeString": "struct DepositQueue.Deposit storage ref[] storage ref"
                              }
                            },
                            "id": 18,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "289:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 19,
                            "name": "topIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "312:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "289:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 16,
                        "id": 21,
                        "nodeType": "Return",
                        "src": "282:38:0"
                      }
                    ]
                  },
                  "id": 23,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isDepositQueueEmpty",
                  "nameLocation": "222:19:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 13,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "241:2:0"
                  },
                  "returnParameters": {
                    "id": 16,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 15,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 23,
                        "src": "266:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 14,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "266:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "265:6:0"
                  },
                  "scope": 134,
                  "src": "213:114:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 32,
                    "nodeType": "Block",
                    "src": "353:59:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 28,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "371:22:0",
                              "subExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 26,
                                  "name": "isDepositQueueEmpty",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23,
                                  "src": "372:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                    "typeString": "function () view returns (bool)"
                                  }
                                },
                                "id": 27,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "372:21:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 25,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "363:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 29,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "363:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30,
                        "nodeType": "ExpressionStatement",
                        "src": "363:31:0"
                      },
                      {
                        "id": 31,
                        "nodeType": "PlaceholderStatement",
                        "src": "404:1:0"
                      }
                    ]
                  },
                  "id": 33,
                  "name": "nonEmpty",
                  "nameLocation": "342:8:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 24,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "350:2:0"
                  },
                  "src": "333:79:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 49,
                    "nodeType": "Block",
                    "src": "482:61:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 44,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35,
                                  "src": "518:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 45,
                                  "name": "_sender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37,
                                  "src": "527:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 43,
                                "name": "Deposit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6,
                                "src": "510:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Deposit_$6_storage_ptr_$",
                                  "typeString": "type(struct DepositQueue.Deposit storage pointer)"
                                }
                              },
                              "id": 46,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "510:25:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Deposit_$6_memory_ptr",
                                "typeString": "struct DepositQueue.Deposit memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Deposit_$6_memory_ptr",
                                "typeString": "struct DepositQueue.Deposit memory"
                              }
                            ],
                            "expression": {
                              "id": 40,
                              "name": "depositQueue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "492:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Deposit_$6_storage_$dyn_storage",
                                "typeString": "struct DepositQueue.Deposit storage ref[] storage ref"
                              }
                            },
                            "id": 42,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "492:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Deposit_$6_storage_$dyn_storage_ptr_$_t_struct$_Deposit_$6_storage_$returns$__$bound_to$_t_array$_t_struct$_Deposit_$6_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct DepositQueue.Deposit storage ref[] storage pointer,struct DepositQueue.Deposit storage ref)"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "492:44:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48,
                        "nodeType": "ExpressionStatement",
                        "src": "492:44:0"
                      }
                    ]
                  },
                  "id": 50,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "pushDeposit",
                  "nameLocation": "427:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 38,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 35,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "447:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 50,
                        "src": "439:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 34,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "439:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 37,
                        "mutability": "mutable",
                        "name": "_sender",
                        "nameLocation": "464:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 50,
                        "src": "456:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 36,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "456:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "438:34:0"
                  },
                  "returnParameters": {
                    "id": 39,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "482:0:0"
                  },
                  "scope": 134,
                  "src": "418:125:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 66,
                    "nodeType": "Block",
                    "src": "613:66:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 61,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "623:29:0",
                          "subExpression": {
                            "baseExpression": {
                              "id": 58,
                              "name": "depositQueue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "630:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Deposit_$6_storage_$dyn_storage",
                                "typeString": "struct DepositQueue.Deposit storage ref[] storage ref"
                              }
                            },
                            "id": 60,
                            "indexExpression": {
                              "id": 59,
                              "name": "topIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "643:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "630:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Deposit_$6_storage",
                              "typeString": "struct DepositQueue.Deposit storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 62,
                        "nodeType": "ExpressionStatement",
                        "src": "623:29:0"
                      },
                      {
                        "expression": {
                          "id": 64,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "662:10:0",
                          "subExpression": {
                            "id": 63,
                            "name": "topIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "662:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 65,
                        "nodeType": "ExpressionStatement",
                        "src": "662:10:0"
                      }
                    ]
                  },
                  "id": 67,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 53,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 52,
                        "name": "nonEmpty",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 33,
                        "src": "580:8:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "580:8:0"
                    }
                  ],
                  "name": "popDeposit",
                  "nameLocation": "558:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 51,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "568:2:0"
                  },
                  "returnParameters": {
                    "id": 57,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 56,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "597:14:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Deposit_$6_memory_ptr",
                          "typeString": "struct DepositQueue.Deposit"
                        },
                        "typeName": {
                          "id": 55,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 54,
                            "name": "Deposit",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 6,
                            "src": "597:7:0"
                          },
                          "referencedDeclaration": 6,
                          "src": "597:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Deposit_$6_storage_ptr",
                            "typeString": "struct DepositQueue.Deposit"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "596:16:0"
                  },
                  "scope": 134,
                  "src": "549:130:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 79,
                    "nodeType": "Block",
                    "src": "757:46:0",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 75,
                            "name": "depositQueue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "774:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Deposit_$6_storage_$dyn_storage",
                              "typeString": "struct DepositQueue.Deposit storage ref[] storage ref"
                            }
                          },
                          "id": 77,
                          "indexExpression": {
                            "id": 76,
                            "name": "topIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "787:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "774:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Deposit_$6_storage",
                            "typeString": "struct DepositQueue.Deposit storage ref"
                          }
                        },
                        "functionReturnParameters": 74,
                        "id": 78,
                        "nodeType": "Return",
                        "src": "767:29:0"
                      }
                    ]
                  },
                  "id": 80,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 70,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 69,
                        "name": "nonEmpty",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 33,
                        "src": "719:8:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "719:8:0"
                    }
                  ],
                  "name": "getTopDeposit",
                  "nameLocation": "694:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 68,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "707:2:0"
                  },
                  "returnParameters": {
                    "id": 74,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 73,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 80,
                        "src": "741:14:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Deposit_$6_memory_ptr",
                          "typeString": "struct DepositQueue.Deposit"
                        },
                        "typeName": {
                          "id": 72,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 71,
                            "name": "Deposit",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 6,
                            "src": "741:7:0"
                          },
                          "referencedDeclaration": 6,
                          "src": "741:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Deposit_$6_storage_ptr",
                            "typeString": "struct DepositQueue.Deposit"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "740:16:0"
                  },
                  "scope": 134,
                  "src": "685:118:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 94,
                    "nodeType": "Block",
                    "src": "873:56:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 92,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 87,
                                "name": "depositQueue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10,
                                "src": "883:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Deposit_$6_storage_$dyn_storage",
                                  "typeString": "struct DepositQueue.Deposit storage ref[] storage ref"
                                }
                              },
                              "id": 89,
                              "indexExpression": {
                                "id": 88,
                                "name": "topIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12,
                                "src": "896:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "883:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Deposit_$6_storage",
                                "typeString": "struct DepositQueue.Deposit storage ref"
                              }
                            },
                            "id": 90,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3,
                            "src": "883:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 91,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82,
                            "src": "915:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "883:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 93,
                        "nodeType": "ExpressionStatement",
                        "src": "883:39:0"
                      }
                    ]
                  },
                  "id": 95,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 85,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 84,
                        "name": "nonEmpty",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 33,
                        "src": "864:8:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "864:8:0"
                    }
                  ],
                  "name": "setTopDepositAmount",
                  "nameLocation": "818:19:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 83,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 82,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "846:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 95,
                        "src": "838:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 81,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "838:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "837:17:0"
                  },
                  "returnParameters": {
                    "id": 86,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "873:0:0"
                  },
                  "scope": 134,
                  "src": "809:120:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 105,
                    "nodeType": "Block",
                    "src": "989:54:0",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 100,
                              "name": "depositQueue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "1006:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Deposit_$6_storage_$dyn_storage",
                                "typeString": "struct DepositQueue.Deposit storage ref[] storage ref"
                              }
                            },
                            "id": 101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1006:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 102,
                            "name": "topIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "1028:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1006:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 99,
                        "id": 104,
                        "nodeType": "Return",
                        "src": "999:37:0"
                      }
                    ]
                  },
                  "functionSelector": "bbd4e8c9",
                  "id": 106,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "numDeposits",
                  "nameLocation": "944:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 96,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "955:2:0"
                  },
                  "returnParameters": {
                    "id": 99,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 98,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 106,
                        "src": "980:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 97,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "980:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "979:9:0"
                  },
                  "scope": 134,
                  "src": "935:108:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 132,
                    "nodeType": "Block",
                    "src": "1132:136:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 122,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 119,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 117,
                                  "name": "topIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12,
                                  "src": "1150:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 118,
                                  "name": "_index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 108,
                                  "src": "1161:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1150:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 120,
                                  "name": "depositQueue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10,
                                  "src": "1170:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Deposit_$6_storage_$dyn_storage",
                                    "typeString": "struct DepositQueue.Deposit storage ref[] storage ref"
                                  }
                                },
                                "id": 121,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "1170:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1150:39:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e646578206f7574206f6620626f756e6473",
                              "id": 123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1191:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367",
                                "typeString": "literal_string \"Index out of bounds\""
                              },
                              "value": "Index out of bounds"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367",
                                "typeString": "literal_string \"Index out of bounds\""
                              }
                            ],
                            "id": 116,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1142:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1142:71:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 125,
                        "nodeType": "ExpressionStatement",
                        "src": "1142:71:0"
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 126,
                            "name": "depositQueue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "1230:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Deposit_$6_storage_$dyn_storage",
                              "typeString": "struct DepositQueue.Deposit storage ref[] storage ref"
                            }
                          },
                          "id": 130,
                          "indexExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 127,
                              "name": "topIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "1243:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 128,
                              "name": "_index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 108,
                              "src": "1254:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1243:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1230:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Deposit_$6_storage",
                            "typeString": "struct DepositQueue.Deposit storage ref"
                          }
                        },
                        "functionReturnParameters": 115,
                        "id": 131,
                        "nodeType": "Return",
                        "src": "1223:38:0"
                      }
                    ]
                  },
                  "functionSelector": "9f9fb968",
                  "id": 133,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 111,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 110,
                        "name": "nonEmpty",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 33,
                        "src": "1099:8:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1099:8:0"
                    }
                  ],
                  "name": "getDeposit",
                  "nameLocation": "1058:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 109,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 108,
                        "mutability": "mutable",
                        "name": "_index",
                        "nameLocation": "1077:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 133,
                        "src": "1069:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 107,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1069:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1068:16:0"
                  },
                  "returnParameters": {
                    "id": 115,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 114,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 133,
                        "src": "1116:14:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Deposit_$6_memory_ptr",
                          "typeString": "struct DepositQueue.Deposit"
                        },
                        "typeName": {
                          "id": 113,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 112,
                            "name": "Deposit",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 6,
                            "src": "1116:7:0"
                          },
                          "referencedDeclaration": 6,
                          "src": "1116:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Deposit_$6_storage_ptr",
                            "typeString": "struct DepositQueue.Deposit"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1115:16:0"
                  },
                  "scope": 134,
                  "src": "1049:219:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 135,
              "src": "58:1212:0",
              "usedErrors": []
            }
          ],
          "src": "32:1238:0"
        },
        "id": 0
      },
      "contracts/HyksosCyberkongz.sol": {
        "ast": {
          "absolutePath": "contracts/HyksosCyberkongz.sol",
          "exportedSymbols": {
            "DepositQueue": [
              134
            ],
            "HyksosCyberkongz": [
              934
            ],
            "IERC165": [
              1231
            ],
            "IERC20": [
              1085
            ],
            "IERC721": [
              1201
            ],
            "IERC721Receiver": [
              1219
            ],
            "IHyksos": [
              1007
            ],
            "IKongz": [
              154
            ]
          },
          "id": 935,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 136,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".10"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:1"
            },
            {
              "absolutePath": "openzeppelin/token/ERC721/IERC721.sol",
              "file": "../openzeppelin/token/ERC721/IERC721.sol",
              "id": 137,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 935,
              "sourceUnit": 1202,
              "src": "57:50:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "openzeppelin/token/ERC721/IERC721Receiver.sol",
              "file": "../openzeppelin/token/ERC721/IERC721Receiver.sol",
              "id": 138,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 935,
              "sourceUnit": 1220,
              "src": "108:58:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "openzeppelin/token/ERC20/IERC20.sol",
              "file": "../openzeppelin/token/ERC20/IERC20.sol",
              "id": 139,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 935,
              "sourceUnit": 1086,
              "src": "167:48:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/DepositQueue.sol",
              "file": "./DepositQueue.sol",
              "id": 140,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 935,
              "sourceUnit": 135,
              "src": "217:28:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/IHyksos.sol",
              "file": "./IHyksos.sol",
              "id": 141,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 935,
              "sourceUnit": 1008,
              "src": "246:23:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 142,
                    "name": "IERC721",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1201,
                    "src": "291:7:1"
                  },
                  "id": 143,
                  "nodeType": "InheritanceSpecifier",
                  "src": "291:7:1"
                }
              ],
              "canonicalName": "IKongz",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 154,
              "linearizedBaseContracts": [
                154,
                1201,
                1231
              ],
              "name": "IKongz",
              "nameLocation": "281:6:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "38712d8d",
                  "id": 150,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOG",
                  "nameLocation": "314:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 146,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 145,
                        "mutability": "mutable",
                        "name": "_user",
                        "nameLocation": "332:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 150,
                        "src": "324:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 144,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "324:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "323:15:1"
                  },
                  "returnParameters": {
                    "id": 149,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 148,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 150,
                        "src": "361:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 147,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "361:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "360:9:1"
                  },
                  "scope": 154,
                  "src": "305:65:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "3d18b912",
                  "id": 153,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getReward",
                  "nameLocation": "384:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 151,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "393:2:1"
                  },
                  "returnParameters": {
                    "id": 152,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "404:0:1"
                  },
                  "scope": 154,
                  "src": "375:30:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 935,
              "src": "271:136:1",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 155,
                    "name": "IHyksos",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1007,
                    "src": "438:7:1"
                  },
                  "id": 156,
                  "nodeType": "InheritanceSpecifier",
                  "src": "438:7:1"
                },
                {
                  "baseName": {
                    "id": 157,
                    "name": "DepositQueue",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 134,
                    "src": "447:12:1"
                  },
                  "id": 158,
                  "nodeType": "InheritanceSpecifier",
                  "src": "447:12:1"
                }
              ],
              "canonicalName": "HyksosCyberkongz",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 934,
              "linearizedBaseContracts": [
                934,
                134,
                1007
              ],
              "name": "HyksosCyberkongz",
              "nameLocation": "418:16:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 161,
                  "mutability": "mutable",
                  "name": "kongz",
                  "nameLocation": "478:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 934,
                  "src": "471:12:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IKongz_$154",
                    "typeString": "contract IKongz"
                  },
                  "typeName": {
                    "id": 160,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 159,
                      "name": "IKongz",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 154,
                      "src": "471:6:1"
                    },
                    "referencedDeclaration": 154,
                    "src": "471:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IKongz_$154",
                      "typeString": "contract IKongz"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 164,
                  "mutability": "mutable",
                  "name": "bananas",
                  "nameLocation": "496:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 934,
                  "src": "489:14:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1085",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 163,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 162,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1085,
                      "src": "489:6:1"
                    },
                    "referencedDeclaration": 1085,
                    "src": "489:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1085",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "canonicalName": "HyksosCyberkongz.DepositedNft",
                  "id": 173,
                  "members": [
                    {
                      "constant": false,
                      "id": 166,
                      "mutability": "mutable",
                      "name": "timeDeposited",
                      "nameLocation": "548:13:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 173,
                      "src": "540:21:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 165,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "540:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 168,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "579:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 173,
                      "src": "571:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 167,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "571:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 172,
                      "mutability": "mutable",
                      "name": "shareholders",
                      "nameLocation": "604:12:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 173,
                      "src": "594:22:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Deposit_$6_storage_$dyn_storage_ptr",
                        "typeString": "struct DepositQueue.Deposit[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 170,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 169,
                            "name": "Deposit",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 6,
                            "src": "594:7:1"
                          },
                          "referencedDeclaration": 6,
                          "src": "594:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Deposit_$6_storage_ptr",
                            "typeString": "struct DepositQueue.Deposit"
                          }
                        },
                        "id": 171,
                        "nodeType": "ArrayTypeName",
                        "src": "594:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Deposit_$6_storage_$dyn_storage_ptr",
                          "typeString": "struct DepositQueue.Deposit[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "DepositedNft",
                  "nameLocation": "517:12:1",
                  "nodeType": "StructDefinition",
                  "scope": 934,
                  "src": "510:113:1",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 177,
                  "mutability": "mutable",
                  "name": "bananaBalance",
                  "nameLocation": "657:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 934,
                  "src": "629:41:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 176,
                    "keyType": {
                      "id": 174,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "637:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "629:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 175,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "648:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 182,
                  "mutability": "mutable",
                  "name": "depositedKongs",
                  "nameLocation": "709:14:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 934,
                  "src": "676:47:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DepositedNft_$173_storage_$",
                    "typeString": "mapping(uint256 => struct HyksosCyberkongz.DepositedNft)"
                  },
                  "typeName": {
                    "id": 181,
                    "keyType": {
                      "id": 178,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "684:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "676:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DepositedNft_$173_storage_$",
                      "typeString": "mapping(uint256 => struct HyksosCyberkongz.DepositedNft)"
                    },
                    "valueType": {
                      "id": 180,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 179,
                        "name": "DepositedNft",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 173,
                        "src": "695:12:1"
                      },
                      "referencedDeclaration": 173,
                      "src": "695:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DepositedNft_$173_storage_ptr",
                        "typeString": "struct HyksosCyberkongz.DepositedNft"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 186,
                  "mutability": "mutable",
                  "name": "isAutoCompoundOff",
                  "nameLocation": "754:17:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 934,
                  "src": "729:42:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 185,
                    "keyType": {
                      "id": 183,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "737:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "729:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 184,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "748:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 188,
                  "mutability": "mutable",
                  "name": "totalBananasBalance",
                  "nameLocation": "904:19:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 934,
                  "src": "896:27:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 187,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "896:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 191,
                  "mutability": "constant",
                  "name": "DEPOSIT_LENGTH_DAYS",
                  "nameLocation": "947:19:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 934,
                  "src": "930:41:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 189,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "930:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3130",
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "969:2:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10_by_1",
                      "typeString": "int_const 10"
                    },
                    "value": "10"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 196,
                  "mutability": "constant",
                  "name": "DEPOSIT_LENGTH_SECONDS",
                  "nameLocation": "1001:22:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 934,
                  "src": "984:69:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "984:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 193,
                      "name": "DEPOSIT_LENGTH_DAYS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 191,
                      "src": "1026:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "3836343030",
                      "id": 194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1048:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_86400_by_1",
                        "typeString": "int_const 86400"
                      },
                      "value": "86400"
                    },
                    "src": "1026:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 199,
                  "mutability": "constant",
                  "name": "BASE_RATE",
                  "nameLocation": "1076:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 934,
                  "src": "1059:37:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 197,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1059:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3130",
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1088:8:1",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000000000000000000_by_1",
                      "typeString": "int_const 10000000000000000000"
                    },
                    "value": "10"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 204,
                  "mutability": "constant",
                  "name": "MIN_DEPOSIT",
                  "nameLocation": "1119:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 934,
                  "src": "1102:44:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 200,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1102:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "31",
                      "id": 201,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1133:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 202,
                      "name": "BASE_RATE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 199,
                      "src": "1137:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1133:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 207,
                  "mutability": "constant",
                  "name": "ROI_PCTG",
                  "nameLocation": "1176:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 934,
                  "src": "1159:30:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1159:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3830",
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1187:2:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_80_by_1",
                      "typeString": "int_const 80"
                    },
                    "value": "80"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 212,
                  "mutability": "constant",
                  "name": "KONG_WORK_VALUE",
                  "nameLocation": "1219:15:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 934,
                  "src": "1202:66:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 208,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1202:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 209,
                      "name": "BASE_RATE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 199,
                      "src": "1237:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 210,
                      "name": "DEPOSIT_LENGTH_DAYS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 191,
                      "src": "1249:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1237:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 219,
                  "mutability": "constant",
                  "name": "LOAN_AMOUNT",
                  "nameLocation": "1291:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 934,
                  "src": "1274:63:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1274:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 214,
                        "name": "KONG_WORK_VALUE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 212,
                        "src": "1305:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 215,
                        "name": "ROI_PCTG",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 207,
                        "src": "1323:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1305:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1334:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "1305:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 238,
                    "nodeType": "Block",
                    "src": "1391:75:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 226,
                            "name": "kongz",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 161,
                            "src": "1401:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IKongz_$154",
                              "typeString": "contract IKongz"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 228,
                                "name": "_kongz",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 223,
                                "src": "1416:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 227,
                              "name": "IKongz",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 154,
                              "src": "1409:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IKongz_$154_$",
                                "typeString": "type(contract IKongz)"
                              }
                            },
                            "id": 229,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1409:14:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IKongz_$154",
                              "typeString": "contract IKongz"
                            }
                          },
                          "src": "1401:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IKongz_$154",
                            "typeString": "contract IKongz"
                          }
                        },
                        "id": 231,
                        "nodeType": "ExpressionStatement",
                        "src": "1401:22:1"
                      },
                      {
                        "expression": {
                          "id": 236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 232,
                            "name": "bananas",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 164,
                            "src": "1433:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1085",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 234,
                                "name": "_bananas",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 221,
                                "src": "1450:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 233,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1085,
                              "src": "1443:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$1085_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1443:16:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1085",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "1433:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1085",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 237,
                        "nodeType": "ExpressionStatement",
                        "src": "1433:26:1"
                      }
                    ]
                  },
                  "id": 239,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 224,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 221,
                        "mutability": "mutable",
                        "name": "_bananas",
                        "nameLocation": "1365:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 239,
                        "src": "1357:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 220,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1357:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 223,
                        "mutability": "mutable",
                        "name": "_kongz",
                        "nameLocation": "1383:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 239,
                        "src": "1375:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 222,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1375:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1356:34:1"
                  },
                  "returnParameters": {
                    "id": 225,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1391:0:1"
                  },
                  "scope": 934,
                  "src": "1345:121:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    943
                  ],
                  "body": {
                    "id": 286,
                    "nodeType": "Block",
                    "src": "1553:302:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 247,
                              "name": "bananaBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 177,
                              "src": "1563:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 250,
                            "indexExpression": {
                              "expression": {
                                "id": 248,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1577:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 249,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1577:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1563:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 251,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 241,
                            "src": "1592:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1563:36:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 253,
                        "nodeType": "ExpressionStatement",
                        "src": "1563:36:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 255,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 241,
                              "src": "1621:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 256,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1630:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1630:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 254,
                            "name": "pushDeposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50,
                            "src": "1609:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address)"
                            }
                          },
                          "id": 258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1609:32:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 259,
                        "nodeType": "ExpressionStatement",
                        "src": "1609:32:1"
                      },
                      {
                        "expression": {
                          "id": 262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 260,
                            "name": "totalBananasBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 188,
                            "src": "1651:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 261,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 241,
                            "src": "1674:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1651:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 263,
                        "nodeType": "ExpressionStatement",
                        "src": "1651:30:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 265,
                              "name": "_isAutoCompoundOn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 243,
                              "src": "1716:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 264,
                            "name": "_setAutoCompoundStrategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 491,
                            "src": "1691:24:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1691:43:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 267,
                        "nodeType": "ExpressionStatement",
                        "src": "1691:43:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 271,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1765:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1765:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 275,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1785:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_HyksosCyberkongz_$934",
                                    "typeString": "contract HyksosCyberkongz"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_HyksosCyberkongz_$934",
                                    "typeString": "contract HyksosCyberkongz"
                                  }
                                ],
                                "id": 274,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1777:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 273,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1777:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 276,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1777:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 277,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 241,
                              "src": "1792:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 268,
                              "name": "bananas",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 164,
                              "src": "1744:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1085",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1066,
                            "src": "1744:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1744:56:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 279,
                        "nodeType": "ExpressionStatement",
                        "src": "1744:56:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 281,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1828:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 282,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1828:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 283,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 241,
                              "src": "1840:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 280,
                            "name": "Erc20Deposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 988,
                            "src": "1815:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1815:33:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 285,
                        "nodeType": "EmitStatement",
                        "src": "1810:38:1"
                      }
                    ]
                  },
                  "functionSelector": "9c437e54",
                  "id": 287,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "depositErc20",
                  "nameLocation": "1481:12:1",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 245,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1544:8:1"
                  },
                  "parameters": {
                    "id": 244,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 241,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "1502:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 287,
                        "src": "1494:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 240,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1494:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 243,
                        "mutability": "mutable",
                        "name": "_isAutoCompoundOn",
                        "nameLocation": "1516:17:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 287,
                        "src": "1511:22:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 242,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1511:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1493:41:1"
                  },
                  "returnParameters": {
                    "id": 246,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1553:0:1"
                  },
                  "scope": 934,
                  "src": "1472:383:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    948
                  ],
                  "body": {
                    "id": 328,
                    "nodeType": "Block",
                    "src": "1919:276:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 299,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 294,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 289,
                                "src": "1937:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "baseExpression": {
                                  "id": 295,
                                  "name": "bananaBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 177,
                                  "src": "1948:13:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 298,
                                "indexExpression": {
                                  "expression": {
                                    "id": 296,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1962:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 297,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1962:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1948:25:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1937:36:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5769746864726177616c20616d6f756e7420746f6f206269672e",
                              "id": 300,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1975:28:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_30387342b56d92eda96cb5c10202def43dc7520ce3ea737fcf37de34a736b32a",
                                "typeString": "literal_string \"Withdrawal amount too big.\""
                              },
                              "value": "Withdrawal amount too big."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_30387342b56d92eda96cb5c10202def43dc7520ce3ea737fcf37de34a736b32a",
                                "typeString": "literal_string \"Withdrawal amount too big.\""
                              }
                            ],
                            "id": 293,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1929:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1929:75:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 302,
                        "nodeType": "ExpressionStatement",
                        "src": "1929:75:1"
                      },
                      {
                        "expression": {
                          "id": 305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 303,
                            "name": "totalBananasBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 188,
                            "src": "2014:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 304,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 289,
                            "src": "2037:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2014:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 306,
                        "nodeType": "ExpressionStatement",
                        "src": "2014:30:1"
                      },
                      {
                        "expression": {
                          "id": 312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 307,
                              "name": "bananaBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 177,
                              "src": "2054:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 310,
                            "indexExpression": {
                              "expression": {
                                "id": 308,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2068:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 309,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2068:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2054:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 311,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 289,
                            "src": "2083:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2054:36:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 313,
                        "nodeType": "ExpressionStatement",
                        "src": "2054:36:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 317,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2117:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2117:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 319,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 289,
                              "src": "2129:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 314,
                              "name": "bananas",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 164,
                              "src": "2100:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1085",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1034,
                            "src": "2100:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2100:37:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 321,
                        "nodeType": "ExpressionStatement",
                        "src": "2100:37:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 323,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2168:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2168:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 325,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 289,
                              "src": "2180:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 322,
                            "name": "Erc20Withdrawal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 994,
                            "src": "2152:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2152:36:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 327,
                        "nodeType": "EmitStatement",
                        "src": "2147:41:1"
                      }
                    ]
                  },
                  "functionSelector": "258ab15c",
                  "id": 329,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawErc20",
                  "nameLocation": "1870:13:1",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 291,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1910:8:1"
                  },
                  "parameters": {
                    "id": 290,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 289,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "1892:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 329,
                        "src": "1884:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 288,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1884:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1883:17:1"
                  },
                  "returnParameters": {
                    "id": 292,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1919:0:1"
                  },
                  "scope": 934,
                  "src": "1861:334:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    953
                  ],
                  "body": {
                    "id": 388,
                    "nodeType": "Block",
                    "src": "2252:365:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 337,
                                  "name": "_id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 331,
                                  "src": "2282:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 336,
                                "name": "isValidKong",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 870,
                                "src": "2270:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (uint256) pure returns (bool)"
                                }
                              },
                              "id": 338,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2270:16:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e2774206465706f7369742074686973204b6f6e672e",
                              "id": 339,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2288:26:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_84ba28e46fa3d00d5192937a7ff6403b1faed2dc797082cfb43e6f0a3510446b",
                                "typeString": "literal_string \"Can't deposit this Kong.\""
                              },
                              "value": "Can't deposit this Kong."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_84ba28e46fa3d00d5192937a7ff6403b1faed2dc797082cfb43e6f0a3510446b",
                                "typeString": "literal_string \"Can't deposit this Kong.\""
                              }
                            ],
                            "id": 335,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2262:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2262:53:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 341,
                        "nodeType": "ExpressionStatement",
                        "src": "2262:53:1"
                      },
                      {
                        "expression": {
                          "id": 348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 342,
                                "name": "depositedKongs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 182,
                                "src": "2325:14:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DepositedNft_$173_storage_$",
                                  "typeString": "mapping(uint256 => struct HyksosCyberkongz.DepositedNft storage ref)"
                                }
                              },
                              "id": 344,
                              "indexExpression": {
                                "id": 343,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 331,
                                "src": "2340:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2325:19:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DepositedNft_$173_storage",
                                "typeString": "struct HyksosCyberkongz.DepositedNft storage ref"
                              }
                            },
                            "id": 345,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "timeDeposited",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 166,
                            "src": "2325:33:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 346,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "2361:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 347,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "2361:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2325:51:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 349,
                        "nodeType": "ExpressionStatement",
                        "src": "2325:51:1"
                      },
                      {
                        "expression": {
                          "id": 356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 350,
                                "name": "depositedKongs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 182,
                                "src": "2386:14:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DepositedNft_$173_storage_$",
                                  "typeString": "mapping(uint256 => struct HyksosCyberkongz.DepositedNft storage ref)"
                                }
                              },
                              "id": 352,
                              "indexExpression": {
                                "id": 351,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 331,
                                "src": "2401:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2386:19:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DepositedNft_$173_storage",
                                "typeString": "struct HyksosCyberkongz.DepositedNft storage ref"
                              }
                            },
                            "id": 353,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 168,
                            "src": "2386:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 354,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2414:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2414:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2386:38:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 357,
                        "nodeType": "ExpressionStatement",
                        "src": "2386:38:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 359,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 331,
                              "src": "2453:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 358,
                            "name": "selectShareholders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 822,
                            "src": "2434:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2434:23:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 361,
                        "nodeType": "ExpressionStatement",
                        "src": "2434:23:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 365,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2486:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 366,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2486:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 369,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2506:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_HyksosCyberkongz_$934",
                                    "typeString": "contract HyksosCyberkongz"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_HyksosCyberkongz_$934",
                                    "typeString": "contract HyksosCyberkongz"
                                  }
                                ],
                                "id": 368,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2498:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 367,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2498:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 370,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2498:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 371,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 331,
                              "src": "2513:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 362,
                              "name": "kongz",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 161,
                              "src": "2467:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IKongz_$154",
                                "typeString": "contract IKongz"
                              }
                            },
                            "id": 364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1154,
                            "src": "2467:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2467:50:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 373,
                        "nodeType": "ExpressionStatement",
                        "src": "2467:50:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 377,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2544:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 378,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2544:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 379,
                              "name": "LOAN_AMOUNT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 219,
                              "src": "2556:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 374,
                              "name": "bananas",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 164,
                              "src": "2527:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1085",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 376,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1034,
                            "src": "2527:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2527:41:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 381,
                        "nodeType": "ExpressionStatement",
                        "src": "2527:41:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 383,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2594:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 384,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2594:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 385,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 331,
                              "src": "2606:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 382,
                            "name": "NftDeposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1000,
                            "src": "2583:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2583:27:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 387,
                        "nodeType": "EmitStatement",
                        "src": "2578:32:1"
                      }
                    ]
                  },
                  "functionSelector": "b7c3505f",
                  "id": 389,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "depositNft",
                  "nameLocation": "2210:10:1",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 333,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2243:8:1"
                  },
                  "parameters": {
                    "id": 332,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 331,
                        "mutability": "mutable",
                        "name": "_id",
                        "nameLocation": "2229:3:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 389,
                        "src": "2221:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 330,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2221:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2220:13:1"
                  },
                  "returnParameters": {
                    "id": 334,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2252:0:1"
                  },
                  "scope": 934,
                  "src": "2201:416:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    958
                  ],
                  "body": {
                    "id": 457,
                    "nodeType": "Block",
                    "src": "2675:456:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 401,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 396,
                                      "name": "depositedKongs",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 182,
                                      "src": "2693:14:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DepositedNft_$173_storage_$",
                                        "typeString": "mapping(uint256 => struct HyksosCyberkongz.DepositedNft storage ref)"
                                      }
                                    },
                                    "id": 398,
                                    "indexExpression": {
                                      "id": 397,
                                      "name": "_id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 391,
                                      "src": "2708:3:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2693:19:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_DepositedNft_$173_storage",
                                      "typeString": "struct HyksosCyberkongz.DepositedNft storage ref"
                                    }
                                  },
                                  "id": 399,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timeDeposited",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 166,
                                  "src": "2693:33:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 400,
                                  "name": "DEPOSIT_LENGTH_SECONDS",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 196,
                                  "src": "2729:22:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2693:58:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 402,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "2754:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 403,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "2754:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2693:76:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546f6f206561726c7920746f2077697468647261772e",
                              "id": 405,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2771:24:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e86609f90be7ce8b182441c3917482d5c99b68354bce0a0117eed9c3614fba05",
                                "typeString": "literal_string \"Too early to withdraw.\""
                              },
                              "value": "Too early to withdraw."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e86609f90be7ce8b182441c3917482d5c99b68354bce0a0117eed9c3614fba05",
                                "typeString": "literal_string \"Too early to withdraw.\""
                              }
                            ],
                            "id": 395,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2685:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2685:111:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 407,
                        "nodeType": "ExpressionStatement",
                        "src": "2685:111:1"
                      },
                      {
                        "assignments": [
                          409
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 409,
                            "mutability": "mutable",
                            "name": "reward",
                            "nameLocation": "2814:6:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 457,
                            "src": "2806:14:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 408,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2806:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 419,
                        "initialValue": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 417,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 411,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "2834:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 412,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "2834:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 413,
                                    "name": "depositedKongs",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 182,
                                    "src": "2852:14:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DepositedNft_$173_storage_$",
                                      "typeString": "mapping(uint256 => struct HyksosCyberkongz.DepositedNft storage ref)"
                                    }
                                  },
                                  "id": 415,
                                  "indexExpression": {
                                    "id": 414,
                                    "name": "_id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 391,
                                    "src": "2867:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2852:19:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_DepositedNft_$173_storage",
                                    "typeString": "struct HyksosCyberkongz.DepositedNft storage ref"
                                  }
                                },
                                "id": 416,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timeDeposited",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 166,
                                "src": "2852:33:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2834:51:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 410,
                            "name": "calcReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 884,
                            "src": "2823:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) pure returns (uint256)"
                            }
                          },
                          "id": 418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2823:63:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2806:80:1"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 420,
                              "name": "kongz",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 161,
                              "src": "2896:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IKongz_$154",
                                "typeString": "contract IKongz"
                              }
                            },
                            "id": 422,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getReward",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 153,
                            "src": "2896:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2896:17:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 424,
                        "nodeType": "ExpressionStatement",
                        "src": "2896:17:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 426,
                              "name": "reward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 409,
                              "src": "2941:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 427,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 391,
                              "src": "2949:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 425,
                            "name": "distributeRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 554,
                            "src": "2923:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2923:30:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 429,
                        "nodeType": "ExpressionStatement",
                        "src": "2923:30:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 435,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2990:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_HyksosCyberkongz_$934",
                                    "typeString": "contract HyksosCyberkongz"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_HyksosCyberkongz_$934",
                                    "typeString": "contract HyksosCyberkongz"
                                  }
                                ],
                                "id": 434,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2982:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 433,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2982:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 436,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2982:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 437,
                                  "name": "depositedKongs",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 182,
                                  "src": "2997:14:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DepositedNft_$173_storage_$",
                                    "typeString": "mapping(uint256 => struct HyksosCyberkongz.DepositedNft storage ref)"
                                  }
                                },
                                "id": 439,
                                "indexExpression": {
                                  "id": 438,
                                  "name": "_id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 391,
                                  "src": "3012:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2997:19:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DepositedNft_$173_storage",
                                  "typeString": "struct HyksosCyberkongz.DepositedNft storage ref"
                                }
                              },
                              "id": 440,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "owner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 168,
                              "src": "2997:25:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 441,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 391,
                              "src": "3024:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 430,
                              "name": "kongz",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 161,
                              "src": "2963:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IKongz_$154",
                                "typeString": "contract IKongz"
                              }
                            },
                            "id": 432,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1154,
                            "src": "2963:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2963:65:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 443,
                        "nodeType": "ExpressionStatement",
                        "src": "2963:65:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 445,
                                  "name": "depositedKongs",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 182,
                                  "src": "3057:14:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DepositedNft_$173_storage_$",
                                    "typeString": "mapping(uint256 => struct HyksosCyberkongz.DepositedNft storage ref)"
                                  }
                                },
                                "id": 447,
                                "indexExpression": {
                                  "id": 446,
                                  "name": "_id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 391,
                                  "src": "3072:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3057:19:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DepositedNft_$173_storage",
                                  "typeString": "struct HyksosCyberkongz.DepositedNft storage ref"
                                }
                              },
                              "id": 448,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "owner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 168,
                              "src": "3057:25:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 449,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 391,
                              "src": "3084:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 444,
                            "name": "NftWithdrawal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1006,
                            "src": "3043:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3043:45:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 451,
                        "nodeType": "EmitStatement",
                        "src": "3038:50:1"
                      },
                      {
                        "expression": {
                          "id": 455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "3098:26:1",
                          "subExpression": {
                            "baseExpression": {
                              "id": 452,
                              "name": "depositedKongs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 182,
                              "src": "3105:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DepositedNft_$173_storage_$",
                                "typeString": "mapping(uint256 => struct HyksosCyberkongz.DepositedNft storage ref)"
                              }
                            },
                            "id": 454,
                            "indexExpression": {
                              "id": 453,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 391,
                              "src": "3120:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3105:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DepositedNft_$173_storage",
                              "typeString": "struct HyksosCyberkongz.DepositedNft storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 456,
                        "nodeType": "ExpressionStatement",
                        "src": "3098:26:1"
                      }
                    ]
                  },
                  "functionSelector": "910efae8",
                  "id": 458,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawNft",
                  "nameLocation": "2632:11:1",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 393,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2666:8:1"
                  },
                  "parameters": {
                    "id": 392,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 391,
                        "mutability": "mutable",
                        "name": "_id",
                        "nameLocation": "2652:3:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 458,
                        "src": "2644:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 390,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2644:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2643:13:1"
                  },
                  "returnParameters": {
                    "id": 394,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2675:0:1"
                  },
                  "scope": 934,
                  "src": "2623:508:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    963
                  ],
                  "body": {
                    "id": 468,
                    "nodeType": "Block",
                    "src": "3212:60:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 465,
                              "name": "_isAutoCompoundOn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 460,
                              "src": "3247:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 464,
                            "name": "_setAutoCompoundStrategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 491,
                            "src": "3222:24:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3222:43:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 467,
                        "nodeType": "ExpressionStatement",
                        "src": "3222:43:1"
                      }
                    ]
                  },
                  "functionSelector": "90babe8b",
                  "id": 469,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setAutoCompoundStrategy",
                  "nameLocation": "3146:23:1",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 462,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3203:8:1"
                  },
                  "parameters": {
                    "id": 461,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 460,
                        "mutability": "mutable",
                        "name": "_isAutoCompoundOn",
                        "nameLocation": "3175:17:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 469,
                        "src": "3170:22:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 459,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3170:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3169:24:1"
                  },
                  "returnParameters": {
                    "id": 463,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3212:0:1"
                  },
                  "scope": 934,
                  "src": "3137:135:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 490,
                    "nodeType": "Block",
                    "src": "3345:147:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 474,
                              "name": "isAutoCompoundOff",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 186,
                              "src": "3359:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 477,
                            "indexExpression": {
                              "expression": {
                                "id": 475,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3377:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 476,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3377:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3359:29:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 478,
                            "name": "_isAutoCompoundOn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 471,
                            "src": "3392:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3359:50:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 489,
                        "nodeType": "IfStatement",
                        "src": "3355:131:1",
                        "trueBody": {
                          "id": 488,
                          "nodeType": "Block",
                          "src": "3411:75:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 486,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 480,
                                    "name": "isAutoCompoundOff",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 186,
                                    "src": "3425:17:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 483,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 481,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3443:3:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 482,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3443:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3425:29:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 485,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "!",
                                  "prefix": true,
                                  "src": "3457:18:1",
                                  "subExpression": {
                                    "id": 484,
                                    "name": "_isAutoCompoundOn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 471,
                                    "src": "3458:17:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "3425:50:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 487,
                              "nodeType": "ExpressionStatement",
                              "src": "3425:50:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 491,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_setAutoCompoundStrategy",
                  "nameLocation": "3287:24:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 472,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 471,
                        "mutability": "mutable",
                        "name": "_isAutoCompoundOn",
                        "nameLocation": "3317:17:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 491,
                        "src": "3312:22:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 470,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3312:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3311:24:1"
                  },
                  "returnParameters": {
                    "id": 473,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3345:0:1"
                  },
                  "scope": 934,
                  "src": "3278:214:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 553,
                    "nodeType": "Block",
                    "src": "3564:707:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 498,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3634:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 499,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3634:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 500,
                                "name": "depositedKongs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 182,
                                "src": "3648:14:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DepositedNft_$173_storage_$",
                                  "typeString": "mapping(uint256 => struct HyksosCyberkongz.DepositedNft storage ref)"
                                }
                              },
                              "id": 502,
                              "indexExpression": {
                                "id": 501,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 495,
                                "src": "3663:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3648:19:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DepositedNft_$173_storage",
                                "typeString": "struct HyksosCyberkongz.DepositedNft storage ref"
                              }
                            },
                            "id": 503,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 168,
                            "src": "3648:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3634:39:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 551,
                          "nodeType": "Block",
                          "src": "3752:513:1",
                          "statements": [
                            {
                              "body": {
                                "id": 544,
                                "nodeType": "Block",
                                "src": "3895:208:1",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      "id": 534,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 525,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "3917:3:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 526,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "3917:10:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "expression": {
                                              "baseExpression": {
                                                "id": 527,
                                                "name": "depositedKongs",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 182,
                                                "src": "3931:14:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DepositedNft_$173_storage_$",
                                                  "typeString": "mapping(uint256 => struct HyksosCyberkongz.DepositedNft storage ref)"
                                                }
                                              },
                                              "id": 529,
                                              "indexExpression": {
                                                "id": 528,
                                                "name": "_id",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 495,
                                                "src": "3946:3:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "3931:19:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_DepositedNft_$173_storage",
                                                "typeString": "struct HyksosCyberkongz.DepositedNft storage ref"
                                              }
                                            },
                                            "id": 530,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "shareholders",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 172,
                                            "src": "3931:32:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_Deposit_$6_storage_$dyn_storage",
                                              "typeString": "struct DepositQueue.Deposit storage ref[] storage ref"
                                            }
                                          },
                                          "id": 532,
                                          "indexExpression": {
                                            "id": 531,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 512,
                                            "src": "3964:1:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "3931:35:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Deposit_$6_storage",
                                            "typeString": "struct DepositQueue.Deposit storage ref"
                                          }
                                        },
                                        "id": 533,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 5,
                                        "src": "3931:42:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "3917:56:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 543,
                                    "nodeType": "IfStatement",
                                    "src": "3913:176:1",
                                    "trueBody": {
                                      "id": 542,
                                      "nodeType": "Block",
                                      "src": "3975:114:1",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 536,
                                                "name": "_id",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 495,
                                                "src": "4026:3:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              {
                                                "id": 537,
                                                "name": "_reward",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 493,
                                                "src": "4031:7:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              {
                                                "id": 538,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 512,
                                                "src": "4040:1:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 535,
                                              "name": "withdrawNftAndRewardClaimant",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 665,
                                              "src": "3997:28:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                                                "typeString": "function (uint256,uint256,uint256)"
                                              }
                                            },
                                            "id": 539,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "3997:45:1",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 540,
                                          "nodeType": "ExpressionStatement",
                                          "src": "3997:45:1"
                                        },
                                        {
                                          "functionReturnParameters": 497,
                                          "id": 541,
                                          "nodeType": "Return",
                                          "src": "4064:7:1"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 521,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 515,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 512,
                                  "src": "3845:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 516,
                                        "name": "depositedKongs",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 182,
                                        "src": "3849:14:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DepositedNft_$173_storage_$",
                                          "typeString": "mapping(uint256 => struct HyksosCyberkongz.DepositedNft storage ref)"
                                        }
                                      },
                                      "id": 518,
                                      "indexExpression": {
                                        "id": 517,
                                        "name": "_id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 495,
                                        "src": "3864:3:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3849:19:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_DepositedNft_$173_storage",
                                        "typeString": "struct HyksosCyberkongz.DepositedNft storage ref"
                                      }
                                    },
                                    "id": 519,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "shareholders",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 172,
                                    "src": "3849:32:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Deposit_$6_storage_$dyn_storage",
                                      "typeString": "struct DepositQueue.Deposit storage ref[] storage ref"
                                    }
                                  },
                                  "id": 520,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "3849:39:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3845:43:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 545,
                              "initializationExpression": {
                                "assignments": [
                                  512
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 512,
                                    "mutability": "mutable",
                                    "name": "i",
                                    "nameLocation": "3838:1:1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 545,
                                    "src": "3833:6:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 511,
                                      "name": "uint",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3833:4:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 514,
                                "initialValue": {
                                  "hexValue": "30",
                                  "id": 513,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3842:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "3833:10:1"
                              },
                              "loopExpression": {
                                "expression": {
                                  "id": 523,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "3890:3:1",
                                  "subExpression": {
                                    "id": 522,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 512,
                                    "src": "3890:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 524,
                                "nodeType": "ExpressionStatement",
                                "src": "3890:3:1"
                              },
                              "nodeType": "ForStatement",
                              "src": "3828:275:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 547,
                                    "name": "_id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 495,
                                    "src": "4241:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 548,
                                    "name": "_reward",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 493,
                                    "src": "4246:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 546,
                                  "name": "withdrawNftAndShareRewardEqually",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 603,
                                  "src": "4208:32:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256)"
                                  }
                                },
                                "id": 549,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4208:46:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 550,
                              "nodeType": "ExpressionStatement",
                              "src": "4208:46:1"
                            }
                          ]
                        },
                        "id": 552,
                        "nodeType": "IfStatement",
                        "src": "3630:635:1",
                        "trueBody": {
                          "id": 510,
                          "nodeType": "Block",
                          "src": "3675:71:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 506,
                                    "name": "_id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 495,
                                    "src": "3722:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 507,
                                    "name": "_reward",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 493,
                                    "src": "3727:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 505,
                                  "name": "withdrawNftAndShareRewardEqually",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 603,
                                  "src": "3689:32:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256)"
                                  }
                                },
                                "id": 508,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3689:46:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 509,
                              "nodeType": "ExpressionStatement",
                              "src": "3689:46:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 554,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "distributeRewards",
                  "nameLocation": "3507:17:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 496,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 493,
                        "mutability": "mutable",
                        "name": "_reward",
                        "nameLocation": "3533:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 554,
                        "src": "3525:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 492,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3525:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 495,
                        "mutability": "mutable",
                        "name": "_id",
                        "nameLocation": "3550:3:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 554,
                        "src": "3542:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 494,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3542:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3524:30:1"
                  },
                  "returnParameters": {
                    "id": 497,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3564:0:1"
                  },
                  "scope": 934,
                  "src": "3498:773:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 602,
                    "nodeType": "Block",
                    "src": "4358:287:1",
                    "statements": [
                      {
                        "body": {
                          "id": 600,
                          "nodeType": "Block",
                          "src": "4435:204:1",
                          "statements": [
                            {
                              "assignments": [
                                577
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 577,
                                  "mutability": "mutable",
                                  "name": "d",
                                  "nameLocation": "4464:1:1",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 600,
                                  "src": "4449:16:1",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Deposit_$6_memory_ptr",
                                    "typeString": "struct DepositQueue.Deposit"
                                  },
                                  "typeName": {
                                    "id": 576,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 575,
                                      "name": "Deposit",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 6,
                                      "src": "4449:7:1"
                                    },
                                    "referencedDeclaration": 6,
                                    "src": "4449:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Deposit_$6_storage_ptr",
                                      "typeString": "struct DepositQueue.Deposit"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 584,
                              "initialValue": {
                                "baseExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 578,
                                      "name": "depositedKongs",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 182,
                                      "src": "4468:14:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DepositedNft_$173_storage_$",
                                        "typeString": "mapping(uint256 => struct HyksosCyberkongz.DepositedNft storage ref)"
                                      }
                                    },
                                    "id": 580,
                                    "indexExpression": {
                                      "id": 579,
                                      "name": "_id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 556,
                                      "src": "4483:3:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4468:19:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_DepositedNft_$173_storage",
                                      "typeString": "struct HyksosCyberkongz.DepositedNft storage ref"
                                    }
                                  },
                                  "id": 581,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "shareholders",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 172,
                                  "src": "4468:32:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Deposit_$6_storage_$dyn_storage",
                                    "typeString": "struct DepositQueue.Deposit storage ref[] storage ref"
                                  }
                                },
                                "id": 583,
                                "indexExpression": {
                                  "id": 582,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 562,
                                  "src": "4501:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4468:35:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Deposit_$6_storage",
                                  "typeString": "struct DepositQueue.Deposit storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4449:54:1"
                            },
                            {
                              "assignments": [
                                586
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 586,
                                  "mutability": "mutable",
                                  "name": "payback",
                                  "nameLocation": "4525:7:1",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 600,
                                  "src": "4517:15:1",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 585,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4517:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 593,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 592,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 590,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 587,
                                      "name": "d",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 577,
                                      "src": "4535:1:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Deposit_$6_memory_ptr",
                                        "typeString": "struct DepositQueue.Deposit memory"
                                      }
                                    },
                                    "id": 588,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "amount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3,
                                    "src": "4535:8:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 589,
                                    "name": "_reward",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 558,
                                    "src": "4546:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4535:18:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "id": 591,
                                  "name": "LOAN_AMOUNT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 219,
                                  "src": "4556:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4535:32:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4517:50:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 595,
                                      "name": "d",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 577,
                                      "src": "4610:1:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Deposit_$6_memory_ptr",
                                        "typeString": "struct DepositQueue.Deposit memory"
                                      }
                                    },
                                    "id": 596,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 5,
                                    "src": "4610:8:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 597,
                                    "name": "payback",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 586,
                                    "src": "4620:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 594,
                                  "name": "payRewardAccordingToStrategy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 858,
                                  "src": "4581:28:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 598,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4581:47:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 599,
                              "nodeType": "ExpressionStatement",
                              "src": "4581:47:1"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 565,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 562,
                            "src": "4385:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 566,
                                  "name": "depositedKongs",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 182,
                                  "src": "4389:14:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DepositedNft_$173_storage_$",
                                    "typeString": "mapping(uint256 => struct HyksosCyberkongz.DepositedNft storage ref)"
                                  }
                                },
                                "id": 568,
                                "indexExpression": {
                                  "id": 567,
                                  "name": "_id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 556,
                                  "src": "4404:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4389:19:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DepositedNft_$173_storage",
                                  "typeString": "struct HyksosCyberkongz.DepositedNft storage ref"
                                }
                              },
                              "id": 569,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "shareholders",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 172,
                              "src": "4389:32:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Deposit_$6_storage_$dyn_storage",
                                "typeString": "struct DepositQueue.Deposit storage ref[] storage ref"
                              }
                            },
                            "id": 570,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4389:39:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4385:43:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 601,
                        "initializationExpression": {
                          "assignments": [
                            562
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 562,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "4378:1:1",
                              "nodeType": "VariableDeclaration",
                              "scope": 601,
                              "src": "4373:6:1",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 561,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "4373:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 564,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 563,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4382:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4373:10:1"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 573,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "4430:3:1",
                            "subExpression": {
                              "id": 572,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 562,
                              "src": "4430:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 574,
                          "nodeType": "ExpressionStatement",
                          "src": "4430:3:1"
                        },
                        "nodeType": "ForStatement",
                        "src": "4368:271:1"
                      }
                    ]
                  },
                  "id": 603,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawNftAndShareRewardEqually",
                  "nameLocation": "4286:32:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 559,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 556,
                        "mutability": "mutable",
                        "name": "_id",
                        "nameLocation": "4327:3:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 603,
                        "src": "4319:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 555,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4319:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 558,
                        "mutability": "mutable",
                        "name": "_reward",
                        "nameLocation": "4340:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 603,
                        "src": "4332:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 557,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4332:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4318:30:1"
                  },
                  "returnParameters": {
                    "id": 560,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4358:0:1"
                  },
                  "scope": 934,
                  "src": "4277:368:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 664,
                    "nodeType": "Block",
                    "src": "4749:384:1",
                    "statements": [
                      {
                        "body": {
                          "id": 662,
                          "nodeType": "Block",
                          "src": "4826:301:1",
                          "statements": [
                            {
                              "assignments": [
                                628
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 628,
                                  "mutability": "mutable",
                                  "name": "d",
                                  "nameLocation": "4855:1:1",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 662,
                                  "src": "4840:16:1",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Deposit_$6_memory_ptr",
                                    "typeString": "struct DepositQueue.Deposit"
                                  },
                                  "typeName": {
                                    "id": 627,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 626,
                                      "name": "Deposit",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 6,
                                      "src": "4840:7:1"
                                    },
                                    "referencedDeclaration": 6,
                                    "src": "4840:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Deposit_$6_storage_ptr",
                                      "typeString": "struct DepositQueue.Deposit"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 635,
                              "initialValue": {
                                "baseExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 629,
                                      "name": "depositedKongs",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 182,
                                      "src": "4859:14:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DepositedNft_$173_storage_$",
                                        "typeString": "mapping(uint256 => struct HyksosCyberkongz.DepositedNft storage ref)"
                                      }
                                    },
                                    "id": 631,
                                    "indexExpression": {
                                      "id": 630,
                                      "name": "_id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 605,
                                      "src": "4874:3:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4859:19:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_DepositedNft_$173_storage",
                                      "typeString": "struct HyksosCyberkongz.DepositedNft storage ref"
                                    }
                                  },
                                  "id": 632,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "shareholders",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 172,
                                  "src": "4859:32:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Deposit_$6_storage_$dyn_storage",
                                    "typeString": "struct DepositQueue.Deposit storage ref[] storage ref"
                                  }
                                },
                                "id": 634,
                                "indexExpression": {
                                  "id": 633,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 613,
                                  "src": "4892:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4859:35:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Deposit_$6_storage",
                                  "typeString": "struct DepositQueue.Deposit storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4840:54:1"
                            },
                            {
                              "assignments": [
                                637
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 637,
                                  "mutability": "mutable",
                                  "name": "payback",
                                  "nameLocation": "4916:7:1",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 662,
                                  "src": "4908:15:1",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 636,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4908:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 644,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 643,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 641,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 638,
                                      "name": "d",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 628,
                                      "src": "4926:1:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Deposit_$6_memory_ptr",
                                        "typeString": "struct DepositQueue.Deposit memory"
                                      }
                                    },
                                    "id": 639,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "amount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3,
                                    "src": "4926:8:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "313030",
                                    "id": 640,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4937:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    },
                                    "value": "100"
                                  },
                                  "src": "4926:14:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "id": 642,
                                  "name": "ROI_PCTG",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 207,
                                  "src": "4943:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4926:25:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4908:43:1"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 647,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 645,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 613,
                                  "src": "4969:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 646,
                                  "name": "_claimantId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 609,
                                  "src": "4974:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4969:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 655,
                              "nodeType": "IfStatement",
                              "src": "4965:91:1",
                              "trueBody": {
                                "id": 654,
                                "nodeType": "Block",
                                "src": "4987:69:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 652,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 648,
                                        "name": "payback",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 637,
                                        "src": "5005:7:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "+=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 651,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 649,
                                          "name": "_reward",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 607,
                                          "src": "5016:7:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 650,
                                          "name": "KONG_WORK_VALUE",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 212,
                                          "src": "5026:15:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "5016:25:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "5005:36:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 653,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5005:36:1"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 657,
                                      "name": "d",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 628,
                                      "src": "5098:1:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Deposit_$6_memory_ptr",
                                        "typeString": "struct DepositQueue.Deposit memory"
                                      }
                                    },
                                    "id": 658,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 5,
                                    "src": "5098:8:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 659,
                                    "name": "payback",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 637,
                                    "src": "5108:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 656,
                                  "name": "payRewardAccordingToStrategy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 858,
                                  "src": "5069:28:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 660,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5069:47:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 661,
                              "nodeType": "ExpressionStatement",
                              "src": "5069:47:1"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 616,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 613,
                            "src": "4776:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 617,
                                  "name": "depositedKongs",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 182,
                                  "src": "4780:14:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DepositedNft_$173_storage_$",
                                    "typeString": "mapping(uint256 => struct HyksosCyberkongz.DepositedNft storage ref)"
                                  }
                                },
                                "id": 619,
                                "indexExpression": {
                                  "id": 618,
                                  "name": "_id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 605,
                                  "src": "4795:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4780:19:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DepositedNft_$173_storage",
                                  "typeString": "struct HyksosCyberkongz.DepositedNft storage ref"
                                }
                              },
                              "id": 620,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "shareholders",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 172,
                              "src": "4780:32:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Deposit_$6_storage_$dyn_storage",
                                "typeString": "struct DepositQueue.Deposit storage ref[] storage ref"
                              }
                            },
                            "id": 621,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4780:39:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4776:43:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 663,
                        "initializationExpression": {
                          "assignments": [
                            613
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 613,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "4769:1:1",
                              "nodeType": "VariableDeclaration",
                              "scope": 663,
                              "src": "4764:6:1",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 612,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "4764:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 615,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4773:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4764:10:1"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 624,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "4821:3:1",
                            "subExpression": {
                              "id": 623,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 613,
                              "src": "4821:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 625,
                          "nodeType": "ExpressionStatement",
                          "src": "4821:3:1"
                        },
                        "nodeType": "ForStatement",
                        "src": "4759:368:1"
                      }
                    ]
                  },
                  "id": 665,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawNftAndRewardClaimant",
                  "nameLocation": "4660:28:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 610,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 605,
                        "mutability": "mutable",
                        "name": "_id",
                        "nameLocation": "4697:3:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 665,
                        "src": "4689:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 604,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4689:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 607,
                        "mutability": "mutable",
                        "name": "_reward",
                        "nameLocation": "4710:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 665,
                        "src": "4702:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 606,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4702:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 609,
                        "mutability": "mutable",
                        "name": "_claimantId",
                        "nameLocation": "4727:11:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 665,
                        "src": "4719:19:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 608,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4719:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4688:51:1"
                  },
                  "returnParameters": {
                    "id": 611,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4749:0:1"
                  },
                  "scope": 934,
                  "src": "4651:482:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 821,
                    "nodeType": "Block",
                    "src": "5189:1624:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 673,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 671,
                                "name": "totalBananasBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 188,
                                "src": "5207:19:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 672,
                                "name": "LOAN_AMOUNT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 219,
                                "src": "5230:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5207:34:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420656e6f7567682062616e616e617320746f2066756e642061206c6f616e2e",
                              "id": 674,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5243:36:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_146d1c9f512b67e79f4693183aff46c96fcc7170b7d03dda10872af69bff1cfb",
                                "typeString": "literal_string \"Not enough bananas to fund a loan.\""
                              },
                              "value": "Not enough bananas to fund a loan."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_146d1c9f512b67e79f4693183aff46c96fcc7170b7d03dda10872af69bff1cfb",
                                "typeString": "literal_string \"Not enough bananas to fund a loan.\""
                              }
                            ],
                            "id": 670,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5199:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5199:81:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 676,
                        "nodeType": "ExpressionStatement",
                        "src": "5199:81:1"
                      },
                      {
                        "assignments": [
                          678
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 678,
                            "mutability": "mutable",
                            "name": "selectedAmount",
                            "nameLocation": "5298:14:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 821,
                            "src": "5290:22:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 677,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5290:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 680,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5315:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5290:26:1"
                      },
                      {
                        "body": {
                          "id": 815,
                          "nodeType": "Block",
                          "src": "5357:1332:1",
                          "statements": [
                            {
                              "assignments": [
                                686
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 686,
                                  "mutability": "mutable",
                                  "name": "d",
                                  "nameLocation": "5386:1:1",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 815,
                                  "src": "5371:16:1",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Deposit_$6_memory_ptr",
                                    "typeString": "struct DepositQueue.Deposit"
                                  },
                                  "typeName": {
                                    "id": 685,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 684,
                                      "name": "Deposit",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 6,
                                      "src": "5371:7:1"
                                    },
                                    "referencedDeclaration": 6,
                                    "src": "5371:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Deposit_$6_storage_ptr",
                                      "typeString": "struct DepositQueue.Deposit"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 689,
                              "initialValue": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 687,
                                  "name": "getTopDeposit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 80,
                                  "src": "5390:13:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_Deposit_$6_memory_ptr_$",
                                    "typeString": "function () view returns (struct DepositQueue.Deposit memory)"
                                  }
                                },
                                "id": 688,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5390:15:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Deposit_$6_memory_ptr",
                                  "typeString": "struct DepositQueue.Deposit memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "5371:34:1"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 695,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 690,
                                    "name": "bananaBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 177,
                                    "src": "5423:13:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 693,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 691,
                                      "name": "d",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 686,
                                      "src": "5437:1:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Deposit_$6_memory_ptr",
                                        "typeString": "struct DepositQueue.Deposit memory"
                                      }
                                    },
                                    "id": 692,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 5,
                                    "src": "5437:8:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5423:23:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 694,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5450:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "5423:28:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 701,
                              "nodeType": "IfStatement",
                              "src": "5419:105:1",
                              "trueBody": {
                                "id": 700,
                                "nodeType": "Block",
                                "src": "5453:71:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 696,
                                        "name": "popDeposit",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 67,
                                        "src": "5471:10:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_struct$_Deposit_$6_memory_ptr_$",
                                          "typeString": "function () returns (struct DepositQueue.Deposit memory)"
                                        }
                                      },
                                      "id": 697,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5471:12:1",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Deposit_$6_memory_ptr",
                                        "typeString": "struct DepositQueue.Deposit memory"
                                      }
                                    },
                                    "id": 698,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5471:12:1"
                                  },
                                  {
                                    "id": 699,
                                    "nodeType": "Continue",
                                    "src": "5501:8:1"
                                  }
                                ]
                              }
                            },
                            {
                              "assignments": [
                                703
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 703,
                                  "mutability": "mutable",
                                  "name": "depositAmount",
                                  "nameLocation": "5545:13:1",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 815,
                                  "src": "5537:21:1",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 702,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5537:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 704,
                              "nodeType": "VariableDeclarationStatement",
                              "src": "5537:21:1"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 711,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 705,
                                    "name": "bananaBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 177,
                                    "src": "5576:13:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 708,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 706,
                                      "name": "d",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 686,
                                      "src": "5590:1:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Deposit_$6_memory_ptr",
                                        "typeString": "struct DepositQueue.Deposit memory"
                                      }
                                    },
                                    "id": 707,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 5,
                                    "src": "5590:8:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5576:23:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "id": 709,
                                    "name": "d",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 686,
                                    "src": "5602:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Deposit_$6_memory_ptr",
                                      "typeString": "struct DepositQueue.Deposit memory"
                                    }
                                  },
                                  "id": 710,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "amount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3,
                                  "src": "5602:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5576:34:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 725,
                                "nodeType": "Block",
                                "src": "5690:57:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 723,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 720,
                                        "name": "depositAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 703,
                                        "src": "5708:13:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "expression": {
                                          "id": 721,
                                          "name": "d",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 686,
                                          "src": "5724:1:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Deposit_$6_memory_ptr",
                                            "typeString": "struct DepositQueue.Deposit memory"
                                          }
                                        },
                                        "id": 722,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "amount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3,
                                        "src": "5724:8:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "5708:24:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 724,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5708:24:1"
                                  }
                                ]
                              },
                              "id": 726,
                              "nodeType": "IfStatement",
                              "src": "5572:175:1",
                              "trueBody": {
                                "id": 719,
                                "nodeType": "Block",
                                "src": "5612:72:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 717,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 712,
                                        "name": "depositAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 703,
                                        "src": "5630:13:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "baseExpression": {
                                          "id": 713,
                                          "name": "bananaBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 177,
                                          "src": "5646:13:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                            "typeString": "mapping(address => uint256)"
                                          }
                                        },
                                        "id": 716,
                                        "indexExpression": {
                                          "expression": {
                                            "id": 714,
                                            "name": "d",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 686,
                                            "src": "5660:1:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Deposit_$6_memory_ptr",
                                              "typeString": "struct DepositQueue.Deposit memory"
                                            }
                                          },
                                          "id": 715,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 5,
                                          "src": "5660:8:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "5646:23:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "5630:39:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 718,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5630:39:1"
                                  }
                                ]
                              }
                            },
                            {
                              "assignments": [
                                728
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 728,
                                  "mutability": "mutable",
                                  "name": "resultingAmount",
                                  "nameLocation": "5768:15:1",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 815,
                                  "src": "5760:23:1",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 727,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5760:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 732,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 731,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 729,
                                  "name": "selectedAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 678,
                                  "src": "5786:14:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 730,
                                  "name": "depositAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 703,
                                  "src": "5803:13:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5786:30:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "5760:56:1"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 735,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 733,
                                  "name": "resultingAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 728,
                                  "src": "5834:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "id": 734,
                                  "name": "LOAN_AMOUNT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 219,
                                  "src": "5852:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5834:29:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 813,
                                "nodeType": "Block",
                                "src": "6283:396:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 783,
                                              "name": "depositAmount",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 703,
                                              "src": "6347:13:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            {
                                              "expression": {
                                                "id": 784,
                                                "name": "d",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 686,
                                                "src": "6362:1:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Deposit_$6_memory_ptr",
                                                  "typeString": "struct DepositQueue.Deposit memory"
                                                }
                                              },
                                              "id": 785,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "sender",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 5,
                                              "src": "6362:8:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 782,
                                            "name": "Deposit",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 6,
                                            "src": "6339:7:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_struct$_Deposit_$6_storage_ptr_$",
                                              "typeString": "type(struct DepositQueue.Deposit storage pointer)"
                                            }
                                          },
                                          "id": 786,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "structConstructorCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "6339:32:1",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Deposit_$6_memory_ptr",
                                            "typeString": "struct DepositQueue.Deposit memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_struct$_Deposit_$6_memory_ptr",
                                            "typeString": "struct DepositQueue.Deposit memory"
                                          }
                                        ],
                                        "expression": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 777,
                                              "name": "depositedKongs",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 182,
                                              "src": "6301:14:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DepositedNft_$173_storage_$",
                                                "typeString": "mapping(uint256 => struct HyksosCyberkongz.DepositedNft storage ref)"
                                              }
                                            },
                                            "id": 779,
                                            "indexExpression": {
                                              "id": 778,
                                              "name": "_id",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 667,
                                              "src": "6316:3:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "6301:19:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_DepositedNft_$173_storage",
                                              "typeString": "struct HyksosCyberkongz.DepositedNft storage ref"
                                            }
                                          },
                                          "id": 780,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "shareholders",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 172,
                                          "src": "6301:32:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Deposit_$6_storage_$dyn_storage",
                                            "typeString": "struct DepositQueue.Deposit storage ref[] storage ref"
                                          }
                                        },
                                        "id": 781,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "push",
                                        "nodeType": "MemberAccess",
                                        "src": "6301:37:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Deposit_$6_storage_$dyn_storage_ptr_$_t_struct$_Deposit_$6_storage_$returns$__$bound_to$_t_array$_t_struct$_Deposit_$6_storage_$dyn_storage_ptr_$",
                                          "typeString": "function (struct DepositQueue.Deposit storage ref[] storage pointer,struct DepositQueue.Deposit storage ref)"
                                        }
                                      },
                                      "id": 787,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6301:71:1",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 788,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6301:71:1"
                                  },
                                  {
                                    "expression": {
                                      "id": 791,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 789,
                                        "name": "selectedAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 678,
                                        "src": "6390:14:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 790,
                                        "name": "resultingAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 728,
                                        "src": "6407:15:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6390:32:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 792,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6390:32:1"
                                  },
                                  {
                                    "expression": {
                                      "id": 798,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 793,
                                          "name": "bananaBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 177,
                                          "src": "6440:13:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                            "typeString": "mapping(address => uint256)"
                                          }
                                        },
                                        "id": 796,
                                        "indexExpression": {
                                          "expression": {
                                            "id": 794,
                                            "name": "d",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 686,
                                            "src": "6454:1:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Deposit_$6_memory_ptr",
                                              "typeString": "struct DepositQueue.Deposit memory"
                                            }
                                          },
                                          "id": 795,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 5,
                                          "src": "6454:8:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "6440:23:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "-=",
                                      "rightHandSide": {
                                        "id": 797,
                                        "name": "depositAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 703,
                                        "src": "6467:13:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6440:40:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 799,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6440:40:1"
                                  },
                                  {
                                    "expression": {
                                      "id": 802,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 800,
                                        "name": "totalBananasBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 188,
                                        "src": "6498:19:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "-=",
                                      "rightHandSide": {
                                        "id": 801,
                                        "name": "depositAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 703,
                                        "src": "6521:13:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6498:36:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 803,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6498:36:1"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 804,
                                        "name": "popDeposit",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 67,
                                        "src": "6552:10:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_struct$_Deposit_$6_memory_ptr_$",
                                          "typeString": "function () returns (struct DepositQueue.Deposit memory)"
                                        }
                                      },
                                      "id": 805,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6552:12:1",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Deposit_$6_memory_ptr",
                                        "typeString": "struct DepositQueue.Deposit memory"
                                      }
                                    },
                                    "id": 806,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6552:12:1"
                                  },
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 809,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 807,
                                        "name": "resultingAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 728,
                                        "src": "6586:15:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "id": 808,
                                        "name": "LOAN_AMOUNT",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 219,
                                        "src": "6605:11:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6586:30:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 812,
                                    "nodeType": "IfStatement",
                                    "src": "6582:83:1",
                                    "trueBody": {
                                      "id": 811,
                                      "nodeType": "Block",
                                      "src": "6618:47:1",
                                      "statements": [
                                        {
                                          "functionReturnParameters": 669,
                                          "id": 810,
                                          "nodeType": "Return",
                                          "src": "6640:7:1"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "id": 814,
                              "nodeType": "IfStatement",
                              "src": "5830:849:1",
                              "trueBody": {
                                "id": 776,
                                "nodeType": "Block",
                                "src": "5865:412:1",
                                "statements": [
                                  {
                                    "assignments": [
                                      737
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 737,
                                        "mutability": "mutable",
                                        "name": "usedAmount",
                                        "nameLocation": "5891:10:1",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 776,
                                        "src": "5883:18:1",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 736,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "5883:7:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 741,
                                    "initialValue": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 740,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 738,
                                        "name": "LOAN_AMOUNT",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 219,
                                        "src": "5904:11:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 739,
                                        "name": "selectedAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 678,
                                        "src": "5918:14:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "5904:28:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "5883:49:1"
                                  },
                                  {
                                    "assignments": [
                                      743
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 743,
                                        "mutability": "mutable",
                                        "name": "leftAmount",
                                        "nameLocation": "5958:10:1",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 776,
                                        "src": "5950:18:1",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 742,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "5950:7:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 747,
                                    "initialValue": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 746,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 744,
                                        "name": "depositAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 703,
                                        "src": "5971:13:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 745,
                                        "name": "usedAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 737,
                                        "src": "5987:10:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "5971:26:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "5950:47:1"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 749,
                                          "name": "leftAmount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 743,
                                          "src": "6035:10:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 748,
                                        "name": "setTopDepositAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 95,
                                        "src": "6015:19:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                          "typeString": "function (uint256)"
                                        }
                                      },
                                      "id": 750,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6015:31:1",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 751,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6015:31:1"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 758,
                                              "name": "usedAmount",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 737,
                                              "src": "6110:10:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            {
                                              "expression": {
                                                "id": 759,
                                                "name": "d",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 686,
                                                "src": "6122:1:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Deposit_$6_memory_ptr",
                                                  "typeString": "struct DepositQueue.Deposit memory"
                                                }
                                              },
                                              "id": 760,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "sender",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 5,
                                              "src": "6122:8:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 757,
                                            "name": "Deposit",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 6,
                                            "src": "6102:7:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_struct$_Deposit_$6_storage_ptr_$",
                                              "typeString": "type(struct DepositQueue.Deposit storage pointer)"
                                            }
                                          },
                                          "id": 761,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "structConstructorCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "6102:29:1",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Deposit_$6_memory_ptr",
                                            "typeString": "struct DepositQueue.Deposit memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_struct$_Deposit_$6_memory_ptr",
                                            "typeString": "struct DepositQueue.Deposit memory"
                                          }
                                        ],
                                        "expression": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 752,
                                              "name": "depositedKongs",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 182,
                                              "src": "6064:14:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DepositedNft_$173_storage_$",
                                                "typeString": "mapping(uint256 => struct HyksosCyberkongz.DepositedNft storage ref)"
                                              }
                                            },
                                            "id": 754,
                                            "indexExpression": {
                                              "id": 753,
                                              "name": "_id",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 667,
                                              "src": "6079:3:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "6064:19:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_DepositedNft_$173_storage",
                                              "typeString": "struct HyksosCyberkongz.DepositedNft storage ref"
                                            }
                                          },
                                          "id": 755,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "shareholders",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 172,
                                          "src": "6064:32:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Deposit_$6_storage_$dyn_storage",
                                            "typeString": "struct DepositQueue.Deposit storage ref[] storage ref"
                                          }
                                        },
                                        "id": 756,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "push",
                                        "nodeType": "MemberAccess",
                                        "src": "6064:37:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Deposit_$6_storage_$dyn_storage_ptr_$_t_struct$_Deposit_$6_storage_$returns$__$bound_to$_t_array$_t_struct$_Deposit_$6_storage_$dyn_storage_ptr_$",
                                          "typeString": "function (struct DepositQueue.Deposit storage ref[] storage pointer,struct DepositQueue.Deposit storage ref)"
                                        }
                                      },
                                      "id": 762,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6064:68:1",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 763,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6064:68:1"
                                  },
                                  {
                                    "expression": {
                                      "id": 769,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 764,
                                          "name": "bananaBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 177,
                                          "src": "6150:13:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                            "typeString": "mapping(address => uint256)"
                                          }
                                        },
                                        "id": 767,
                                        "indexExpression": {
                                          "expression": {
                                            "id": 765,
                                            "name": "d",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 686,
                                            "src": "6164:1:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Deposit_$6_memory_ptr",
                                              "typeString": "struct DepositQueue.Deposit memory"
                                            }
                                          },
                                          "id": 766,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 5,
                                          "src": "6164:8:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "6150:23:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "-=",
                                      "rightHandSide": {
                                        "id": 768,
                                        "name": "usedAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 737,
                                        "src": "6177:10:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6150:37:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 770,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6150:37:1"
                                  },
                                  {
                                    "expression": {
                                      "id": 773,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 771,
                                        "name": "totalBananasBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 188,
                                        "src": "6205:19:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "-=",
                                      "rightHandSide": {
                                        "id": 772,
                                        "name": "usedAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 737,
                                        "src": "6228:10:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6205:33:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 774,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6205:33:1"
                                  },
                                  {
                                    "functionReturnParameters": 669,
                                    "id": 775,
                                    "nodeType": "Return",
                                    "src": "6256:7:1"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "id": 683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "5333:22:1",
                          "subExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 681,
                              "name": "isDepositQueueEmpty",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23,
                              "src": "5334:19:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                "typeString": "function () view returns (bool)"
                              }
                            },
                            "id": 682,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5334:21:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 816,
                        "nodeType": "WhileStatement",
                        "src": "5326:1363:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "4e6f7420656e6f756768206465706f736974732e",
                              "id": 818,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6783:22:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b75bbae855d8d6eb1bedd5ad8bdd62ccee862e79d5ddfe3f9b00a48840abaef0",
                                "typeString": "literal_string \"Not enough deposits.\""
                              },
                              "value": "Not enough deposits."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_b75bbae855d8d6eb1bedd5ad8bdd62ccee862e79d5ddfe3f9b00a48840abaef0",
                                "typeString": "literal_string \"Not enough deposits.\""
                              }
                            ],
                            "id": 817,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "6776:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6776:30:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 820,
                        "nodeType": "ExpressionStatement",
                        "src": "6776:30:1"
                      }
                    ]
                  },
                  "id": 822,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "selectShareholders",
                  "nameLocation": "5148:18:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 668,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 667,
                        "mutability": "mutable",
                        "name": "_id",
                        "nameLocation": "5175:3:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 822,
                        "src": "5167:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 666,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5167:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5166:13:1"
                  },
                  "returnParameters": {
                    "id": 669,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5189:0:1"
                  },
                  "scope": 934,
                  "src": "5139:1674:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 857,
                    "nodeType": "Block",
                    "src": "6902:266:1",
                    "statements": [
                      {
                        "condition": {
                          "baseExpression": {
                            "id": 829,
                            "name": "isAutoCompoundOff",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 186,
                            "src": "6916:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 831,
                          "indexExpression": {
                            "id": 830,
                            "name": "_receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 824,
                            "src": "6934:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6916:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 855,
                          "nodeType": "Block",
                          "src": "7013:149:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 844,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 840,
                                    "name": "bananaBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 177,
                                    "src": "7027:13:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 842,
                                  "indexExpression": {
                                    "id": 841,
                                    "name": "_receiver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 824,
                                    "src": "7041:9:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "7027:24:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 843,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 826,
                                  "src": "7055:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7027:35:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 845,
                              "nodeType": "ExpressionStatement",
                              "src": "7027:35:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 847,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 826,
                                    "src": "7088:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 848,
                                    "name": "_receiver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 824,
                                    "src": "7097:9:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 846,
                                  "name": "pushDeposit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 50,
                                  "src": "7076:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                                    "typeString": "function (uint256,address)"
                                  }
                                },
                                "id": 849,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7076:31:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 850,
                              "nodeType": "ExpressionStatement",
                              "src": "7076:31:1"
                            },
                            {
                              "expression": {
                                "id": 853,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 851,
                                  "name": "totalBananasBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 188,
                                  "src": "7121:19:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 852,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 826,
                                  "src": "7144:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7121:30:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 854,
                              "nodeType": "ExpressionStatement",
                              "src": "7121:30:1"
                            }
                          ]
                        },
                        "id": 856,
                        "nodeType": "IfStatement",
                        "src": "6912:250:1",
                        "trueBody": {
                          "id": 839,
                          "nodeType": "Block",
                          "src": "6946:61:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 835,
                                    "name": "_receiver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 824,
                                    "src": "6977:9:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 836,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 826,
                                    "src": "6988:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 832,
                                    "name": "bananas",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 164,
                                    "src": "6960:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1085",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 834,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1034,
                                  "src": "6960:16:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 837,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6960:36:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 838,
                              "nodeType": "ExpressionStatement",
                              "src": "6960:36:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 858,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "payRewardAccordingToStrategy",
                  "nameLocation": "6828:28:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 827,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 824,
                        "mutability": "mutable",
                        "name": "_receiver",
                        "nameLocation": "6865:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 858,
                        "src": "6857:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 823,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6857:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 826,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "6884:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 858,
                        "src": "6876:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 825,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6876:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6856:36:1"
                  },
                  "returnParameters": {
                    "id": 828,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6902:0:1"
                  },
                  "scope": 934,
                  "src": "6819:349:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 869,
                    "nodeType": "Block",
                    "src": "7236:34:1",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 865,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 860,
                            "src": "7253:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "31303031",
                            "id": 866,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7259:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1001_by_1",
                              "typeString": "int_const 1001"
                            },
                            "value": "1001"
                          },
                          "src": "7253:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 864,
                        "id": 868,
                        "nodeType": "Return",
                        "src": "7246:17:1"
                      }
                    ]
                  },
                  "id": 870,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isValidKong",
                  "nameLocation": "7183:11:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 861,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 860,
                        "mutability": "mutable",
                        "name": "_id",
                        "nameLocation": "7203:3:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 870,
                        "src": "7195:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 859,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7195:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7194:13:1"
                  },
                  "returnParameters": {
                    "id": 864,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 863,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 870,
                        "src": "7230:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 862,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7230:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7229:6:1"
                  },
                  "scope": 934,
                  "src": "7174:96:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 883,
                    "nodeType": "Block",
                    "src": "7342:49:1",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 879,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 877,
                              "name": "BASE_RATE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 199,
                              "src": "7359:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 878,
                              "name": "_time",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 872,
                              "src": "7371:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7359:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "3836343030",
                            "id": 880,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7379:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_86400_by_1",
                              "typeString": "int_const 86400"
                            },
                            "value": "86400"
                          },
                          "src": "7359:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 876,
                        "id": 882,
                        "nodeType": "Return",
                        "src": "7352:32:1"
                      }
                    ]
                  },
                  "id": 884,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "calcReward",
                  "nameLocation": "7285:10:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 873,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 872,
                        "mutability": "mutable",
                        "name": "_time",
                        "nameLocation": "7304:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 884,
                        "src": "7296:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 871,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7296:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7295:15:1"
                  },
                  "returnParameters": {
                    "id": 876,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 875,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 884,
                        "src": "7333:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 874,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7333:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7332:9:1"
                  },
                  "scope": 934,
                  "src": "7276:115:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    970
                  ],
                  "body": {
                    "id": 896,
                    "nodeType": "Block",
                    "src": "7474:44:1",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 892,
                            "name": "bananaBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 177,
                            "src": "7491:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 894,
                          "indexExpression": {
                            "id": 893,
                            "name": "_addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 886,
                            "src": "7505:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7491:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 891,
                        "id": 895,
                        "nodeType": "Return",
                        "src": "7484:27:1"
                      }
                    ]
                  },
                  "functionSelector": "b478fc07",
                  "id": 897,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "erc20Balance",
                  "nameLocation": "7406:12:1",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 888,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "7448:8:1"
                  },
                  "parameters": {
                    "id": 887,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 886,
                        "mutability": "mutable",
                        "name": "_addr",
                        "nameLocation": "7427:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 897,
                        "src": "7419:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 885,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7419:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7418:15:1"
                  },
                  "returnParameters": {
                    "id": 891,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 890,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 897,
                        "src": "7465:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 889,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7465:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7464:9:1"
                  },
                  "scope": 934,
                  "src": "7397:121:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    975
                  ],
                  "body": {
                    "id": 905,
                    "nodeType": "Block",
                    "src": "7586:43:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 903,
                          "name": "totalBananasBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 188,
                          "src": "7603:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 902,
                        "id": 904,
                        "nodeType": "Return",
                        "src": "7596:26:1"
                      }
                    ]
                  },
                  "functionSelector": "c0316aa3",
                  "id": 906,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalErc20",
                  "nameLocation": "7533:10:1",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 899,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "7560:8:1"
                  },
                  "parameters": {
                    "id": 898,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7543:2:1"
                  },
                  "returnParameters": {
                    "id": 902,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 901,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 906,
                        "src": "7577:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 900,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7577:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7576:9:1"
                  },
                  "scope": 934,
                  "src": "7524:105:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 918,
                    "nodeType": "Block",
                    "src": "7713:43:1",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 914,
                            "name": "depositedKongs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 182,
                            "src": "7730:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DepositedNft_$173_storage_$",
                              "typeString": "mapping(uint256 => struct HyksosCyberkongz.DepositedNft storage ref)"
                            }
                          },
                          "id": 916,
                          "indexExpression": {
                            "id": 915,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 908,
                            "src": "7745:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7730:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DepositedNft_$173_storage",
                            "typeString": "struct HyksosCyberkongz.DepositedNft storage ref"
                          }
                        },
                        "functionReturnParameters": 913,
                        "id": 917,
                        "nodeType": "Return",
                        "src": "7723:26:1"
                      }
                    ]
                  },
                  "functionSelector": "199402e5",
                  "id": 919,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "depositedNft",
                  "nameLocation": "7644:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 909,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 908,
                        "mutability": "mutable",
                        "name": "_id",
                        "nameLocation": "7665:3:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 919,
                        "src": "7657:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 907,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7657:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7656:13:1"
                  },
                  "returnParameters": {
                    "id": 913,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 912,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 919,
                        "src": "7692:19:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DepositedNft_$173_memory_ptr",
                          "typeString": "struct HyksosCyberkongz.DepositedNft"
                        },
                        "typeName": {
                          "id": 911,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 910,
                            "name": "DepositedNft",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 173,
                            "src": "7692:12:1"
                          },
                          "referencedDeclaration": 173,
                          "src": "7692:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DepositedNft_$173_storage_ptr",
                            "typeString": "struct HyksosCyberkongz.DepositedNft"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7691:21:1"
                  },
                  "scope": 934,
                  "src": "7635:121:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    982
                  ],
                  "body": {
                    "id": 932,
                    "nodeType": "Block",
                    "src": "7844:49:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "7861:25:1",
                          "subExpression": {
                            "baseExpression": {
                              "id": 927,
                              "name": "isAutoCompoundOff",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 186,
                              "src": "7862:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 929,
                            "indexExpression": {
                              "id": 928,
                              "name": "_addr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 921,
                              "src": "7880:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7862:24:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 926,
                        "id": 931,
                        "nodeType": "Return",
                        "src": "7854:32:1"
                      }
                    ]
                  },
                  "functionSelector": "23ad6db2",
                  "id": 933,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "autoCompoundStrategy",
                  "nameLocation": "7771:20:1",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 923,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "7821:8:1"
                  },
                  "parameters": {
                    "id": 922,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 921,
                        "mutability": "mutable",
                        "name": "_addr",
                        "nameLocation": "7800:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 933,
                        "src": "7792:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 920,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7792:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7791:15:1"
                  },
                  "returnParameters": {
                    "id": 926,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 925,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 933,
                        "src": "7838:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 924,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7838:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7837:6:1"
                  },
                  "scope": 934,
                  "src": "7762:131:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 935,
              "src": "409:7487:1",
              "usedErrors": []
            }
          ],
          "src": "32:7864:1"
        },
        "id": 1
      },
      "contracts/IHyksos.sol": {
        "ast": {
          "absolutePath": "contracts/IHyksos.sol",
          "exportedSymbols": {
            "IHyksos": [
              1007
            ]
          },
          "id": 1008,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 936,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".10"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:2"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IHyksos",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1007,
              "linearizedBaseContracts": [
                1007
              ],
              "name": "IHyksos",
              "nameLocation": "68:7:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "9c437e54",
                  "id": 943,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "depositErc20",
                  "nameLocation": "96:12:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 941,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 938,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "117:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 943,
                        "src": "109:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 937,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "109:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 940,
                        "mutability": "mutable",
                        "name": "_isAutoCompoundOn",
                        "nameLocation": "131:17:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 943,
                        "src": "126:22:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 939,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "126:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "108:41:2"
                  },
                  "returnParameters": {
                    "id": 942,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "158:0:2"
                  },
                  "scope": 1007,
                  "src": "87:72:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "258ab15c",
                  "id": 948,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawErc20",
                  "nameLocation": "173:13:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 946,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 945,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "195:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 948,
                        "src": "187:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 944,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "187:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "186:17:2"
                  },
                  "returnParameters": {
                    "id": 947,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "212:0:2"
                  },
                  "scope": 1007,
                  "src": "164:49:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "b7c3505f",
                  "id": 953,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "depositNft",
                  "nameLocation": "227:10:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 951,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 950,
                        "mutability": "mutable",
                        "name": "_id",
                        "nameLocation": "246:3:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 953,
                        "src": "238:11:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 949,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "238:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "237:13:2"
                  },
                  "returnParameters": {
                    "id": 952,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "259:0:2"
                  },
                  "scope": 1007,
                  "src": "218:42:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "910efae8",
                  "id": 958,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawNft",
                  "nameLocation": "274:11:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 956,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 955,
                        "mutability": "mutable",
                        "name": "_id",
                        "nameLocation": "294:3:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 958,
                        "src": "286:11:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 954,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "286:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "285:13:2"
                  },
                  "returnParameters": {
                    "id": 957,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "307:0:2"
                  },
                  "scope": 1007,
                  "src": "265:43:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "90babe8b",
                  "id": 963,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setAutoCompoundStrategy",
                  "nameLocation": "322:23:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 961,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 960,
                        "mutability": "mutable",
                        "name": "_isAutoCompoundOn",
                        "nameLocation": "351:17:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 963,
                        "src": "346:22:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 959,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "346:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "345:24:2"
                  },
                  "returnParameters": {
                    "id": 962,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "378:0:2"
                  },
                  "scope": 1007,
                  "src": "313:66:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "b478fc07",
                  "id": 970,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "erc20Balance",
                  "nameLocation": "393:12:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 966,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 965,
                        "mutability": "mutable",
                        "name": "_addr",
                        "nameLocation": "414:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 970,
                        "src": "406:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 964,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "406:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "405:15:2"
                  },
                  "returnParameters": {
                    "id": 969,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 968,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 970,
                        "src": "443:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 967,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "443:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "442:9:2"
                  },
                  "scope": 1007,
                  "src": "384:68:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "c0316aa3",
                  "id": 975,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalErc20",
                  "nameLocation": "466:10:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 971,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "476:2:2"
                  },
                  "returnParameters": {
                    "id": 974,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 973,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 975,
                        "src": "501:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 972,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "501:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "500:9:2"
                  },
                  "scope": 1007,
                  "src": "457:53:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "23ad6db2",
                  "id": 982,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "autoCompoundStrategy",
                  "nameLocation": "524:20:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 978,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 977,
                        "mutability": "mutable",
                        "name": "_addr",
                        "nameLocation": "553:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 982,
                        "src": "545:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 976,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "545:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "544:15:2"
                  },
                  "returnParameters": {
                    "id": 981,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 980,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 982,
                        "src": "582:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 979,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "582:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "581:6:2"
                  },
                  "scope": 1007,
                  "src": "515:73:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "id": 988,
                  "name": "Erc20Deposit",
                  "nameLocation": "600:12:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 987,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 984,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "addr",
                        "nameLocation": "629:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 988,
                        "src": "613:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 983,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "613:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 986,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "643:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 988,
                        "src": "635:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 985,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "635:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "612:37:2"
                  },
                  "src": "594:56:2"
                },
                {
                  "anonymous": false,
                  "id": 994,
                  "name": "Erc20Withdrawal",
                  "nameLocation": "661:15:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 993,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 990,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "addr",
                        "nameLocation": "693:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 994,
                        "src": "677:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 989,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "677:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 992,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "707:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 994,
                        "src": "699:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 991,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "699:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "676:37:2"
                  },
                  "src": "655:59:2"
                },
                {
                  "anonymous": false,
                  "id": 1000,
                  "name": "NftDeposit",
                  "nameLocation": "725:10:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 999,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 996,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "addr",
                        "nameLocation": "752:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1000,
                        "src": "736:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 995,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "736:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 998,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "766:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1000,
                        "src": "758:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 997,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "758:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "735:34:2"
                  },
                  "src": "719:51:2"
                },
                {
                  "anonymous": false,
                  "id": 1006,
                  "name": "NftWithdrawal",
                  "nameLocation": "781:13:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1005,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1002,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "addr",
                        "nameLocation": "811:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1006,
                        "src": "795:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1001,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "795:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1004,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "825:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1006,
                        "src": "817:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1003,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "817:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "794:34:2"
                  },
                  "src": "775:54:2"
                }
              ],
              "scope": 1008,
              "src": "58:773:2",
              "usedErrors": []
            }
          ],
          "src": "32:799:2"
        },
        "id": 2
      },
      "openzeppelin/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "openzeppelin/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              1085
            ]
          },
          "id": 1086,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1009,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "91:23:3"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1010,
                "nodeType": "StructuredDocumentation",
                "src": "116:70:3",
                "text": " @dev Interface of the ERC20 standard as defined in the EIP."
              },
              "fullyImplemented": false,
              "id": 1085,
              "linearizedBaseContracts": [
                1085
              ],
              "name": "IERC20",
              "nameLocation": "197:6:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1011,
                    "nodeType": "StructuredDocumentation",
                    "src": "210:66:3",
                    "text": " @dev Returns the amount of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 1016,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "290:11:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1012,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "301:2:3"
                  },
                  "returnParameters": {
                    "id": 1015,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1014,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1016,
                        "src": "327:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1013,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "327:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "326:9:3"
                  },
                  "scope": 1085,
                  "src": "281:55:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1017,
                    "nodeType": "StructuredDocumentation",
                    "src": "342:72:3",
                    "text": " @dev Returns the amount of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 1024,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "428:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1020,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1019,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "446:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1024,
                        "src": "438:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1018,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "438:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "437:17:3"
                  },
                  "returnParameters": {
                    "id": 1023,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1022,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1024,
                        "src": "478:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1021,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "478:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "477:9:3"
                  },
                  "scope": 1085,
                  "src": "419:68:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1025,
                    "nodeType": "StructuredDocumentation",
                    "src": "493:209:3",
                    "text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 1034,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "716:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1030,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1027,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "733:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1034,
                        "src": "725:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1026,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "725:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1029,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "752:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1034,
                        "src": "744:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1028,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "744:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "724:35:3"
                  },
                  "returnParameters": {
                    "id": 1033,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1032,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1034,
                        "src": "778:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1031,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "778:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "777:6:3"
                  },
                  "scope": 1085,
                  "src": "707:77:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1035,
                    "nodeType": "StructuredDocumentation",
                    "src": "790:264:3",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 1044,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1068:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1040,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1037,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1086:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1044,
                        "src": "1078:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1036,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1078:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1039,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1101:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1044,
                        "src": "1093:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1038,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1093:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1077:32:3"
                  },
                  "returnParameters": {
                    "id": 1043,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1042,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1044,
                        "src": "1133:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1041,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1133:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1132:9:3"
                  },
                  "scope": 1085,
                  "src": "1059:83:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1045,
                    "nodeType": "StructuredDocumentation",
                    "src": "1148:642:3",
                    "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 1054,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "1804:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1050,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1047,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1820:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1054,
                        "src": "1812:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1046,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1812:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1049,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1837:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1054,
                        "src": "1829:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1048,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1829:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1811:33:3"
                  },
                  "returnParameters": {
                    "id": 1053,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1052,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1054,
                        "src": "1863:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1051,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1863:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1862:6:3"
                  },
                  "scope": 1085,
                  "src": "1795:74:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1055,
                    "nodeType": "StructuredDocumentation",
                    "src": "1875:296:3",
                    "text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 1066,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2185:12:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1062,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1057,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "2215:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1066,
                        "src": "2207:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1056,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2207:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1059,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "2239:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1066,
                        "src": "2231:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1058,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2231:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1061,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2266:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1066,
                        "src": "2258:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1060,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2258:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2197:81:3"
                  },
                  "returnParameters": {
                    "id": 1065,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1064,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1066,
                        "src": "2297:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1063,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2297:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2296:6:3"
                  },
                  "scope": 1085,
                  "src": "2176:127:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1067,
                    "nodeType": "StructuredDocumentation",
                    "src": "2309:158:3",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "id": 1075,
                  "name": "Transfer",
                  "nameLocation": "2478:8:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1074,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1069,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2503:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1075,
                        "src": "2487:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1068,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2487:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1071,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2525:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1075,
                        "src": "2509:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1070,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2509:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1073,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2537:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1075,
                        "src": "2529:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1072,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2529:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2486:57:3"
                  },
                  "src": "2472:72:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1076,
                    "nodeType": "StructuredDocumentation",
                    "src": "2550:148:3",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "id": 1084,
                  "name": "Approval",
                  "nameLocation": "2709:8:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1083,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1078,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2734:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1084,
                        "src": "2718:21:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1077,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2718:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1080,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2757:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1084,
                        "src": "2741:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1079,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2741:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1082,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2774:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1084,
                        "src": "2766:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1081,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2766:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2717:63:3"
                  },
                  "src": "2703:78:3"
                }
              ],
              "scope": 1086,
              "src": "187:2596:3",
              "usedErrors": []
            }
          ],
          "src": "91:2693:3"
        },
        "id": 3
      },
      "openzeppelin/token/ERC721/IERC721.sol": {
        "ast": {
          "absolutePath": "openzeppelin/token/ERC721/IERC721.sol",
          "exportedSymbols": {
            "IERC165": [
              1231
            ],
            "IERC721": [
              1201
            ]
          },
          "id": 1202,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1087,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "93:23:4"
            },
            {
              "absolutePath": "openzeppelin/utils/introspection/IERC165.sol",
              "file": "../../utils/introspection/IERC165.sol",
              "id": 1088,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1202,
              "sourceUnit": 1232,
              "src": "118:47:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1090,
                    "name": "IERC165",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1231,
                    "src": "256:7:4"
                  },
                  "id": 1091,
                  "nodeType": "InheritanceSpecifier",
                  "src": "256:7:4"
                }
              ],
              "canonicalName": "IERC721",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1089,
                "nodeType": "StructuredDocumentation",
                "src": "167:67:4",
                "text": " @dev Required interface of an ERC721 compliant contract."
              },
              "fullyImplemented": false,
              "id": 1201,
              "linearizedBaseContracts": [
                1201,
                1231
              ],
              "name": "IERC721",
              "nameLocation": "245:7:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1092,
                    "nodeType": "StructuredDocumentation",
                    "src": "270:88:4",
                    "text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
                  },
                  "id": 1100,
                  "name": "Transfer",
                  "nameLocation": "369:8:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1099,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1094,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "394:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1100,
                        "src": "378:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1093,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "378:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1096,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "416:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1100,
                        "src": "400:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1095,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "400:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1098,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "436:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1100,
                        "src": "420:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1097,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "420:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "377:67:4"
                  },
                  "src": "363:82:4"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1101,
                    "nodeType": "StructuredDocumentation",
                    "src": "451:94:4",
                    "text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
                  },
                  "id": 1109,
                  "name": "Approval",
                  "nameLocation": "556:8:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1108,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1103,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "581:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1109,
                        "src": "565:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1102,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "565:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1105,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "approved",
                        "nameLocation": "604:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1109,
                        "src": "588:24:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1104,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "588:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1107,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "630:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1109,
                        "src": "614:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1106,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "614:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "564:74:4"
                  },
                  "src": "550:89:4"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1110,
                    "nodeType": "StructuredDocumentation",
                    "src": "645:117:4",
                    "text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
                  },
                  "id": 1118,
                  "name": "ApprovalForAll",
                  "nameLocation": "773:14:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1117,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1112,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "804:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1118,
                        "src": "788:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1111,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "788:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1114,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "827:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1118,
                        "src": "811:24:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1113,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "811:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1116,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "approved",
                        "nameLocation": "842:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1118,
                        "src": "837:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1115,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "837:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "787:64:4"
                  },
                  "src": "767:85:4"
                },
                {
                  "documentation": {
                    "id": 1119,
                    "nodeType": "StructuredDocumentation",
                    "src": "858:76:4",
                    "text": " @dev Returns the number of tokens in ``owner``'s account."
                  },
                  "functionSelector": "70a08231",
                  "id": 1126,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "948:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1122,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1121,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "966:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1126,
                        "src": "958:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1120,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "958:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "957:15:4"
                  },
                  "returnParameters": {
                    "id": 1125,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1124,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "1004:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1126,
                        "src": "996:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1123,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "996:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "995:17:4"
                  },
                  "scope": 1201,
                  "src": "939:74:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1127,
                    "nodeType": "StructuredDocumentation",
                    "src": "1019:131:4",
                    "text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
                  },
                  "functionSelector": "6352211e",
                  "id": 1134,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "ownerOf",
                  "nameLocation": "1164:7:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1129,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "1180:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1134,
                        "src": "1172:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1128,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1172:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1171:17:4"
                  },
                  "returnParameters": {
                    "id": 1133,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1132,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1220:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1134,
                        "src": "1212:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1131,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1212:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1211:15:4"
                  },
                  "scope": 1201,
                  "src": "1155:72:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1135,
                    "nodeType": "StructuredDocumentation",
                    "src": "1233:690:4",
                    "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "42842e0e",
                  "id": 1144,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nameLocation": "1937:16:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1142,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1137,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1971:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1144,
                        "src": "1963:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1136,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1963:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1139,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1993:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1144,
                        "src": "1985:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1138,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1985:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1141,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2013:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1144,
                        "src": "2005:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1140,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2005:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1953:73:4"
                  },
                  "returnParameters": {
                    "id": 1143,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2035:0:4"
                  },
                  "scope": 1201,
                  "src": "1928:108:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1145,
                    "nodeType": "StructuredDocumentation",
                    "src": "2042:504:4",
                    "text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 1154,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2560:12:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1152,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1147,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2590:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1154,
                        "src": "2582:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1146,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2582:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1149,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2612:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1154,
                        "src": "2604:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1148,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2604:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1151,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2632:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1154,
                        "src": "2624:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1150,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2624:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2572:73:4"
                  },
                  "returnParameters": {
                    "id": 1153,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2654:0:4"
                  },
                  "scope": 1201,
                  "src": "2551:104:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1155,
                    "nodeType": "StructuredDocumentation",
                    "src": "2661:452:4",
                    "text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 1162,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "3127:7:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1160,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1157,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3143:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1162,
                        "src": "3135:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1156,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3135:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1159,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3155:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1162,
                        "src": "3147:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1158,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3147:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3134:29:4"
                  },
                  "returnParameters": {
                    "id": 1161,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3172:0:4"
                  },
                  "scope": 1201,
                  "src": "3118:55:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1163,
                    "nodeType": "StructuredDocumentation",
                    "src": "3179:139:4",
                    "text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
                  },
                  "functionSelector": "081812fc",
                  "id": 1170,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getApproved",
                  "nameLocation": "3332:11:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1166,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1165,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3352:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1170,
                        "src": "3344:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1164,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3344:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3343:17:4"
                  },
                  "returnParameters": {
                    "id": 1169,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1168,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3392:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1170,
                        "src": "3384:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1167,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3384:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3383:18:4"
                  },
                  "scope": 1201,
                  "src": "3323:79:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1171,
                    "nodeType": "StructuredDocumentation",
                    "src": "3408:309:4",
                    "text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
                  },
                  "functionSelector": "a22cb465",
                  "id": 1178,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setApprovalForAll",
                  "nameLocation": "3731:17:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1176,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1173,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3757:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1178,
                        "src": "3749:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1172,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3749:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1175,
                        "mutability": "mutable",
                        "name": "_approved",
                        "nameLocation": "3772:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1178,
                        "src": "3767:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1174,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3767:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3748:34:4"
                  },
                  "returnParameters": {
                    "id": 1177,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3791:0:4"
                  },
                  "scope": 1201,
                  "src": "3722:70:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1179,
                    "nodeType": "StructuredDocumentation",
                    "src": "3798:138:4",
                    "text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
                  },
                  "functionSelector": "e985e9c5",
                  "id": 1188,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isApprovedForAll",
                  "nameLocation": "3950:16:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1184,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1181,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3975:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1188,
                        "src": "3967:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1180,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3967:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1183,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3990:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1188,
                        "src": "3982:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1182,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3982:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3966:33:4"
                  },
                  "returnParameters": {
                    "id": 1187,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1186,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1188,
                        "src": "4023:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1185,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4023:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4022:6:4"
                  },
                  "scope": 1201,
                  "src": "3941:88:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1189,
                    "nodeType": "StructuredDocumentation",
                    "src": "4035:556:4",
                    "text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "b88d4fde",
                  "id": 1200,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nameLocation": "4605:16:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1198,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1191,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "4639:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1200,
                        "src": "4631:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1190,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4631:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1193,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4661:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1200,
                        "src": "4653:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1192,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4653:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1195,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "4681:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1200,
                        "src": "4673:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1194,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4673:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1197,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "4713:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1200,
                        "src": "4698:19:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1196,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4698:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4621:102:4"
                  },
                  "returnParameters": {
                    "id": 1199,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4732:0:4"
                  },
                  "scope": 1201,
                  "src": "4596:137:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1202,
              "src": "235:4500:4",
              "usedErrors": []
            }
          ],
          "src": "93:4643:4"
        },
        "id": 4
      },
      "openzeppelin/token/ERC721/IERC721Receiver.sol": {
        "ast": {
          "absolutePath": "openzeppelin/token/ERC721/IERC721Receiver.sol",
          "exportedSymbols": {
            "IERC721Receiver": [
              1219
            ]
          },
          "id": 1220,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1203,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:23:5"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC721Receiver",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1204,
                "nodeType": "StructuredDocumentation",
                "src": "126:152:5",
                "text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
              },
              "fullyImplemented": false,
              "id": 1219,
              "linearizedBaseContracts": [
                1219
              ],
              "name": "IERC721Receiver",
              "nameLocation": "289:15:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1205,
                    "nodeType": "StructuredDocumentation",
                    "src": "311:485:5",
                    "text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."
                  },
                  "functionSelector": "150b7a02",
                  "id": 1218,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "onERC721Received",
                  "nameLocation": "810:16:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1214,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1207,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "844:8:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1218,
                        "src": "836:16:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1206,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "836:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1209,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "870:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1218,
                        "src": "862:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1208,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "862:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1211,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "892:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1218,
                        "src": "884:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1210,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "884:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1213,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "924:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1218,
                        "src": "909:19:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1212,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "909:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "826:108:5"
                  },
                  "returnParameters": {
                    "id": 1217,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1216,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1218,
                        "src": "953:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 1215,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "953:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "952:8:5"
                  },
                  "scope": 1219,
                  "src": "801:160:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1220,
              "src": "279:684:5",
              "usedErrors": []
            }
          ],
          "src": "101:863:5"
        },
        "id": 5
      },
      "openzeppelin/utils/introspection/IERC165.sol": {
        "ast": {
          "absolutePath": "openzeppelin/utils/introspection/IERC165.sol",
          "exportedSymbols": {
            "IERC165": [
              1231
            ]
          },
          "id": 1232,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1221,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "100:23:6"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC165",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1222,
                "nodeType": "StructuredDocumentation",
                "src": "125:279:6",
                "text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
              },
              "fullyImplemented": false,
              "id": 1231,
              "linearizedBaseContracts": [
                1231
              ],
              "name": "IERC165",
              "nameLocation": "415:7:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1223,
                    "nodeType": "StructuredDocumentation",
                    "src": "429:340:6",
                    "text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 1230,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "783:17:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1226,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1225,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "808:11:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1230,
                        "src": "801:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 1224,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "801:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "800:20:6"
                  },
                  "returnParameters": {
                    "id": 1229,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1228,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1230,
                        "src": "844:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1227,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "844:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "843:6:6"
                  },
                  "scope": 1231,
                  "src": "774:76:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1232,
              "src": "405:447:6",
              "usedErrors": []
            }
          ],
          "src": "100:753:6"
        },
        "id": 6
      }
    }
  }
}
